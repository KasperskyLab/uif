"use strict";(self.webpackChunk_kaspersky_hexa_ui=self.webpackChunk_kaspersky_hexa_ui||[]).push([[964],{"./.storybook/helpers.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ac:()=>sbSetDefaultValue,Of:()=>sbHideControls,RV:()=>sbMergeActions,zf:()=>sbFixArrayArgs});const sbSetDefaultValue=text=>({table:{defaultValue:{summary:text}}}),sbHideControls=controls=>controls.reduce(((acc,control)=>(acc[control]={control:!1},acc)),{});function sbFixArrayArgs(args,arrayKeys){const out={...args};for(const key of arrayKeys)Array.isArray(out[key])||delete out[key];return out}function sbMergeActions(args,actions){const out={...args};for(const key in actions){const addonAction=out[key],action=actions[key];out[key]=(...args2)=>{null==addonAction||addonAction(...args2),action(...args2)}}return out}},"./src/radio/Radio.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{s:()=>Radio});var AdditionalContent=__webpack_require__("./helpers/components/AdditionalContent.tsx"),useTestAttribute=__webpack_require__("./helpers/hooks/useTestAttribute.ts"),FormLabel=__webpack_require__("./src/form-label/FormLabel.tsx"),es_radio=__webpack_require__("./node_modules/antd/es/radio/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),radioCss=__webpack_require__("./src/radio/radioCss.ts"),useThemedComponent=__webpack_require__("./helpers/useThemedComponent.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const StyledRadioGroup=(0,styled_components_browser_esm.Ay)(es_radio.Ay.Group).withConfig({shouldForwardProp:prop=>!["cssConfig"].includes(prop)}).withConfig({displayName:"Radio__StyledRadioGroup",componentId:"sc-xri1cq-0"})(["",""],radioCss.Nl),Radio=rawProps=>{try{checkDuplicateOptionValues(rawProps.options)}catch(error){console.error(error)}const props=(props=>(0,useThemedComponent.K)(props,{componentName:"radio",defaultValues:{}}))(rawProps),{testAttributes}=(0,useTestAttribute.a)(props);return react.createElement(RadioView,_extends({role:"radioList",testAttributes},props))},RadioView=({vertical,invalid,disabled,readonly,options,value,className,testId,theme,testAttributes,...rest})=>{const newClassName=(0,react.useMemo)((()=>classnames_default()(className,{"kl-radio-invalid":invalid,"ant-radio-vertical":vertical})),[vertical,invalid,className]),optionsWithIds=react.useMemo((()=>options.map((option=>({...option,_id:(0,v4.A)()})))),[options]);return react.createElement(StyledRadioGroup,_extends({className:newClassName,value,disabled:disabled||readonly},testAttributes,rest),optionsWithIds.map((option=>react.createElement("div",{key:option._id},react.createElement(es_radio.Ay,{id:option._id,value:option.value,"data-testid":`${testId}-${option.value}`,disabled:option.disabled||option.readonly,className:classnames_default()(className,{"kl-radio-readonly":option.readonly&&!disabled||readonly,"radio-string-label":"string"==typeof option.label})},"string"==typeof option.label?react.createElement(FormLabel.l,{testId:`${testId}-${option.value}`,required:option.required,tooltip:option.tooltip,disabled:option.disabled,theme,htmlFor:option._id},option.label):option.label),react.createElement(AdditionalContent.P,{description:option.description,dependentElement:option.dependentElement})))))},checkDuplicateOptionValues=options=>{const values=options.map((option=>option.value)),uniqueValues=new Set(values);if(values.length!==uniqueValues.size)throw new Error("Radio options must have unique values")};Radio.__docgenInfo={description:"",methods:[],displayName:"Radio",props:{vertical:{required:!1,tsType:{name:"boolean"},description:"If orientation is vertical"},disabled:{required:!1,tsType:{name:"boolean"},description:"Is disabled"},readonly:{required:!1,tsType:{name:"boolean"},description:"Is readonly"},invalid:{required:!1,tsType:{name:"boolean"},description:"Is invalid"},role:{required:!1,tsType:{name:"string"},description:"HTML role"},options:{required:!0,tsType:{name:"Array",elements:[{name:"intersection",raw:"T & {\n  description?: string,\n  dependentElement?: ReactNode\n}",elements:[{name:"signature",type:"object",raw:"{\n  label: Exclude<ReactNode, null | undefined>,\n  value: string,\n  disabled?: boolean,\n  readonly?: boolean,\n  required?: boolean,\n  tooltip?: ReactNode\n}",signature:{properties:[{key:"label",value:{name:"Exclude",elements:[{name:"ReactNode"},{name:"union",raw:"null | undefined",elements:[{name:"null"},{name:"undefined"}]}],raw:"Exclude<ReactNode, null | undefined>",required:!0}},{key:"value",value:{name:"string",required:!0}},{key:"disabled",value:{name:"boolean",required:!1}},{key:"readonly",value:{name:"boolean",required:!1}},{key:"required",value:{name:"boolean",required:!1}},{key:"tooltip",value:{name:"ReactNode",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  description?: string,\n  dependentElement?: ReactNode\n}",signature:{properties:[{key:"description",value:{name:"string",required:!1}},{key:"dependentElement",value:{name:"ReactNode",required:!1}}]}}]}],raw:"RadioOption[]"},description:"Array of options"},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Custom theme"},testId:{required:!1,tsType:{name:"string"},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},klId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},componentId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},dataTestId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},componentType:{required:!1,tsType:{name:"string"},description:""}}},RadioView.__docgenInfo={description:"",methods:[],displayName:"RadioView",props:{cssConfig:{required:!0,tsType:{name:"CssConfig"},description:""},testAttributes:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n  'data-component-version'?: string,\n  'data-testid'?: string,\n  'kl-id'?: string,\n  'data-component-type'?: string\n}",signature:{properties:[{key:"data-component-version",value:{name:"string",required:!1}},{key:"data-testid",value:{name:"string",required:!1}},{key:"kl-id",value:{name:"string",required:!1}},{key:"data-component-type",value:{name:"string",required:!1}}]}},description:""}}}},"./src/radio/radioCss.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Nl:()=>radioCss,_k:()=>getInternalRadioCss});var _helpers_getFromProps__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./helpers/getFromProps.ts"),styled_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const fromRadioProps=(0,_helpers_getFromProps__WEBPACK_IMPORTED_MODULE_0__.P)(),getInternalRadioCss=fromProps=>(0,styled_components__WEBPACK_IMPORTED_MODULE_1__.AH)([".ant-radio-wrapper{display:flex;flex-direction:row;align-items:start;padding:0;margin:0;color:",";white-space:unset;& > span + span{padding:0 0 0 4px;}}.ant-radio-inner{width:calc(14px);height:calc(14px);background-color:",";border-color:",";&::after{transform:scale(calc(0.5));width:calc(16px);height:calc(16px);margin-top:calc(-8px);margin-left:calc(-8px);transition:opacity 0.1s ease-in-out !important;left:50%;top:50%;background-color:",";}}.ant-radio-checked .ant-radio-inner::after{background-color:",";}.ant-radio-checked::after{display:none;}.ant-radio-wrapper:hover{.ant-radio-inner{border-color:",";background-color:",";&::after{background-color:",";}}}.ant-radio-wrapper:active,.ant-radio-wrapper:hover:active{.ant-radio-inner{border-color:",";background-color:",";&::after{background-color:",";}}}&& .ant-radio-input:focus + .ant-radio-inner{border-color:",";outline:none;box-shadow:none;}&& .ant-radio-input:focus-visible + .ant-radio-inner{border-color:",";outline:none;box-shadow:",";}.ant-radio-wrapper{&,&:hover,&:active,&:focus{&.ant-radio-wrapper-disabled{span{color:","}.ant-radio-inner{border-color:"," !important;background-color:",";&::after{background-color:",";}}}}}"],fromProps("enabled.color"),fromProps("enabled.background"),fromProps("enabled.border"),fromProps("enabled.dotColor"),fromProps("enabled.dotColor"),fromProps("hover.border"),fromProps("hover.background"),fromProps("hover.dotColor"),fromProps("active.border"),fromProps("active.background"),fromProps("active.dotColor"),fromProps("enabled.border"),fromProps("enabled.border"),fromProps("focus.boxShadow"),fromProps("disabled.color"),fromProps("disabled.border"),fromProps("disabled.background"),fromProps("disabled.dotColor")),radioCss=(fromProps=fromRadioProps,(0,styled_components__WEBPACK_IMPORTED_MODULE_1__.AH)(["display:flex;flex-direction:row;gap:12px;.ant-radio{display:flex;top:inherit;height:20px;align-items:center;}&.ant-radio-vertical{flex-direction:column;gap:8px;}.kl-radio-readonly.ant-radio-wrapper{&,&:hover,&:active,&:focus{&.ant-radio-wrapper-disabled{&,*{cursor:default;}span{color:","}.ant-radio-inner{border-color:"," !important;background-color:",";&::after{background-color:",";}}}}}&.kl-radio-invalid .ant-radio-wrapper:not(.ant-radio-wrapper-disabled){&,&:hover,&:active,&:focus{.ant-radio-inner{border-color:",";&::after{background-color:",";}}.ant-radio-inner{background-color:",";}}}",""],fromProps("readonly.color"),fromProps("readonly.border"),fromProps("readonly.background"),fromProps("readonly.dotColor"),fromProps("invalid.border"),fromProps("invalid.dotColor"),fromProps("enabled.background"),getInternalRadioCss(fromRadioProps)));var fromProps},"./src/tree/Tree.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{y$:()=>Spinner,PH:()=>Tree,qN:()=>TreeNodeCheckIcon});var useTestAttribute=__webpack_require__("./helpers/hooks/useTestAttribute.ts"),Checkbox=__webpack_require__("./src/checkbox/Checkbox.tsx"),Radio=__webpack_require__("./src/radio/Radio.tsx"),tree=__webpack_require__("./node_modules/antd/es/tree/index.js"),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),ArrowDownSolid=__webpack_require__("./node_modules/@kaspersky/hexa-ui-icons/esm/8/ArrowDownSolid.js"),Loader=__webpack_require__("./src/loader/Loader.tsx"),treeCss=__webpack_require__("./src/tree/treeCss.ts"),useThemedComponent=__webpack_require__("./helpers/useThemedComponent.tsx");var utils=__webpack_require__("./src/tree/utils.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const CustomCheckboxIcon=({checked,disabled})=>react.createElement(react.Fragment,null,react.createElement(Checkbox.Sc,{className:"kl-v6-checkbox-icon-normal",checked,disabled}),react.createElement(Checkbox.Sc,{className:"kl-v6-checkbox-icon-indeterminate",disabled,indeterminate:!0})),CustomRadioIcon=({checked,disabled})=>react.createElement(Radio.s,{disabled,value:checked?"1":"2",options:[{label:"",value:"1"}]}),TreeNodeCheckIcon=({checkable,checked,disabled,multiple})=>!1===checkable?null:multiple?react.createElement(CustomCheckboxIcon,{checked,disabled}):react.createElement(CustomRadioIcon,{checked,disabled}),Spinner=(0,styled_components_browser_esm.Ay)((({className})=>react.createElement("span",{className},react.createElement(Loader.a,{size:"small"})))).withConfig({displayName:"Tree__Spinner",componentId:"sc-1ko9g7p-0"})(["width:0;height:0;display:block;> .ant-spin{transform:translate(calc(-100% - 4px),-1px);}"]),StyledTreeView=(0,styled_components_browser_esm.Ay)(tree.A).withConfig({shouldForwardProp:prop=>!["cssConfig"].includes(prop)}).withConfig({displayName:"Tree__StyledTreeView",componentId:"sc-1ko9g7p-1"})([""," .ant-tree-icon__customize:has(",":last-child){width:0;margin-right:-4px;}"],treeCss.Y,Spinner),TreeView=({checkChildren=!0,checkStrictly=!1,checkable=!1,checkedKeys,defaultCheckedKeys,disabled=!1,draggable=!1,invalid=!1,multiple=!0,onCheck,selectable=!1,treeData,testAttributes,allowUncheck=!0,checkParents=!1,...props})=>{const parents=react.useMemo((()=>(0,utils.wT)(treeData)),[treeData]),[nonStrictlyCheckedKeys,setNonStrictlyCheckedKeys]=react.useState((()=>(0,utils.Ai)(treeData,defaultCheckedKeys))),treeCheckedKeys=react.useMemo((()=>multiple?checkStrictly?checkedKeys:nonStrictlyCheckedKeys:[...nonStrictlyCheckedKeys.checked,...nonStrictlyCheckedKeys.halfChecked]),[multiple,checkStrictly,nonStrictlyCheckedKeys,checkedKeys]);react.useEffect((()=>{!checkStrictly&&checkedKeys&&setNonStrictlyCheckedKeys((0,utils.Ai)(treeData,checkedKeys))}),[checkStrictly,checkedKeys,treeData]);return react.createElement(StyledTreeView,_extends({draggable,checkStrictly:!0,checkable,checkedKeys:treeCheckedKeys,disabled,icon:props=>react.createElement(react.Fragment,null,props.loading&&react.createElement(Spinner,null),react.createElement(TreeNodeCheckIcon,_extends({},props,{multiple}))),invalid,onCheck:checkStrictly?onCheck:(_,event)=>{const checked=new Set(nonStrictlyCheckedKeys.checked),halfChecked=new Set(nonStrictlyCheckedKeys.halfChecked),node=event.node;if(event.checked&&!halfChecked.has(node.key))if(multiple){(0,utils.Ps)(node,checkChildren,checked,halfChecked);let parent=parents[node.key];if(checkParents)for(;parent;)checked.delete(parent.key),halfChecked.delete(parent.key),(0,utils.IU)(parent,checked,!1)?halfChecked.add(parent.key):checked.add(parent.key),parent=parents[parent.key];else for(;parent&&halfChecked.has(parent.key)&&!(0,utils._3)(parent,checked);)checked.add(parent.key),halfChecked.delete(parent.key),parent=parents[parent.key]}else checked.clear(),halfChecked.clear(),(0,utils.Ps)(node,!1,checked,halfChecked);else{if(!allowUncheck)return;(0,utils.mX)(node,checkChildren,checked,halfChecked);let parent=parents[node.key];if(checkParents)for(;parent;)checked.delete(parent.key),(0,utils.IU)(parent,checked,!0)?halfChecked.add(parent.key):halfChecked.delete(parent.key),parent=parents[parent.key];else for(;parent&&halfChecked.has(parent.key)&&!(0,utils._3)(parent,checked);)checked.add(parent.key),halfChecked.delete(parent.key),parent=parents[parent.key]}const checkedKeys=Array.from(checked),halfCheckedKeys=Array.from(halfChecked);setNonStrictlyCheckedKeys({checked:checkedKeys,halfChecked:halfCheckedKeys}),onCheck&&onCheck([...checkedKeys,...halfCheckedKeys],event)},selectable:!checkable&&selectable,showIcon:checkable,switcherIcon:react.createElement(ArrowDownSolid.A,null),treeData},testAttributes,props,{showLine:!1,motion:!1}))},Tree=rawProps=>{const themedProps=(props=>(0,useThemedComponent.K)(props,{componentName:"tree",defaultValues:{}}))(rawProps),props=(0,useTestAttribute.a)(themedProps);return react.createElement(TreeView,props)};TreeNodeCheckIcon.__docgenInfo={description:"",methods:[],displayName:"TreeNodeCheckIcon",props:{checkable:{required:!1,tsType:{name:"boolean"},description:""},checked:{required:!1,tsType:{name:"boolean"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},multiple:{required:!1,tsType:{name:"boolean"},description:""}}},TreeView.__docgenInfo={description:"",methods:[],displayName:"TreeView",props:{cssConfig:{required:!0,tsType:{name:"CssConfig"},description:""},testAttributes:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n  'data-component-version'?: string,\n  'data-testid'?: string,\n  'kl-id'?: string,\n  'data-component-type'?: string\n}",signature:{properties:[{key:"data-component-version",value:{name:"string",required:!1}},{key:"data-testid",value:{name:"string",required:!1}},{key:"kl-id",value:{name:"string",required:!1}},{key:"data-component-type",value:{name:"string",required:!1}}]}},description:""},checkChildren:{defaultValue:{value:"true",computed:!1},required:!1},checkStrictly:{defaultValue:{value:"false",computed:!1},required:!1},checkable:{defaultValue:{value:"false",computed:!1},required:!1},disabled:{defaultValue:{value:"false",computed:!1},required:!1},draggable:{defaultValue:{value:"false",computed:!1},required:!1},invalid:{defaultValue:{value:"false",computed:!1},required:!1},multiple:{defaultValue:{value:"true",computed:!1},required:!1},selectable:{defaultValue:{value:"false",computed:!1},required:!1},allowUncheck:{defaultValue:{value:"true",computed:!1},required:!1},checkParents:{defaultValue:{value:"false",computed:!1},required:!1}}},Tree.__docgenInfo={description:"@deprecated Use TreeList or TreeNav instead",methods:[],displayName:"Tree",props:{theme:{required:!1,tsType:{name:"ThemeKey"},description:"Custom theme"},testId:{required:!1,tsType:{name:"string"},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},klId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},componentId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},dataTestId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},componentType:{required:!1,tsType:{name:"string"},description:""},treeData:{required:!1,tsType:{name:"TreeProps['treeData']",raw:"TreeProps['treeData']"},description:"The treeNodes data Array, if set it then you need not construct children TreeNode.\n(key should be unique across the whole array)"},disabled:{required:!1,tsType:{name:"boolean"},description:"Whether disabled the tree"},draggable:{required:!1,tsType:{name:"union",raw:"DraggableFn | boolean | DraggableConfig",elements:[{name:"signature",type:"function",raw:"(node: DataNode) => boolean",signature:{arguments:[{type:{name:"DataNode"},name:"node"}],return:{name:"boolean"}}},{name:"boolean"},{name:"DraggableConfig"}]},description:"Specifies whether this Tree or the node is draggable"},showLine:{required:!1,tsType:{name:"union",raw:"boolean | { showLeafIcon: boolean }",elements:[{name:"boolean"},{name:"signature",type:"object",raw:"{ showLeafIcon: boolean }",signature:{properties:[{key:"showLeafIcon",value:{name:"boolean",required:!0}}]}}]},description:"@deprecated"},checkChildren:{required:!1,tsType:{name:"boolean"},description:"Whether to check children if the parent node is checked. Has no effect if checkStrictly is true"},checkParents:{required:!1,tsType:{name:"boolean"},description:"Whether to check/half check/uncheck parents if the node is checked. Has no effect if checkStrictly is true"},checkStrictly:{required:!1,tsType:{name:"boolean"},description:"Check treeNode precisely; parent treeNode and children treeNodes are not associated"},onCheck:{required:!1,tsType:{name:"signature",type:"function",raw:"(checkedKeys: Key[], e: TreeCheckEvent) => void | undefined",signature:{arguments:[{type:{name:"Array",elements:[{name:"Key"}],raw:"Key[]"},name:"checkedKeys"},{type:{name:"signature",type:"object",raw:"{\n  checked: boolean,\n  halfCheckedKeys: [],\n  event: Record<string, string>,\n  checkedNodes: Record<string, string>[],\n  node: { checked: boolean, key: string }\n}",signature:{properties:[{key:"checked",value:{name:"boolean",required:!0}},{key:"halfCheckedKeys",value:{name:"tuple",raw:"[]",elements:[],required:!0}},{key:"event",value:{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>",required:!0}},{key:"checkedNodes",value:{name:"Array",elements:[{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"}],raw:"Record<string, string>[]",required:!0}},{key:"node",value:{name:"signature",type:"object",raw:"{ checked: boolean, key: string }",signature:{properties:[{key:"checked",value:{name:"boolean",required:!0}},{key:"key",value:{name:"string",required:!0}}]},required:!0}}]}},name:"e"}],return:{name:"union",raw:"void | undefined",elements:[{name:"void"},{name:"undefined"}]}}},description:"Callback function for when the onCheck event occurs"},checkedKeys:{required:!1,tsType:{name:"union",raw:"string[] | undefined",elements:[{name:"Array",elements:[{name:"string"}],raw:"string[]"},{name:"undefined"}]},description:"Specifies the keys of the checked treeNodes"},onExpand:{required:!1,tsType:{name:"signature",type:"function",raw:"(newExpandedKeys: string[]) => void | undefined",signature:{arguments:[{type:{name:"Array",elements:[{name:"string"}],raw:"string[]"},name:"newExpandedKeys"}],return:{name:"union",raw:"void | undefined",elements:[{name:"void"},{name:"undefined"}]}}},description:"Callback function for when a treeNode is expanded or collapsed"},expandedKeys:{required:!1,tsType:{name:"union",raw:"string[] | undefined",elements:[{name:"Array",elements:[{name:"string"}],raw:"string[]"},{name:"undefined"}]},description:"Specifies the keys of the expanded treeNodes"},onLoad:{required:!1,tsType:{name:"signature",type:"function",raw:"(newExpandedKeys: string[]) => void | undefined",signature:{arguments:[{type:{name:"Array",elements:[{name:"string"}],raw:"string[]"},name:"newExpandedKeys"}],return:{name:"union",raw:"void | undefined",elements:[{name:"void"},{name:"undefined"}]}}},description:"Callback function for when a treeNode is loaded by loadData function"},loadedKeys:{required:!1,tsType:{name:"union",raw:"string[] | undefined",elements:[{name:"Array",elements:[{name:"string"}],raw:"string[]"},{name:"undefined"}]},description:"Specifies the keys of the loaded treeNodes by loadData function"},autoExpandParent:{required:!1,tsType:{name:"boolean"},description:"Whether to automatically expand a parent treeNode"},onDragStart:{required:!1,tsType:{name:"signature",type:"function",raw:"(info: NodeDragEventParams) => void",signature:{arguments:[{type:{name:"NodeDragEventParams"},name:"info"}],return:{name:"void"}}},description:"Callback function for when the onDragStart event occurs"},onDragEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n  info: NodeDragEventParams & {\n    expandedKeys: Key[]\n  }\n) => void",signature:{arguments:[{type:{name:"intersection",raw:"NodeDragEventParams & {\n  expandedKeys: Key[]\n}",elements:[{name:"NodeDragEventParams"},{name:"signature",type:"object",raw:"{\n  expandedKeys: Key[]\n}",signature:{properties:[{key:"expandedKeys",value:{name:"Array",elements:[{name:"Key"}],raw:"Key[]",required:!0}}]}}]},name:"info"}],return:{name:"void"}}},description:"Callback function for when the onDragEnter event occurs"},onDragOver:{required:!1,tsType:{name:"signature",type:"function",raw:"(info: NodeDragEventParams) => void",signature:{arguments:[{type:{name:"NodeDragEventParams"},name:"info"}],return:{name:"void"}}},description:"Callback function for when the onDragOver event occurs"},onDragLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(info: NodeDragEventParams) => void",signature:{arguments:[{type:{name:"NodeDragEventParams"},name:"info"}],return:{name:"void"}}},description:"Callback function for when the onDragLeave event occurs"},onDragEnd:{required:!1,tsType:{name:"signature",type:"function",raw:"(info: NodeDragEventParams) => void",signature:{arguments:[{type:{name:"NodeDragEventParams"},name:"info"}],return:{name:"void"}}},description:"Callback function for when the onDragEnd event occurs"},onDrop:{required:!1,tsType:{name:"signature",type:"function",raw:"(info: NodeDropEventParams) => void",signature:{arguments:[{type:{name:"intersection",raw:"NodeDragEventParams & {\n  dragNode: EventDataNode,\n  dragNodesKeys: Key[],\n  dropPosition: number,\n  dropToGap: boolean\n}",elements:[{name:"NodeDragEventParams"},{name:"signature",type:"object",raw:"{\n  dragNode: EventDataNode,\n  dragNodesKeys: Key[],\n  dropPosition: number,\n  dropToGap: boolean\n}",signature:{properties:[{key:"dragNode",value:{name:"EventDataNode",required:!0}},{key:"dragNodesKeys",value:{name:"Array",elements:[{name:"Key"}],raw:"Key[]",required:!0}},{key:"dropPosition",value:{name:"number",required:!0}},{key:"dropToGap",value:{name:"boolean",required:!0}}]}}]},name:"info"}],return:{name:"void"}}},description:"Callback function for when the onDrop event occurs"},defaultCheckedKeys:{required:!1,tsType:{name:"Array",elements:[{name:"Key"}],raw:"Key[]"},description:"Specify the keys of the default checked treeNodes"},defaultExpandedKeys:{required:!1,tsType:{name:"Array",elements:[{name:"Key"}],raw:"Key[]"},description:"Specify the keys of the default expanded treeNodes"},blockNode:{required:!1,tsType:{name:"boolean"},description:"Whether treeNode fill remaining horizontal space"},allowUncheck:{required:!1,tsType:{name:"boolean"},description:"Whether user can uncheck an item"},height:{required:!1,tsType:{name:"number"},description:"Config virtual scroll height. Will not support horizontal scroll when enable this"},virtual:{required:!1,tsType:{name:"boolean"},description:"Disable virtual scroll when set to false"},invalid:{required:!1,tsType:{name:"boolean"},description:"Is invalid"},checkable:{required:!1,tsType:{name:"boolean"},description:""},selectable:{required:!1,tsType:{name:"boolean"},description:""},disableNodeBg:{required:!1,tsType:{name:"boolean"},description:""},multiple:{required:!1,tsType:{name:"boolean"},description:""},icon:{required:!1,tsType:{name:"TreeProps['icon']",raw:"TreeProps['icon']"},description:""}}}},"./src/tree/treeCss.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Y:()=>treeCss});var _design_system_theme__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./design-system/theme/themes/variables.ts"),_design_system_tokens__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./design-system/tokens/typography.ts"),_helpers_getFromProps__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./helpers/getFromProps.ts"),_src_checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/checkbox/Checkbox.tsx"),styled_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_kaspersky_hexa_ui_core_typography_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@kaspersky/hexa-ui-core/esm/typography/js/index.js");const fromProps=(0,_helpers_getFromProps__WEBPACK_IMPORTED_MODULE_0__.P)(),textSizes=(0,_design_system_tokens__WEBPACK_IMPORTED_MODULE_1__.ip)(_kaspersky_hexa_ui_core_typography_js__WEBPACK_IMPORTED_MODULE_2__.jA.BTR3),treeCss=(0,styled_components__WEBPACK_IMPORTED_MODULE_3__.AH)(["&&{background:none;border:1px solid transparent;border-radius:8px;"," &.ant-tree-focused{background:transparent;}.ant-tree-drop-indicator{display:none;}.ant-tree-list .ant-tree-node-content-wrapper .ant-tree-title{font-family:",";font-size:",";line-height:",";font-weight:",";font-style:",";letter-spacing:",";}.ant-tree-list .ant-tree-node-content-wrapper:hover,.ant-tree-list .ant-tree-node-selected{background-color:transparent;}.ant-tree-node-content-wrapper{padding-left:3px;cursor:",";flex:1;}.ant-tree-draggable-icon + .ant-tree-switcher-noop{display:none;}.ant-tree-checkbox + .ant-tree-node-content-wrapper{padding-left:","px;cursor:pointer;}.anticon-file,.ant-tree-draggable-icon,.ant-tree-switcher-icon{opacity:1;color:",";}.ant-tree-switcher{width:16px;background:none;}.ant-tree-switcher-loading-icon{display:none;}.ant-tree-list{.ant-tree-treenode{width:100%;}}.ant-tree-treenode{position:relative;margin:1px 0;padding:","px ","px ","px ","px;border-radius:8px;transition-duration:0.2s;border:2px solid transparent;background:none;&:has(.ant-tree-drop-indicator){&:after{height:4px;display:block;content:'';background-color:",";position:absolute;bottom:-2px;left:0;right:0;}&.drag-over-gap-top:after{bottom:unset;top:-2px;}}&:not(.ant-tree-treenode-selected):not(.ant-tree-treenode-checkbox-checked){.ant-tree-title{color:",";}&:hover{&,& .ant-checkbox:not(.ant-checkbox-indeterminate) .ant-checkbox-inner{background-color:transparent;}}&:active{&,& .ant-checkbox:not(.ant-checkbox-indeterminate) .ant-checkbox-inner{background-color:transparent;}}&.ant-tree-treenode-active{border-color:",";background:none;.ant-tree-node-content-wrapper{background:transparent;}}&.ant-tree-treenode-disabled{background:none;.ant-tree-title{color:",";}}}&.ant-tree-treenode-selected,&.ant-tree-treenode-checkbox-checked{background-color:transparent;.ant-tree-title{color:",";}&:hover{&{background-color:transparent;}.ant-tree-title{color:",";}}&:active{&{background-color:transparent;}.ant-tree-title{color:",";}}&.ant-tree-treenode-active{border-color:",";background-color:transparent;.ant-tree-title{color:",";}.ant-tree-node-content-wrapper{background:transparent;}}&.ant-tree-treenode-disabled{background-color:transparent;.ant-tree-title{color:",";}}}.ant-tree-indent-unit{width:18px;&:before{top:-8px;right:10px;bottom:-2px;border-color:",";}}&.dragging{background-color:transparent !important;.ant-tree-title{color:",';}& > *{opacity:0;}&:after{display:none;}}&:not(.ant-tree-treenode-draggable) .ant-tree-draggable-icon{opacity:0.5;}&[draggable="true"]{.ant-tree-indent-unit{&:before{top:-10px;right:',"px;}}}.ant-tree-switcher-icon{transform:rotate(0) translateY(-1px);transition:transform 0.25s ease-in-out;}&.ant-tree-treenode-switcher-close{.ant-tree-switcher{.ant-tree-switcher-icon{transform:rotate(-90deg) translate(1px,0);}}}.ant-tree-switcher-leaf-line{&:before{bottom:-2px;right:8px;top:-8px;border-color:",";}&:after{display:none;}}&.ant-tree-treenode-leaf-last{.ant-tree-switcher-leaf-line{&:before{top:-8px !important;height:23px !important;}}}&.ant-tree-treenode-checkbox-indeterminate .kl-v6-checkbox-icon-normal,&:not(.ant-tree-treenode-checkbox-indeterminate) .kl-v6-checkbox-icon-indeterminate{display:none;}.ant-radio-group{transform:translateY(2px);}}.ant-tree-checkbox{margin:0 0 0 -20px;padding:0;transform:translate(19px,2px);opacity:0;}.ant-tree-iconEle:not(:empty) + .ant-tree-title{padding-left:","px;}.ant-tree-node-content-wrapper .ant-tree-iconEle{width:14px;height:14px;.ant-checkbox{top:","px;}}.ant-checkbox-wrapper{& + .kl-v6-checkbox-icon-indeterminate{margin-left:0;}}.ant-checkbox-checked::after{border:none;}","{padding-top:3px;+ ","{padding-top:0;}}}"],(props=>props.invalid&&`\n      border-color: ${fromProps("error.border")(props)};\n    `),textSizes.fontFamily,textSizes.fontSize,textSizes.lineHeight,textSizes.fontWeight,textSizes.fontStyle,textSizes.letterSpacing,(props=>props.disableNodeBg?"default":"pointer"),_design_system_theme__WEBPACK_IMPORTED_MODULE_4__.m[3],fromProps("enabled.arrowColor"),_design_system_theme__WEBPACK_IMPORTED_MODULE_4__.m[1],_design_system_theme__WEBPACK_IMPORTED_MODULE_4__.m[5],_design_system_theme__WEBPACK_IMPORTED_MODULE_4__.m[1],_design_system_theme__WEBPACK_IMPORTED_MODULE_4__.m[1],fromProps("focus.color"),fromProps("enabled.color"),fromProps("focus.color"),fromProps("disabled.color"),fromProps("enabled.color"),(props=>props.disableNodeBg?fromProps("enabled.color"):fromProps("hover.color")),(props=>props.disableNodeBg?fromProps("enabled.color"):fromProps("active.color")),fromProps("focus.color"),fromProps("enabled.color"),fromProps("disabled.color"),fromProps("enabled.lineColor"),fromProps("enabled.color"),_design_system_theme__WEBPACK_IMPORTED_MODULE_4__.m[3],fromProps("enabled.lineColor"),_design_system_theme__WEBPACK_IMPORTED_MODULE_4__.m[2],_design_system_theme__WEBPACK_IMPORTED_MODULE_4__.m[1],_src_checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_5__.qX,_src_checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_5__.qX)},"./src/tree/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function hasUncheckedChildren(node,checked){if(!node.children)return!1;for(const child of node.children){if(!checked.has(child.key))return!0;if(hasUncheckedChildren(child,checked))return!0}return!1}function checkNode(node,checkChildren,checked,halfChecked){if(checkChildren){if(checked.add(node.key),halfChecked.delete(node.key),!node.children)return;for(const child of node.children)checkNode(child,checkChildren,checked,halfChecked)}else hasUncheckedChildren(node,checked)?halfChecked.add(node.key):checked.add(node.key)}function uncheckNode(node,uncheckChildren,checked,halfChecked){if(checked.delete(node.key),halfChecked.delete(node.key),uncheckChildren&&node.children)for(const child of node.children)uncheckNode(child,uncheckChildren,checked,halfChecked)}function getParents(treeData){const out={},collect=node=>{if(node.children)for(const child of node.children)out[child.key]=node,collect(child)};return treeData&&treeData.forEach(collect),out}function sortCheckedKeys(treeData,keys){if(!keys)return{checked:[],halfChecked:[]};const nodes=function getNodes(treeData){const out={},collect=node=>{var _node$children;out[node.key]=node,null===(_node$children=node.children)||void 0===_node$children||_node$children.forEach(collect)};return treeData&&treeData.forEach(collect),out}(treeData),checked=[],halfChecked=[];for(const key of keys)nodes[key]&&(hasUncheckedChildren(nodes[key],new Set(keys))?halfChecked.push(key):checked.push(key));return{checked,halfChecked}}function hasRecursiveChildren(node,checked,shouldBeChecked){return function check(childNode){if(shouldBeChecked){if(checked.has(childNode.key))return!0}else if(!checked.has(childNode.key)&&node.key!==childNode.key)return!0;const children=childNode.children||[];for(let i=0;i<children.length;i++){if(check(children[i]))return!0}return!1}(node)}function applyDropToTreeData(info,treeData){const dropKey=info.node.key,dragKey=info.dragNode.key,dropPos=info.node.pos.split("-"),dropPosition=info.dropPosition-Number(dropPos[dropPos.length-1]),loop=(data,key,callback)=>{for(let i=0;i<data.length;i++){if(data[i].key===key)return callback(data[i],i,data);data[i].children&&loop(data[i].children,key,callback)}},data=[...treeData];let dragObj;if(loop(data,dragKey,((item,index,arr)=>{arr.splice(index,1),dragObj=item})),info.dropToGap)if((info.node.props.children||[]).length>0&&info.node.props.expanded&&1===dropPosition)loop(data,dropKey,(item=>{item.children=item.children||[],item.children.unshift(dragObj)}));else{let i,ar=[];loop(data,dropKey,((_item,index,arr)=>{ar=arr,i=index})),-1===dropPosition?ar.splice(i,0,dragObj):ar.splice(i+1,0,dragObj)}else loop(data,dropKey,(item=>{item.children=item.children||[],item.children.unshift(dragObj)}));return data}__webpack_require__.d(__webpack_exports__,{Ai:()=>sortCheckedKeys,IU:()=>hasRecursiveChildren,Ps:()=>checkNode,_3:()=>hasUncheckedChildren,dj:()=>applyDropToTreeData,mX:()=>uncheckNode,wT:()=>getParents})}}]);