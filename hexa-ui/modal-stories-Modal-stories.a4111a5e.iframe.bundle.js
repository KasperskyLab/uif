"use strict";(self.webpackChunk_kaspersky_hexa_ui=self.webpackChunk_kaspersky_hexa_ui||[]).push([[2222],{"./.storybook/helpers.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ac:()=>sbSetDefaultValue,Of:()=>sbHideControls,RV:()=>sbMergeActions,zf:()=>sbFixArrayArgs});const sbSetDefaultValue=text=>({table:{defaultValue:{summary:text}}}),sbHideControls=controls=>controls.reduce(((acc,control)=>(acc[control]={control:!1},acc)),{});function sbFixArrayArgs(args,arrayKeys){const out={...args};for(const key of arrayKeys)Array.isArray(out[key])||delete out[key];return out}function sbMergeActions(args,actions){const out={...args};for(const key in actions){const addonAction=out[key],action=actions[key];out[key]=(...args2)=>{null==addonAction||addonAction(...args2),action(...args2)}}return out}},"./design-system/css-configs/helpers/useComponentCssConfig.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>useComponentCssConfig});var _design_system_css_configs_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./design-system/css-configs/components/index.ts"),_helpers_smartMerge__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./helpers/smartMerge.ts"),classnames__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");const useComponentCssConfig=(rawProps,config)=>{const props=_helpers_smartMerge__WEBPACK_IMPORTED_MODULE_2__.A.objects({skipUndefined:!0})(config.defaultValues,rawProps),componentThemeConfig=_design_system_css_configs_components__WEBPACK_IMPORTED_MODULE_3__.u.components[config.componentName],sizeConfig=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>props.size&&componentThemeConfig.sizes?componentThemeConfig.sizes[props.size]:{}),[componentThemeConfig.sizes,props.size]),colorConfig=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>props.mode&&componentThemeConfig.colors?componentThemeConfig.colors[props.mode]:componentThemeConfig.colors),[componentThemeConfig.colors,props.mode]),cssConfig=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({...sizeConfig,...colorConfig})),[sizeConfig,colorConfig]),propsToDrill=config.propsToDrill||[],propsDrilled={...props,theme:propsToDrill.includes("theme")?props.theme:void 0,size:propsToDrill.includes("size")?props.size:void 0,mode:propsToDrill.includes("mode")?props.mode:void 0},themeClassName=props.theme?`theme-${props.theme}`:"";return{...propsDrilled,className:classnames__WEBPACK_IMPORTED_MODULE_0___default()(null==propsDrilled?void 0:propsDrilled.className,themeClassName),cssConfig}}},"./src/button/Button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button});var useTestAttribute=__webpack_require__("./helpers/hooks/useTestAttribute.ts"),showDeprecationWarn=__webpack_require__("./helpers/showDeprecationWarn.ts"),es_button=__webpack_require__("./node_modules/antd/es/button/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),variables=__webpack_require__("./design-system/theme/themes/variables.ts");const fromProps=(0,__webpack_require__("./helpers/getFromProps.ts").P)(),groupCss=(0,styled_components_browser_esm.AH)(["gap:6px;&.ant-btn-group > .ant-btn:first-child:not(:last-child){border-radius:7px 0 0 7px;}&.ant-btn-group > .ant-btn:not(:last-child):not(:first-child){border-radius:0;}&.ant-btn-group > .ant-btn:last-child:not(:first-child){border-radius:0 7px 7px 0;}"]),buttonCss=(0,styled_components_browser_esm.AH)(["&.ant-btn{display:inline-flex;flex-direction:row;justify-content:center;align-items:center;gap:","px;outline:none;height:",";min-width:",";max-width:100%;padding:",";border-radius:",";background-color:",";color:",";border:",";box-shadow:none;.kl-components-button-text{max-width:100%;text-overflow:ellipsis;overflow:hidden;font-family:",";font-size:",";line-height:",";font-weight:",";font-style:",";letter-spacing:",';}&:not([disabled]) > span[role="img"] > svg{color:',";}&:focus-visible{box-shadow:",";}&:hover,&:hover:focus{color:",";background-color:",";}&:active,&:active:focus{background-color:",";border:",";transition-duration:.02s;}&[disabled],&.ant-btn-loading{&,&:hover,&:active,&:focus{background-color:",";color:",";border:",";box-shadow:none;cursor:not-allowed;svg{color:",";}}}&.ant-btn-loading{& > span:not(.ant-btn-loading-icon),& > svg:not(.ant-btn-loading-icon){visibility:",";overflow:hidden;transition:visibility 0.3s;}}.ant-btn-loading-icon{position:absolute;left:50%;top:50%;margin-top:-8px;margin-left:-8px;transition:opacity 0.3s;color:",";svg{width:16px;height:16px;}span{padding-right:0;}}.anticon{line-height:0;}&::before{opacity:0;}&.icon-only{width:",";min-width:",";padding:unset;line-height:unset;}&.ant-dropdown-trigger.ant-dropdown-open{background-color:",";border:",";}}&[ant-click-animating-without-extra-node=true]::after,.ant-click-animating-node{display:none;}"],variables.m[2],fromProps("height"),fromProps("minWidth"),fromProps("padding"),fromProps("borderRadius"),(({isPressed})=>fromProps((isPressed?"active":"enabled")+".background")),fromProps("enabled.color"),fromProps("enabled.border"),fromProps("fontFamily"),fromProps("fontSize"),fromProps("lineHeight"),fromProps("fontWeight"),fromProps("fontStyle"),fromProps("letterSpacing"),fromProps("enabled.color"),fromProps("focus.boxShadow"),fromProps("hover.color"),fromProps("hover.background"),fromProps("active.background"),fromProps("active.border"),fromProps("disabled.background"),fromProps("disabled.color"),fromProps("disabled.border"),fromProps("disabled.color"),(props=>props.loading?"hidden":"visible"),fromProps("disabled.color"),fromProps("height"),fromProps("height"),fromProps("active.background"),fromProps("active.border"));var types=__webpack_require__("./src/button/types.ts"),useComponentCssConfig=__webpack_require__("./design-system/css-configs/helpers/useComponentCssConfig.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const StyledButton=(0,styled_components_browser_esm.Ay)(es_button.A).withConfig({shouldForwardProp:prop=>!["cssConfig","isPressed"].includes(prop)}).withConfig({displayName:"Button__StyledButton",componentId:"sc-5urxsu-0"})(["",""],buttonCss),Button=rawProps=>{const{mode="primary",...notDeprecatedProps}=rawProps;let notDeprecatedMode=mode;types.b.includes(mode)||(notDeprecatedMode="primary",(0,showDeprecationWarn.w)("mode",mode));const themedProps=(props=>(0,useComponentCssConfig.M)(props,{componentName:"button",defaultValues:{mode:"primary",size:"medium"}}))({...notDeprecatedProps,mode:notDeprecatedMode}),props=(0,useTestAttribute.a)(themedProps);return react.createElement(ButtonView,props)},ButtonView=({className,text,children,type,iconBefore,iconAfter,testAttributes,...rest})=>{const child=text||children;return react.createElement(StyledButton,_extends({className:classnames_default()(className,{"icon-only":!child}),htmlType:type},testAttributes,rest,{icon:void 0}),child?[iconBefore,react.createElement("span",{key:"radio",className:"kl-components-button-text"}," ",child," "),iconAfter]:iconBefore||iconAfter)},StyledButtonGroup=(0,styled_components_browser_esm.Ay)(es_button.A.Group).withConfig({shouldForwardProp:prop=>!["cssConfig"].includes(prop)}).withConfig({displayName:"Button__StyledButtonGroup",componentId:"sc-5urxsu-1"})(["",""],groupCss);Button.Group=rawProps=>{const{testAttributes,...rest}=(0,useTestAttribute.a)(rawProps);return react.createElement(StyledButtonGroup,_extends({},testAttributes,rest))},Button.__docgenInfo={description:"",methods:[{name:"Group",docblock:null,modifiers:["static"],params:[{name:"rawProps",optional:!1,type:{name:"intersection",raw:"AntdButtonGroupProps & {\n  /** React children */\n  children?: ReactNode\n} & TestingProps",elements:[{name:"AntdButtonGroupProps"},{name:"signature",type:"object",raw:"{\n  /** React children */\n  children?: ReactNode\n}",signature:{properties:[{key:"children",value:{name:"ReactNode",required:!1},description:"React children"}]}},{name:"signature",type:"object",raw:"{\n  /** Actual identifier for autotesting, whill be passed to HTML attribute data-testid */\n  testId?: string,\n  /** @deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id */\n  klId?: string,\n  /** @deprecated Use 'testId' prop instead */\n  componentId?: string,\n  /** @deprecated Use 'testId' prop instead */\n  dataTestId?: string,\n  componentType?: string\n}",signature:{properties:[{key:"testId",value:{name:"string",required:!1},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},{key:"klId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},{key:"componentId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead"},{key:"dataTestId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead"},{key:"componentType",value:{name:"string",required:!1}}]}}],alias:"ButtonGroupProps"}}],returns:{type:{name:"JSX.Element"}}}],displayName:"Button",props:{size:{required:!1,tsType:{name:"literal",value:"`${Exclude<Size, Size.ExtraSmall>}`"},description:"Size"},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Custom theme"},mode:{required:!1,tsType:{name:"buttonModes[number]",raw:"typeof buttonModes[number]"},description:"Color mode"},disabled:{required:!1,tsType:{name:"boolean"},description:"Disabled state"},loading:{required:!1,tsType:{name:"boolean"},description:"Loading state"},className:{required:!1,tsType:{name:"string"},description:"Css class"},iconBefore:{required:!1,tsType:{name:"ReactNode"},description:"Icon before text"},iconAfter:{required:!1,tsType:{name:"ReactNode"},description:"Icon after text"},onClick:{required:!1,tsType:{name:"MouseEventHandler",elements:[{name:"HTMLElement"}],raw:"MouseEventHandler<HTMLElement>"},description:"On click handler"},text:{required:!1,tsType:{name:"string"},description:"Text"},type:{required:!1,tsType:{name:"ButtonHTMLType"},description:"HTML attribute 'type'"},isPressed:{required:!1,tsType:{name:"boolean"},description:"Display in :active state"},children:{required:!1,tsType:{name:"ReactNode"},description:"React children"},style:{required:!1,tsType:{name:"ReactCSSProperties",raw:"React.CSSProperties"},description:""},testId:{required:!1,tsType:{name:"string"},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},klId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},componentId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},dataTestId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},componentType:{required:!1,tsType:{name:"string"},description:""}}}},"./src/button/types.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{b:()=>buttonModes});const buttonModes=["primary","secondary","tertiary","dangerFilled","dangerOutlined"]},"./src/modal/Modal.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{a:()=>Modal});var react=__webpack_require__("./node_modules/react/index.js"),ResizeObserver_es=__webpack_require__("./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js");const hooks_useDimension=(ref,deps)=>{const[dimensions,setDimensions]=(0,react.useState)({width:0,height:0}),resizeRef=(0,react.useRef)(null);return(0,react.useEffect)((()=>(resizeRef.current=new ResizeObserver_es.A(((entries=[])=>{entries.forEach((entry=>{const{width,height}=entry.contentRect;setDimensions({width,height})}))})),ref.current&&resizeRef.current.observe(ref.current),()=>{resizeRef.current&&resizeRef.current.disconnect()})),[ref,JSON.stringify(deps)]),dimensions};var useTestAttribute=__webpack_require__("./helpers/hooks/useTestAttribute.ts"),shouldForwardProp=__webpack_require__("./helpers/shouldForwardProp.ts"),useThemedActionButton=__webpack_require__("./src/action-button/useThemedActionButton.ts"),ActionButtonCSS=__webpack_require__("./src/action-button/ActionButtonCSS.ts"),Button=__webpack_require__("./src/button/Button.tsx"),Space=__webpack_require__("./src/space/Space.tsx"),modal=__webpack_require__("./node_modules/antd/es/modal/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),Cross=__webpack_require__("./node_modules/@kaspersky/hexa-ui-icons/esm/16/Cross.js"),StatusWarningOutline=__webpack_require__("./node_modules/@kaspersky/hexa-ui-icons/esm/24/StatusWarningOutline.js"),StatusDangerOutline1=__webpack_require__("./node_modules/@kaspersky/hexa-ui-icons/esm/24/StatusDangerOutline1.js"),StatusOkOutline=__webpack_require__("./node_modules/@kaspersky/hexa-ui-icons/esm/24/StatusOkOutline.js"),variables=__webpack_require__("./design-system/theme/themes/variables.ts"),typography=__webpack_require__("./design-system/tokens/typography.ts"),getFromProps=__webpack_require__("./helpers/getFromProps.ts"),js=__webpack_require__("./node_modules/@kaspersky/hexa-ui-core/esm/typography/js/index.js");const fromProps=(0,getFromProps.P)(),modalSize={minHeight:"180px",borderWidth:"1px",titlePadding:`${variables.m[12]}px`,footerPadding:`${variables.m[12]}px`},StyledIcon=styled_components_browser_esm.Ay.span.withConfig({displayName:"modalCss__StyledIcon",componentId:"sc-w3l3g4-0"})(["padding:0;height:",";svg{color:",";}"],(0,typography.ip)(js.tg.H5).lineHeight,fromProps("modeBorder")),ModalContent=styled_components_browser_esm.Ay.div.withConfig({displayName:"modalCss__ModalContent",componentId:"sc-w3l3g4-1"})(["max-height:",";min-height:",";overflow-y:auto;padding:0 ","px;"],(props=>{return""+(cssConfig=props.cssConfig,titleHeight=props.titleHeight,footerHeight=props.footerHeight,`\n  calc(100vh - ${cssConfig.top} * 2 - ${titleHeight}px - ${footerHeight}px -\n    ${modalSize.titlePadding} * 2 - ${modalSize.footerPadding} * 2)\n`);var cssConfig,titleHeight,footerHeight}),(props=>{return""+(titleHeight=props.titleHeight,footerHeight=props.footerHeight,`\n  calc(${modalSize.minHeight} - ${titleHeight}px - ${footerHeight}px -\n    ${modalSize.titlePadding} * 2 - ${modalSize.footerPadding} * 2)\n`);var titleHeight,footerHeight}),variables.m[12]),ModalGlobalStyles=(0,styled_components_browser_esm.DU)([""]);function getMaskStyle(cssConfig){return{backgroundColor:cssConfig.maskBackground}}const modalCss=(0,styled_components_browser_esm.AH)(["display:flex;padding:0;margin:0 auto;flex-direction:row;align-items:baseline;position:relative;top:",";width:",";min-width:",";max-width:",";.ant-modal-close{width:auto;height:auto;top:28px;right:24px;.ant-modal-close-x{width:auto;height:auto;display:flex;}}.ant-modal-content,.ant-modal-header,.ant-modal-footer{background:",";color:",";}.ant-modal-content{width:100%;border-radius:","px;box-shadow:",";overflow:hidden;&::before{content:'';position:absolute;top:0;left:0;right:0;height:","px;background-color:",";}.ant-modal-body{padding:0;","}}.ant-modal-header{padding:",";border-bottom:"," solid;border-bottom-color:",";.ant-modal-title div{display:flex;gap:","px;color:",";"," word-wrap:break-word;","}}.ant-modal-footer{padding:",";border-top:"," solid;border-top-color:",";border-radius:0;&& .ant-btn + .ant-btn{margin-left:0;}}"],fromProps("top"),fromProps("width"),fromProps("width"),fromProps("width"),fromProps("background"),fromProps("color"),variables.a[6],fromProps("boxShadow"),variables.m[2],fromProps("modeBorder"),(0,typography.ip)(js.tg.BTR3),modalSize.titlePadding,modalSize.borderWidth,(props=>props.showTopBorder?`${fromProps("border")(props)}`:"transparent"),variables.m[4],fromProps("color"),(props=>props.closable&&"padding-right: 40px;"),(0,typography.ip)(js.tg.H5),modalSize.titlePadding,modalSize.borderWidth,(props=>props.showBottomBorder?`${fromProps("border")(props)}`:"transparent"));var useThemedComponent=__webpack_require__("./helpers/useThemedComponent.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const StyledCloseIcon=(0,styled_components_browser_esm.Ay)(Cross.A).withConfig({shouldForwardProp:shouldForwardProp.M}).withConfig({displayName:"Modal__StyledCloseIcon",componentId:"sc-bsibmp-0"})(["",""],ActionButtonCSS.A),CloseIcon=rawProps=>{const themedProps=(0,useThemedActionButton.f)({...rawProps,interactive:!0}),props=(0,useTestAttribute.a)(themedProps);return react.createElement(StyledCloseIcon,_extends({},props,{cssConfig:themedProps.cssConfig}))},StyledModal=(0,styled_components_browser_esm.Ay)(modal.A).withConfig({shouldForwardProp:prop=>!["cssConfig"].includes(prop)}).withConfig({displayName:"Modal__StyledModal",componentId:"sc-bsibmp-1"})(["",""],modalCss),Modal=rawProps=>{const themedProps=(props=>(0,useThemedComponent.K)(props,{componentName:"modal",defaultValues:{mode:"default",size:"small"},propsToDrill:["mode"]}))(rawProps),props=(0,useTestAttribute.a)(themedProps);return react.createElement(ModalView,props)},ModalView=props=>{const{mode,header,content,actions,cssConfig,visible,centered=!0,closable=!0,testAttributes,customButtons}=props,iconMap=(0,react.useMemo)((()=>({warning:()=>react.createElement(StatusWarningOutline.A,{testId:"modal-warning-icon",klId:"icon-warning"}),error:()=>react.createElement(StatusDangerOutline1.A,{testId:"modal-error-icon",klId:"icon-error"}),success:()=>react.createElement(StatusOkOutline.A,{testId:"modal-success-icon",klId:"icon-success"})})),[]),IconComponent=(0,react.useMemo)((()=>"default"!==mode&&iconMap[mode]),[iconMap,mode]),contentRef=(0,react.useRef)(null),titleRef=(0,react.useRef)(null),footerRef=(0,react.useRef)(null),{height:contentHeight}=hooks_useDimension(contentRef,[visible]),{height:titleHeight}=hooks_useDimension(titleRef,[visible]),{height:footerHeight}=hooks_useDimension(footerRef,[visible]);(0,react.useEffect)((()=>{if(visible&&footerRef.current){const firstFooterButton=footerRef.current.querySelector("button");setTimeout((()=>{null==firstFooterButton||firstFooterButton.focus()}))}}),[visible]);const titleMemoized=(0,react.useMemo)((()=>react.createElement("div",{ref:titleRef},IconComponent&&react.createElement(StyledIcon,{cssConfig},react.createElement(IconComponent,null)),header)),[header,IconComponent,cssConfig]),footerMemoized=(0,react.useMemo)((()=>(actions||customButtons)&&react.createElement("div",{ref:footerRef},react.createElement(Space.$,{direction:"horizontal"},(null==actions?void 0:actions.FIRST_ACTION)&&react.createElement(Button.$,_extends({size:"medium"},actions.FIRST_ACTION),actions.FIRST_ACTION.text),(null==actions?void 0:actions.SECOND_ACTION)&&react.createElement(Button.$,_extends({size:"medium",mode:"secondary"},actions.SECOND_ACTION),actions.SECOND_ACTION.text),(null==actions?void 0:actions.THIRD_ACTION)&&react.createElement(Button.$,_extends({size:"medium",mode:"secondary"},actions.THIRD_ACTION),actions.THIRD_ACTION.text),customButtons&&customButtons.map((({text,...rest},i)=>react.createElement(Button.$,_extends({key:`modalCustomButton${i}`,size:"medium",mode:"secondary"},rest),text)))))),[actions]),[showTopBorder,setShowTopBorder]=(0,react.useState)(!1),[showBottomBorder,setShowBottomBorder]=(0,react.useState)(!1);return react.createElement(react.Fragment,null,react.createElement(ModalGlobalStyles,{cssConfig,contentHeight,titleHeight,footerHeight,showTopBorder,showBottomBorder,closable}),react.createElement(StyledModal,_extends({title:titleMemoized,footer:footerMemoized,mask:!0,maskClosable:!1,maskStyle:getMaskStyle(cssConfig),keyboard:!1,centered,closable,closeIcon:react.createElement(CloseIcon,null)},testAttributes,props,{cssConfig,contentHeight,titleHeight,footerHeight,showTopBorder,showBottomBorder}),react.createElement(ModalContent,{ref:contentRef,cssConfig,titleHeight,footerHeight,onScroll:e=>{const target=e.target,bottom=target.scrollHeight-target.scrollTop===target.clientHeight;setShowBottomBorder(!bottom);const top=0===target.scrollTop;setShowTopBorder(!top)}},content)))};Modal.displayName="Modal",CloseIcon.__docgenInfo={description:"",methods:[],displayName:"CloseIcon",props:{icon:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:'Icon component instead of default "cross" icon'},noIcon:{required:!1,tsType:{name:"boolean"},description:"Without icon"},interactive:{required:!1,tsType:{name:"boolean"},description:"If interactive"},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Custom theme"},size:{required:!1,tsType:{name:"union",raw:"'large' | 'medium' | 'small'",elements:[{name:"literal",value:"'large'"},{name:"literal",value:"'medium'"},{name:"literal",value:"'small'"}]},description:"Size"},mode:{required:!1,tsType:{name:"union",raw:"'ghost' | 'ghostInverted' | 'filled' | 'filledInverted' | 'onLight'",elements:[{name:"literal",value:"'ghost'"},{name:"literal",value:"'ghostInverted'"},{name:"literal",value:"'filled'"},{name:"literal",value:"'filledInverted'"},{name:"literal",value:"'onLight'"}]},description:"Color mode"},testId:{required:!1,tsType:{name:"string"},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},klId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},componentId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},dataTestId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},componentType:{required:!1,tsType:{name:"string"},description:""}}},Modal.__docgenInfo={description:"",methods:[],displayName:"Modal",props:{header:{required:!1,tsType:{name:"ReactNode"},description:"Header"},content:{required:!1,tsType:{name:"ReactNode"},description:"Content"},actions:{required:!1,tsType:{name:"Partial",elements:[{name:"Record",elements:[{name:"unknown"},{name:"intersection",raw:"{\n  text?: string,\n  mode?: ButtonMode,\n  loading?: boolean,\n  disabled?: boolean,\n  iconBefore?: ReactNode,\n  iconAfter?: ReactNode,\n  onClick?: MouseEventHandler<HTMLElement> | undefined,\n  className?: string\n} & TestingProps",elements:[{name:"signature",type:"object",raw:"{\n  text?: string,\n  mode?: ButtonMode,\n  loading?: boolean,\n  disabled?: boolean,\n  iconBefore?: ReactNode,\n  iconAfter?: ReactNode,\n  onClick?: MouseEventHandler<HTMLElement> | undefined,\n  className?: string\n}",signature:{properties:[{key:"text",value:{name:"string",required:!1}},{key:"mode",value:{name:"buttonModes[number]",raw:"typeof buttonModes[number]",required:!1}},{key:"loading",value:{name:"boolean",required:!1}},{key:"disabled",value:{name:"boolean",required:!1}},{key:"iconBefore",value:{name:"ReactNode",required:!1}},{key:"iconAfter",value:{name:"ReactNode",required:!1}},{key:"onClick",value:{name:"union",raw:"MouseEventHandler<HTMLElement> | undefined",elements:[{name:"MouseEventHandler",elements:[{name:"HTMLElement"}],raw:"MouseEventHandler<HTMLElement>"},{name:"undefined"}],required:!1}},{key:"className",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  /** Actual identifier for autotesting, whill be passed to HTML attribute data-testid */\n  testId?: string,\n  /** @deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id */\n  klId?: string,\n  /** @deprecated Use 'testId' prop instead */\n  componentId?: string,\n  /** @deprecated Use 'testId' prop instead */\n  dataTestId?: string,\n  componentType?: string\n}",signature:{properties:[{key:"testId",value:{name:"string",required:!1},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},{key:"klId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},{key:"componentId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead"},{key:"dataTestId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead"},{key:"componentType",value:{name:"string",required:!1}}]}}]}],raw:"Record<keyof typeof ActionsMap, ActionType>"}],raw:"Partial<Record<keyof typeof ActionsMap, ActionType>>"},description:"Actions set, use the actions prop to let users act on the content in the modal"},width:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:"Width"},customButtons:{required:!1,tsType:{name:"Array",elements:[{name:"intersection",raw:"{\n  text: string,\n  disabled?: boolean,\n  mode?: ButtonMode,\n  loading?: boolean,\n  iconBefore?: ReactNode,\n  iconAfter?: ReactNode,\n  onClick: () => void,\n  id?: string,\n  className?: string\n} & TestingProps",elements:[{name:"signature",type:"object",raw:"{\n  text: string,\n  disabled?: boolean,\n  mode?: ButtonMode,\n  loading?: boolean,\n  iconBefore?: ReactNode,\n  iconAfter?: ReactNode,\n  onClick: () => void,\n  id?: string,\n  className?: string\n}",signature:{properties:[{key:"text",value:{name:"string",required:!0}},{key:"disabled",value:{name:"boolean",required:!1}},{key:"mode",value:{name:"buttonModes[number]",raw:"typeof buttonModes[number]",required:!1}},{key:"loading",value:{name:"boolean",required:!1}},{key:"iconBefore",value:{name:"ReactNode",required:!1}},{key:"iconAfter",value:{name:"ReactNode",required:!1}},{key:"onClick",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"id",value:{name:"string",required:!1}},{key:"className",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  /** Actual identifier for autotesting, whill be passed to HTML attribute data-testid */\n  testId?: string,\n  /** @deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id */\n  klId?: string,\n  /** @deprecated Use 'testId' prop instead */\n  componentId?: string,\n  /** @deprecated Use 'testId' prop instead */\n  dataTestId?: string,\n  componentType?: string\n}",signature:{properties:[{key:"testId",value:{name:"string",required:!1},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},{key:"klId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},{key:"componentId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead"},{key:"dataTestId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead"},{key:"componentType",value:{name:"string",required:!1}}]}}]}],raw:"CustomButtons[]"},description:"More buttons for modal, need for backward compatibility with console Confirmation Popup"},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Custom theme"},mode:{required:!0,tsType:{name:"union",raw:"'default' | 'warning' | 'error' | 'success'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'warning'"},{name:"literal",value:"'error'"},{name:"literal",value:"'success'"}]},description:"Color mode"},size:{required:!1,tsType:{name:"union",raw:"'small' | 'large'",elements:[{name:"literal",value:"'small'"},{name:"literal",value:"'large'"}]},description:"Size"},testId:{required:!1,tsType:{name:"string"},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},klId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},componentId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},dataTestId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},componentType:{required:!1,tsType:{name:"string"},description:""}}}},"./src/modal/stories/Modal.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,ColorTokens:()=>ColorTokens,CustomModalRender:()=>CustomModalRender,NonClosable:()=>NonClosable,WithCustomButtons:()=>WithCustomButtons,WithLoadingAndDisableButtons:()=>WithLoadingAndDisableButtons,WithScrollAndLongTitle:()=>WithScrollAndLongTitle,WithThreeActionButtons:()=>WithThreeActionButtons,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Modal_stories});var Palette=__webpack_require__("./design-system/palette/Palette.tsx"),badges=__webpack_require__("./.storybook/badges.tsx"),withMeta=__webpack_require__("./.storybook/components/Meta/withMeta.tsx"),helpers=__webpack_require__("./.storybook/helpers.ts"),ActionButton=__webpack_require__("./src/action-button/ActionButton.tsx"),Button=__webpack_require__("./src/button/Button.tsx"),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),js=__webpack_require__("./node_modules/@kaspersky/hexa-ui-core/esm/colors/js/index.js"),Placeholder=__webpack_require__("./node_modules/@kaspersky/hexa-ui-icons/esm/16/Placeholder.js");const meta_namespaceObject=JSON.parse('{"dod":{"designTokens":true,"useThemedHook":true,"unitTests":true,"screenshotTests":false,"migration":true,"apiTable":true,"storybook":true,"designLink":true,"figmaView":true},"component":"Modal","description":"Компонент Modal – это диалоговое окно, открывающееся поверх страницы или сайдбара.","usage":"Компонент Modal используется для отображения какой-либо информации или для подтверждения действия без перехода на другую страницу.","designLink":"https://www.figma.com/file/9hiN2DbkqbxbhR9EWRI1VK/B2B-UI-KIT?node-id=1063%3A4745","figmaView":"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2F9hiN2DbkqbxbhR9EWRI1VK%2F01-%255BB2B%255D-Hexa-UI-Components%3Ftype%3Ddesign%26node-id%3D31330%253A116977%26mode%3Ddev"}');var Modal=__webpack_require__("./src/modal/Modal.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const defaultText="This is place holder text. The basic dialog for modals should contain only valuable and \nrelevant information. Simplify dialogs by removing unnecessary elements or content that \ndoes not support user tasks. If you find that the number of required elements for your design \nare making the dialog excessively large, then try a different design solution. ",defaultIcon=react.createElement(Placeholder.A,{klId:"button-icon"}),Modal_stories={title:"Hexa UI Components/Modal",component:Modal.a,argTypes:{firstButtonText:{control:{type:"text"}},firstButtonMode:{control:{type:"select"},options:["primary","secondary","tertiary","dangerFilled","dangerOutlined"]},secondButtonText:{control:{type:"text"}},secondButtonMode:{control:{type:"select"},options:["primary","secondary","tertiary","dangerFilled","dangerOutlined"]},thirdButtonText:{control:{type:"text"}},thirdButtonMode:{control:{type:"select"},options:["primary","secondary","tertiary","dangerFilled","dangerOutlined"]},...(0,helpers.Of)(["theme","actions"])},args:{header:"Modal dialog",content:defaultText,mode:"default",size:"small",firstButtonText:"OK",firstButtonMode:"primary",secondButtonText:"Cancel",secondButtonMode:"secondary",thirdButtonText:"Cancel",thirdButtonMode:"secondary",testId:"modal-test-id",klId:"modal-kl-id"},parameters:{badges:[badges.j.stable,badges.j.reviewedByDesign],docs:{page:(0,withMeta.C)(meta_namespaceObject)},design:meta_namespaceObject.figmaView}},ModalDefaultStory=args=>{const{firstButtonText,firstButtonMode,secondButtonText,secondButtonMode,...rest}=args,[isModalOpen,setIsModalOpen]=(0,react.useState)(!1),handleCancel=()=>{setIsModalOpen(!1)},ActionsButtons={FIRST_ACTION:{text:firstButtonText,mode:firstButtonMode,onClick:()=>{setIsModalOpen(!1)}},SECOND_ACTION:{text:secondButtonText,mode:secondButtonMode,onClick:handleCancel}};return react.createElement(react.Fragment,null,react.createElement(Button.$,{onClick:()=>{setIsModalOpen(!0)}},"Open Modal"),react.createElement(Modal.a,_extends({},rest,{visible:isModalOpen,actions:ActionsButtons,onCancel:handleCancel})))},Basic={render:ModalDefaultStory.bind({})},WithThreeActionButtons={render:args=>{const{firstButtonText,firstButtonMode,secondButtonText,secondButtonMode,thirdButtonText,thirdButtonMode,...rest}=args,[isModalOpen,setIsModalOpen]=(0,react.useState)(!1),handleCancel=()=>{setIsModalOpen(!1)},ActionsButtons={FIRST_ACTION:{text:firstButtonText,mode:firstButtonMode,onClick:()=>{setIsModalOpen(!1)}},SECOND_ACTION:{text:secondButtonText,mode:secondButtonMode,onClick:handleCancel},THIRD_ACTION:{text:thirdButtonText,mode:thirdButtonMode,onClick:handleCancel}};return react.createElement(react.Fragment,null,react.createElement(Button.$,{onClick:()=>{setIsModalOpen(!0)}},"Open Modal"),react.createElement(Modal.a,_extends({},rest,{visible:isModalOpen,actions:ActionsButtons,onCancel:handleCancel})))}},WithCustomButtons={render:args=>{const{firstButtonText,firstButtonMode,secondButtonText,secondButtonMode,thirdButtonText,thirdButtonMode,...rest}=args,[isModalOpen,setIsModalOpen]=(0,react.useState)(!1);return react.createElement(react.Fragment,null,react.createElement(Button.$,{onClick:()=>{setIsModalOpen(!0)}},"Open Modal"),react.createElement(Modal.a,_extends({},rest,{visible:isModalOpen,onCancel:()=>{setIsModalOpen(!1)}})))},args:{content:"Buttons are used for backwards compatibility, when using custom buttons it is recommended not to use actions prop",customButtons:Array.from({length:12}).map(((_,index)=>({onClick:()=>alert(index),text:index.toString()})))}},WithScrollAndLongTitle={render:ModalDefaultStory.bind({}),args:{header:"Long long long long long long long long long long modal dialog title",content:Array(20).join(defaultText)}},CustomModalRender={render:args=>{const[isModalOpen,setIsModalOpen]=(0,react.useState)(!1),handleCancel=()=>{setIsModalOpen(!1)},ModalContent=styled_components_browser_esm.Ay.div.withConfig({displayName:"Modalstories__ModalContent",componentId:"sc-1kzs0o5-0"})(["&{position:relative;pointer-events:auto;.modal-video-close-button{position:absolute;top:10px;right:10px;}}"]);return react.createElement(react.Fragment,null,react.createElement(Button.$,{onClick:()=>{setIsModalOpen(!0)}},"Open Modal"),react.createElement(Modal.a,_extends({},args,{visible:isModalOpen,modalRender:()=>react.createElement(ModalContent,null,react.createElement(ActionButton.r,{onClick:handleCancel,className:"modal-video-close-button",mode:"filledInverted",size:"large"}),react.createElement("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/J0Hx0Pmfjb0?si=q6pOcK3TNrHBlnI0",title:"YouTube video player",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowFullScreen:!0})),onCancel:handleCancel})))}},WithLoadingAndDisableButtons={render:args=>{const{firstButtonText,firstButtonMode,secondButtonText,secondButtonMode,thirdButtonText,thirdButtonMode,...rest}=args,[isModalOpen,setIsModalOpen]=(0,react.useState)(!1),handleCancel=()=>{setIsModalOpen(!1)},ActionsButtons={FIRST_ACTION:{text:firstButtonText,mode:firstButtonMode,loading:!0,onClick:()=>{setIsModalOpen(!1)}},SECOND_ACTION:{text:secondButtonText,mode:secondButtonMode,disabled:!0,iconAfter:defaultIcon,onClick:handleCancel}};return react.createElement(react.Fragment,null,react.createElement(Button.$,{onClick:()=>{setIsModalOpen(!0)}},"Open Modal"),react.createElement(Modal.a,_extends({},rest,{visible:isModalOpen,actions:ActionsButtons,onCancel:handleCancel})))}},NonClosable={render:ModalDefaultStory.bind({}),args:{closable:!1}},ColorTokens={args:{source:js.Ah.modal},render:args=>react.createElement(Palette.r,args)};Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  render: ModalDefaultStory.bind({})\n}",...Basic.parameters?.docs?.source}}},WithThreeActionButtons.parameters={...WithThreeActionButtons.parameters,docs:{...WithThreeActionButtons.parameters?.docs,source:{originalSource:"{\n  render: (args: WithButtonProps) => {\n    const {\n      firstButtonText,\n      firstButtonMode,\n      secondButtonText,\n      secondButtonMode,\n      thirdButtonText,\n      thirdButtonMode,\n      ...rest\n    } = args;\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const showModal = () => {\n      setIsModalOpen(true);\n    };\n    const handleOk = () => {\n      setIsModalOpen(false);\n    };\n    const handleCancel = () => {\n      setIsModalOpen(false);\n    };\n    const ActionsButtons: ModalProps['actions'] = {\n      FIRST_ACTION: {\n        text: firstButtonText,\n        mode: firstButtonMode,\n        onClick: handleOk\n      },\n      SECOND_ACTION: {\n        text: secondButtonText,\n        mode: secondButtonMode,\n        onClick: handleCancel\n      },\n      THIRD_ACTION: {\n        text: thirdButtonText,\n        mode: thirdButtonMode,\n        onClick: handleCancel\n      }\n    };\n    return <>\n        <Button onClick={showModal}>\n          Open Modal\n        </Button>\n        <Modal {...rest} visible={isModalOpen} actions={ActionsButtons} onCancel={handleCancel} />\n      </>;\n  }\n}",...WithThreeActionButtons.parameters?.docs?.source}}},WithCustomButtons.parameters={...WithCustomButtons.parameters,docs:{...WithCustomButtons.parameters?.docs,source:{originalSource:"{\n  render: (args: WithButtonProps) => {\n    const {\n      firstButtonText,\n      firstButtonMode,\n      secondButtonText,\n      secondButtonMode,\n      thirdButtonText,\n      thirdButtonMode,\n      ...rest\n    } = args;\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const showModal = () => {\n      setIsModalOpen(true);\n    };\n    const handleCancel = () => {\n      setIsModalOpen(false);\n    };\n    return <>\n        <Button onClick={showModal}>\n          Open Modal\n        </Button>\n        <Modal {...rest} visible={isModalOpen} onCancel={handleCancel} />\n      </>;\n  },\n  args: {\n    content: 'Buttons are used for backwards compatibility, when using custom buttons it is recommended not to use actions prop',\n    customButtons: Array.from({\n      length: 12\n    }).map((_, index) => ({\n      onClick: () => alert(index),\n      text: index.toString()\n    }))\n  }\n}",...WithCustomButtons.parameters?.docs?.source}}},WithScrollAndLongTitle.parameters={...WithScrollAndLongTitle.parameters,docs:{...WithScrollAndLongTitle.parameters?.docs,source:{originalSource:"{\n  render: ModalDefaultStory.bind({}),\n  args: {\n    header: 'Long long long long long long long long long long modal dialog title',\n    content: Array(20).join(defaultText)\n  }\n}",...WithScrollAndLongTitle.parameters?.docs?.source}}},CustomModalRender.parameters={...CustomModalRender.parameters,docs:{...CustomModalRender.parameters?.docs,source:{originalSource:'{\n  render: (args: ModalProps) => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const showModal = () => {\n      setIsModalOpen(true);\n    };\n    const handleCancel = () => {\n      setIsModalOpen(false);\n    };\n    const ModalContent = styled.div`\n      & {\n        position: relative;\n        pointer-events: auto;\n  \n        .modal-video-close-button {\n          position: absolute;\n          top: 10px;\n          right: 10px;\n        }\n      }\n    `;\n    return <>\n        <Button onClick={showModal}>\n          Open Modal\n        </Button>\n        <Modal {...args} visible={isModalOpen} modalRender={() => <ModalContent>\n              <ActionButton onClick={handleCancel} className="modal-video-close-button" mode="filledInverted" size="large" />\n              <iframe width="560" height="315" src="https://www.youtube.com/embed/J0Hx0Pmfjb0?si=q6pOcK3TNrHBlnI0" title="YouTube video player" frameBorder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowFullScreen></iframe>\n            </ModalContent>} onCancel={handleCancel} />\n      </>;\n  }\n}',...CustomModalRender.parameters?.docs?.source}}},WithLoadingAndDisableButtons.parameters={...WithLoadingAndDisableButtons.parameters,docs:{...WithLoadingAndDisableButtons.parameters?.docs,source:{originalSource:"{\n  render: (args: WithButtonProps) => {\n    const {\n      firstButtonText,\n      firstButtonMode,\n      secondButtonText,\n      secondButtonMode,\n      thirdButtonText,\n      thirdButtonMode,\n      ...rest\n    } = args;\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const showModal = () => {\n      setIsModalOpen(true);\n    };\n    const handleOk = () => {\n      setIsModalOpen(false);\n    };\n    const handleCancel = () => {\n      setIsModalOpen(false);\n    };\n    const ActionsButtons: ModalProps['actions'] = {\n      FIRST_ACTION: {\n        text: firstButtonText,\n        mode: firstButtonMode,\n        loading: true,\n        onClick: handleOk\n      },\n      SECOND_ACTION: {\n        text: secondButtonText,\n        mode: secondButtonMode,\n        disabled: true,\n        iconAfter: defaultIcon,\n        onClick: handleCancel\n      }\n    };\n    return <>\n        <Button onClick={showModal}>\n          Open Modal\n        </Button>\n        <Modal {...rest} visible={isModalOpen} actions={ActionsButtons} onCancel={handleCancel} />\n      </>;\n  }\n}",...WithLoadingAndDisableButtons.parameters?.docs?.source}}},NonClosable.parameters={...NonClosable.parameters,docs:{...NonClosable.parameters?.docs,source:{originalSource:"{\n  render: ModalDefaultStory.bind({}),\n  args: {\n    closable: false\n  }\n}",...NonClosable.parameters?.docs?.source}}},ColorTokens.parameters={...ColorTokens.parameters,docs:{...ColorTokens.parameters?.docs,source:{originalSource:"{\n  args: {\n    source: componentColors.modal\n  },\n  render: args => <ThemedPalette {...args} />\n}",...ColorTokens.parameters?.docs?.source}}};const __namedExportsOrder=["Basic","WithThreeActionButtons","WithCustomButtons","WithScrollAndLongTitle","CustomModalRender","WithLoadingAndDisableButtons","NonClosable","ColorTokens"]}}]);