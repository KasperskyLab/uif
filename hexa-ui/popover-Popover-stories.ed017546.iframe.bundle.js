"use strict";(self.webpackChunk_kaspersky_hexa_ui=self.webpackChunk_kaspersky_hexa_ui||[]).push([[1286],{"./.storybook/helpers.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ac:()=>sbSetDefaultValue,Of:()=>sbHideControls,RV:()=>sbMergeActions,zf:()=>sbFixArrayArgs});const sbSetDefaultValue=text=>({table:{defaultValue:{summary:text}}}),sbHideControls=controls=>controls.reduce(((acc,control)=>(acc[control]={control:!1},acc)),{});function sbFixArrayArgs(args,arrayKeys){const out={...args};for(const key of arrayKeys)Array.isArray(out[key])||delete out[key];return out}function sbMergeActions(args,actions){const out={...args};for(const key in actions){const addonAction=out[key],action=actions[key];out[key]=(...args2)=>{null==addonAction||addonAction(...args2),action(...args2)}}return out}},"./src/button/Button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button});var useTestAttribute=__webpack_require__("./helpers/hooks/useTestAttribute.ts"),showDeprecationWarn=__webpack_require__("./helpers/showDeprecationWarn.ts"),es_button=__webpack_require__("./node_modules/antd/es/button/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),variables=__webpack_require__("./design-system/theme/themes/variables.ts");const fromProps=(0,__webpack_require__("./helpers/getFromProps.ts").P)(),groupCss=(0,styled_components_browser_esm.AH)(["gap:6px;&.ant-btn-group > .ant-btn:first-child:not(:last-child){border-radius:7px 0 0 7px;}&.ant-btn-group > .ant-btn:not(:last-child):not(:first-child){border-radius:0;}&.ant-btn-group > .ant-btn:last-child:not(:first-child){border-radius:0 7px 7px 0;}"]),buttonCss=(0,styled_components_browser_esm.AH)(["&.ant-btn{display:inline-flex;flex-direction:row;justify-content:center;align-items:center;gap:","px;outline:none;height:",";min-width:",";max-width:100%;padding:",";border-radius:",";background-color:",";color:",";border:",";box-shadow:none;.kl-components-button-text{max-width:100%;text-overflow:ellipsis;overflow:hidden;font-family:",";font-size:",";line-height:",";font-weight:",";font-style:",";letter-spacing:",';}&:not([disabled]) > span[role="img"] > svg{color:',";}&:focus-visible{box-shadow:",";}&:hover,&:hover:focus{color:",";background-color:",";}&:active,&:active:focus{background-color:",";border:",";transition-duration:.02s;}&[disabled],&.ant-btn-loading{&,&:hover,&:active,&:focus{background-color:",";color:",";border:",";box-shadow:none;cursor:not-allowed;svg{color:",";}}}&.ant-btn-loading{& > span:not(.ant-btn-loading-icon),& > svg:not(.ant-btn-loading-icon){visibility:",";overflow:hidden;transition:visibility 0.3s;}}.ant-btn-loading-icon{position:absolute;left:50%;top:50%;margin-top:-8px;margin-left:-8px;transition:opacity 0.3s;color:",";svg{width:16px;height:16px;}span{padding-right:0;}}.anticon{line-height:0;}&::before{opacity:0;}&.icon-only{width:",";min-width:",";padding:unset;line-height:unset;}&.ant-dropdown-trigger.ant-dropdown-open{background-color:",";border:",";}}&[ant-click-animating-without-extra-node=true]::after,.ant-click-animating-node{display:none;}"],variables.m[2],fromProps("height"),fromProps("minWidth"),fromProps("padding"),fromProps("borderRadius"),(({isPressed})=>fromProps((isPressed?"active":"enabled")+".background")),fromProps("enabled.color"),fromProps("enabled.border"),fromProps("fontFamily"),fromProps("fontSize"),fromProps("lineHeight"),fromProps("fontWeight"),fromProps("fontStyle"),fromProps("letterSpacing"),fromProps("enabled.color"),fromProps("focus.boxShadow"),fromProps("hover.color"),fromProps("hover.background"),fromProps("active.background"),fromProps("active.border"),fromProps("disabled.background"),fromProps("disabled.color"),fromProps("disabled.border"),fromProps("disabled.color"),(props=>props.loading?"hidden":"visible"),fromProps("disabled.color"),fromProps("height"),fromProps("height"),fromProps("active.background"),fromProps("active.border"));var types=__webpack_require__("./src/button/types.ts"),useComponentCssConfig=__webpack_require__("./design-system/css-configs/helpers/useComponentCssConfig.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const StyledButton=(0,styled_components_browser_esm.Ay)(es_button.A).withConfig({shouldForwardProp:prop=>!["cssConfig","isPressed"].includes(prop)}).withConfig({displayName:"Button__StyledButton",componentId:"sc-5urxsu-0"})(["",""],buttonCss),Button=rawProps=>{const{mode="primary",...notDeprecatedProps}=rawProps;let notDeprecatedMode=mode;types.b.includes(mode)||(notDeprecatedMode="primary",(0,showDeprecationWarn.w)("mode",mode));const themedProps=(props=>(0,useComponentCssConfig.M)(props,{componentName:"button",defaultValues:{mode:"primary",size:"medium"}}))({...notDeprecatedProps,mode:notDeprecatedMode}),props=(0,useTestAttribute.a)(themedProps);return react.createElement(ButtonView,props)},ButtonView=({className,text,children,type,iconBefore,iconAfter,testAttributes,...rest})=>{const child=text||children;return react.createElement(StyledButton,_extends({className:classnames_default()(className,{"icon-only":!child}),htmlType:type},testAttributes,rest,{icon:void 0}),child?[iconBefore,react.createElement("span",{key:"radio",className:"kl-components-button-text"}," ",child," "),iconAfter]:iconBefore||iconAfter)},StyledButtonGroup=(0,styled_components_browser_esm.Ay)(es_button.A.Group).withConfig({shouldForwardProp:prop=>!["cssConfig"].includes(prop)}).withConfig({displayName:"Button__StyledButtonGroup",componentId:"sc-5urxsu-1"})(["",""],groupCss);Button.Group=rawProps=>{const{testAttributes,...rest}=(0,useTestAttribute.a)(rawProps);return react.createElement(StyledButtonGroup,_extends({},testAttributes,rest))},Button.__docgenInfo={description:"",methods:[{name:"Group",docblock:null,modifiers:["static"],params:[{name:"rawProps",optional:!1,type:{name:"intersection",raw:"AntdButtonGroupProps & {\n  /** React children */\n  children?: ReactNode\n} & TestingProps",elements:[{name:"AntdButtonGroupProps"},{name:"signature",type:"object",raw:"{\n  /** React children */\n  children?: ReactNode\n}",signature:{properties:[{key:"children",value:{name:"ReactNode",required:!1},description:"React children"}]}},{name:"signature",type:"object",raw:"{\n  /** Actual identifier for autotesting, whill be passed to HTML attribute data-testid */\n  testId?: string,\n  /** @deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id */\n  klId?: string,\n  /** @deprecated Use 'testId' prop instead */\n  componentId?: string,\n  /** @deprecated Use 'testId' prop instead */\n  dataTestId?: string,\n  componentType?: string\n}",signature:{properties:[{key:"testId",value:{name:"string",required:!1},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},{key:"klId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},{key:"componentId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead"},{key:"dataTestId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead"},{key:"componentType",value:{name:"string",required:!1}}]}}],alias:"ButtonGroupProps"}}],returns:{type:{name:"JSX.Element"}}}],displayName:"Button",props:{size:{required:!1,tsType:{name:"literal",value:"`${Exclude<Size, Size.ExtraSmall>}`"},description:"Size"},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Custom theme"},mode:{required:!1,tsType:{name:"buttonModes[number]",raw:"typeof buttonModes[number]"},description:"Color mode"},disabled:{required:!1,tsType:{name:"boolean"},description:"Disabled state"},loading:{required:!1,tsType:{name:"boolean"},description:"Loading state"},className:{required:!1,tsType:{name:"string"},description:"Css class"},iconBefore:{required:!1,tsType:{name:"ReactNode"},description:"Icon before text"},iconAfter:{required:!1,tsType:{name:"ReactNode"},description:"Icon after text"},onClick:{required:!1,tsType:{name:"MouseEventHandler",elements:[{name:"HTMLElement"}],raw:"MouseEventHandler<HTMLElement>"},description:"On click handler"},text:{required:!1,tsType:{name:"string"},description:"Text"},type:{required:!1,tsType:{name:"ButtonHTMLType"},description:"HTML attribute 'type'"},isPressed:{required:!1,tsType:{name:"boolean"},description:"Display in :active state"},children:{required:!1,tsType:{name:"ReactNode"},description:"React children"},style:{required:!1,tsType:{name:"ReactCSSProperties",raw:"React.CSSProperties"},description:""},testId:{required:!1,tsType:{name:"string"},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},klId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},componentId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},dataTestId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},componentType:{required:!1,tsType:{name:"string"},description:""}}}},"./src/button/types.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{b:()=>buttonModes});const buttonModes=["primary","secondary","tertiary","dangerFilled","dangerOutlined"]},"./src/popover/Popover.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Popover});var useGlobalComponentStyles=__webpack_require__("./helpers/useGlobalComponentStyles.ts"),popover=__webpack_require__("./node_modules/antd/es/popover/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),react=__webpack_require__("./node_modules/react/index.js");const ALIGNS={bottom:{offset:[0,-1]},left:{offset:[1,0]},right:{offset:[-1,0]},top:{offset:[0,1]},topLeft:{offset:[0,0]},topRight:{offset:[0,0]},bottomLeft:{offset:[0,0]},bottomRight:{offset:[0,0]},leftTop:{offset:[0,0]},leftBottom:{offset:[0,0]},rightTop:{offset:[0,0]},rightBottom:{offset:[0,0]}};var typography=__webpack_require__("./design-system/tokens/typography.ts"),js=__webpack_require__("./node_modules/@kaspersky/hexa-ui-core/esm/typography/js/index.js");const getPopoverGlobalStyles=(cssConfig,rootHashClass,extraProps)=>{const textConfig=(0,typography.X9)((0,typography.ip)(js.jA.BTR3));return`\n  .${rootHashClass} .ant-popover-inner {\n    min-width: 240px;\n    min-height: 56px;\n    ${(null==extraProps?void 0:extraProps.shouldLimitSize)&&"\n    max-width: 560px;\n    max-height: 320px;"}\n\n    overflow: auto;\n    border-radius: 8px;\n    background-color: ${cssConfig.background};\n    color: ${cssConfig.color};\n    box-shadow: ${cssConfig.boxShadowLine}, ${cssConfig.boxShadow};\n    ${cssConfig.width?`width: ${cssConfig.width}px;`:""}\n    ${cssConfig.height?`height: ${cssConfig.height}px;`:""}\n    ${textConfig};\n  }\n\n  .${rootHashClass} .ant-popover-title {\n    color: ${cssConfig.color};\n  }\n\n  .${rootHashClass} .ant-popover-inner-content {\n    padding: 16px;\n    white-space: pre-wrap;\n  }\n\n  .${rootHashClass} .ant-popover-arrow {\n    width: 12px;\n    height: 12px;\n  }\n\n  .${rootHashClass} .ant-popover-arrow-content {\n    background-color: ${cssConfig.background};\n    box-shadow: ${cssConfig.boxShadowLine}, ${cssConfig.arrowBoxShadow};\n    width: 12px;\n    height: 12px;\n  }\n\n  .${rootHashClass}.ant-popover-placement-top .ant-popover-arrow {\n    bottom: 2px;\n  }\n  .${rootHashClass}.ant-popover-placement-top .ant-popover-arrow-content {\n    border-bottom-right-radius: 2px;\n  }\n\n  .${rootHashClass}.ant-popover-placement-bottom .ant-popover-arrow {\n    top: 2px;\n  }\n  .${rootHashClass}.ant-popover-placement-bottom .ant-popover-arrow-content {\n    border-top-left-radius: 2px;\n    box-shadow: ${cssConfig.boxShadowLine};\n  }\n\n  .${rootHashClass}.ant-popover-placement-right .ant-popover-arrow {\n    left: 2px;\n  }\n  .${rootHashClass}.ant-popover-placement-right .ant-popover-arrow-content {\n    border-bottom-left-radius: 2px;\n  }\n\n  .${rootHashClass}.ant-popover-placement-left .ant-popover-arrow {\n    right: 2px;\n  }\n  .${rootHashClass}.ant-popover-placement-left .ant-popover-arrow-content {\n    border-top-right-radius: 2px;\n  }\n  `};var useThemedComponent=__webpack_require__("./helpers/useThemedComponent.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const Popover=({defaultVisible=!1,placement="bottom",overlayClassName,shouldLimitSize=!0,...rawProps})=>{const props=(props=>{const{cssConfig,...rest}=(0,useThemedComponent.K)(props,{componentName:"popover",defaultValues:{}});return{...rest,cssConfig:(0,react.useMemo)((()=>({...cssConfig,width:props.width,height:props.height})),[cssConfig,props.width,props.height])}})(rawProps),[visible,setVisible]=react.useState(defaultVisible),tooltipRef=react.useRef(null),onGlobalTooltipsVisibleChange=react.useCallback((event=>{event.detail.tooltipRef!==tooltipRef&&setVisible(!1)}),[tooltipRef]);react.useEffect((()=>(document.addEventListener("kl-components-v6:tooltip-open",onGlobalTooltipsVisibleChange),()=>{document.removeEventListener("kl-components-v6:tooltip-open",onGlobalTooltipsVisibleChange)})),[]);const globalClassName=(0,useGlobalComponentStyles.c)(props.cssConfig,getPopoverGlobalStyles,Popover,{shouldLimitSize});return react.createElement(popover.A,_extends({ref:tooltipRef,onVisibleChange:visible=>{setVisible(visible),visible&&document.dispatchEvent(new CustomEvent("kl-components-v6:tooltip-open",{detail:{tooltipRef}}))},overlayClassName:classnames_default()(overlayClassName,globalClassName),visible,defaultVisible,align:ALIGNS[placement],placement,trigger:"click"},props))};Popover.__docgenInfo={description:"",methods:[],displayName:"Popover",props:{placement:{required:!1,tsType:{name:"union",raw:"'top' | 'left' | 'right' | 'bottom' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' | 'leftTop' | 'leftBottom' | 'rightTop' | 'rightBottom'",elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'topLeft'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottomRight'"},{name:"literal",value:"'leftTop'"},{name:"literal",value:"'leftBottom'"},{name:"literal",value:"'rightTop'"},{name:"literal",value:"'rightBottom'"}]},description:"Popover position relative to the target",defaultValue:{value:"'bottom'",computed:!1}},shouldLimitSize:{required:!1,tsType:{name:"boolean"},description:"Should set max width and max height",defaultValue:{value:"true",computed:!1}},width:{required:!1,tsType:{name:"number"},description:"Width"},height:{required:!1,tsType:{name:"number"},description:"Height"},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Custom theme"},defaultVisible:{defaultValue:{value:"false",computed:!1},required:!1}}}},"./src/popover/Popover.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,ColorTokens:()=>ColorTokens,Positions:()=>Positions,ThreeWaysToTrigger:()=>ThreeWaysToTrigger,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Popover_stories});var Palette=__webpack_require__("./design-system/palette/Palette.tsx"),badges=__webpack_require__("./.storybook/badges.tsx"),withMeta=__webpack_require__("./.storybook/components/Meta/withMeta.tsx"),helpers=__webpack_require__("./.storybook/helpers.ts"),ActionButton=__webpack_require__("./src/action-button/ActionButton.tsx"),Button=__webpack_require__("./src/button/Button.tsx"),Textbox=__webpack_require__("./src/input/Textbox.tsx"),Link=__webpack_require__("./src/link/Link.tsx"),Space=__webpack_require__("./src/space/Space.tsx"),Typography=__webpack_require__("./src/typography/Typography.tsx"),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),js=__webpack_require__("./node_modules/@kaspersky/hexa-ui-core/esm/colors/js/index.js"),StatusInfoOutline=__webpack_require__("./node_modules/@kaspersky/hexa-ui-icons/esm/16/StatusInfoOutline.js");const meta_namespaceObject=JSON.parse('{"dod":{"designTokens":true,"useThemedHook":true,"unitTests":true,"screenshotTests":false,"migration":false,"apiTable":true,"storybook":true,"figmaView":true},"component":"Popover","description":"Немодальный диалог, который имеет функциональную вложенность. В качестве основы используется Popover из библиотеки Antd.","usage":"Элемент появляется при наведении на родительский элемент, к которому присвоен Popover","designLink":"https://www.figma.com/file/7TGvGlgGfTltMG1OBgLq8p/%F0%9F%93%96-%5BB2B%5D-Hexa-UI-Kit?node-id=51206-280121","figmaView":"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2F7TGvGlgGfTltMG1OBgLq8p%2F00-%255BB2B%255D-Hexa-UI-Kit%3Ftype%3Ddesign%26node-id%3D36112%253A133325%26mode%3Ddev"}');var Popover=__webpack_require__("./src/popover/Popover.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const Popover_stories={title:"Hexa UI Components/Popover",component:Popover.A,argTypes:{trigger:{control:"select",options:["click","focus","hover"]},...(0,helpers.Of)(["theme"])},args:{trigger:"click",placement:"bottom",shouldLimitSize:!0},parameters:{badges:[badges.j.stable,badges.j.reviewedByDesign],docs:{page:(0,withMeta.C)(meta_namespaceObject)},design:meta_namespaceObject.figmaView}},popoverContentColumnContainer={display:"flex",flexDirection:"column",gap:10,flex:"1 1 50%"},FillText=()=>react.createElement(Typography.E,null,"User anomaly behavior analysis tracks the following events:",react.createElement("ul",null,react.createElement("li",null,"Login failure"),react.createElement("li",null,"Creation of a new administrator account"),react.createElement("li",null,"Simultaneous login from different devices to an administrator account"),react.createElement("li",null,"Login from a new device"),react.createElement("li",null,"Login from a new location"))),LittlePopoverContent=()=>react.createElement(Space.$,{gap:12,direction:"vertical",align:"flex-start",width:"200px"},react.createElement(Typography.E,null,"User anomaly behavior analysis tracks the following events"),react.createElement(Link.N,{text:"Online help",decoration:"icon",size:"medium"})),SimplePopoverContent=()=>react.createElement("div",null,react.createElement(FillText,null),react.createElement(Link.N,{text:"Online help",decoration:"icon",size:"medium"})),CompexPopoverContent=()=>react.createElement(Space.$,{gap:20,wrap:"nowrap",align:"flex-start"},react.createElement("div",{style:popoverContentColumnContainer},react.createElement(Textbox.R,{placeholder:"Text 1"}),react.createElement(Textbox.R,{placeholder:"Text 2"}),react.createElement(Textbox.R,{placeholder:"Text 3"}),react.createElement(Link.N,{text:"Link to external resource",decoration:"icon",size:"medium"})),react.createElement("div",{style:popoverContentColumnContainer},react.createElement(FillText,null),react.createElement(Link.N,{text:"Online help",decoration:"icon",size:"medium"}))),OverflowPopoverContent=()=>react.createElement("div",{style:{display:"flex",gap:20,width:700,height:500}},react.createElement("div",{style:popoverContentColumnContainer},react.createElement(Textbox.R,{placeholder:"Text 1"}),react.createElement(Textbox.R,{placeholder:"Text 2"}),react.createElement(Textbox.R,{placeholder:"Text 3"}),react.createElement(Textbox.R,{placeholder:"Text 4"}),react.createElement(Textbox.R,{placeholder:"Text 5"}),react.createElement(Textbox.R,{placeholder:"Text 6"}),react.createElement(Link.N,{text:"Link to external resource",decoration:"icon",size:"medium"})),react.createElement("div",{style:popoverContentColumnContainer},react.createElement(FillText,null),react.createElement(FillText,null),react.createElement(Link.N,{text:"Online help",decoration:"icon",size:"medium"}))),Basic={render:args=>react.createElement("div",{style:{paddingLeft:"300px",paddingTop:"250px"}},react.createElement(Space.$,{gap:20,direction:"vertical"},react.createElement(Space.$,{gap:10},react.createElement(Typography.E,null,"Click to see Popover (",react.createElement("b",null,"simple")," content)"),react.createElement(Popover.A,_extends({},args,{content:SimplePopoverContent}),react.createElement(ActionButton.r,{interactive:!1,icon:react.createElement(StatusInfoOutline.A,null)}))),react.createElement(Space.$,{gap:10},react.createElement(Typography.E,null,"Click to see Popover (",react.createElement("b",null,"complex")," content)"),react.createElement(Popover.A,_extends({},args,{content:CompexPopoverContent}),react.createElement(ActionButton.r,{interactive:!1,icon:react.createElement(StatusInfoOutline.A,null)}))),react.createElement(Space.$,{gap:10},react.createElement(Typography.E,null,"Click to see Popover (",react.createElement("b",null,"overflow")," content)"),react.createElement(Popover.A,_extends({},args,{content:OverflowPopoverContent}),react.createElement(ActionButton.r,{interactive:!1,icon:react.createElement(StatusInfoOutline.A,null)})))))},StyledButton=(0,styled_components_browser_esm.Ay)(Button.$).withConfig({displayName:"Popoverstories__StyledButton",componentId:"sc-16yrdz6-0"})(["margin:8px;"]),Positions={render:args=>react.createElement("div",{style:{paddingLeft:"300px",paddingTop:"150px"}},react.createElement("div",{style:{marginLeft:80,whiteSpace:"nowrap"}},react.createElement(Popover.A,{placement:"topLeft",content:LittlePopoverContent},react.createElement(StyledButton,null,"TL")),react.createElement(Popover.A,{placement:"top",content:LittlePopoverContent},react.createElement(StyledButton,null,"Top")),react.createElement(Popover.A,{placement:"topRight",content:LittlePopoverContent},react.createElement(StyledButton,null,"TR"))),react.createElement("div",{style:{width:80,float:"left"}},react.createElement(Popover.A,{placement:"leftTop",content:LittlePopoverContent},react.createElement(StyledButton,null,"LT")),react.createElement(Popover.A,{placement:"left",content:LittlePopoverContent},react.createElement(StyledButton,null,"Left")),react.createElement(Popover.A,{placement:"leftBottom",content:LittlePopoverContent},react.createElement(StyledButton,null,"LB"))),react.createElement("div",{style:{width:80,marginLeft:352}},react.createElement(Popover.A,{placement:"rightTop",content:LittlePopoverContent},react.createElement(StyledButton,null,"RT")),react.createElement(Popover.A,{placement:"right",content:LittlePopoverContent},react.createElement(StyledButton,null,"Right")),react.createElement(Popover.A,{placement:"rightBottom",content:LittlePopoverContent},react.createElement(StyledButton,null,"RB"))),react.createElement("div",{style:{marginLeft:80,clear:"both",whiteSpace:"nowrap"}},react.createElement(Popover.A,{placement:"bottomLeft",content:LittlePopoverContent},react.createElement(StyledButton,null,"BL")),react.createElement(Popover.A,_extends({},args,{placement:"bottom",content:LittlePopoverContent}),react.createElement(StyledButton,null,"Bottom")),react.createElement(Popover.A,{placement:"bottomRight",content:LittlePopoverContent},react.createElement(StyledButton,null,"BR"))))},ThreeWaysToTrigger={render:args=>react.createElement("div",{style:{paddingLeft:"300px",paddingTop:"250px"}},react.createElement(Popover.A,_extends({},args,{placement:"topLeft",trigger:"click",content:LittlePopoverContent}),react.createElement(StyledButton,null,"Click")),react.createElement(Popover.A,_extends({},args,{placement:"top",trigger:"hover",content:LittlePopoverContent}),react.createElement(StyledButton,null,"Hover")),react.createElement(Popover.A,_extends({},args,{placement:"topRight",trigger:"focus",content:LittlePopoverContent}),react.createElement(StyledButton,null,"Focus")))},ColorTokens={args:{source:js.Ah.popover},render:args=>react.createElement(Palette.r,args)};Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  render: (args: PopoverProps) => <div style={{\n    paddingLeft: '300px',\n    paddingTop: '250px'\n  }}>\n      <Space gap={20} direction=\"vertical\">\n        <Space gap={10}>\n          <Text>Click to see Popover (<b>simple</b> content)</Text>\n          <Popover {...args} content={SimplePopoverContent}>\n            <ActionButton interactive={false} icon={<StatusInfoOutline />} />\n          </Popover>\n        </Space>\n        <Space gap={10}>\n          <Text>Click to see Popover (<b>complex</b> content)</Text>\n          <Popover {...args} content={CompexPopoverContent}>\n            <ActionButton interactive={false} icon={<StatusInfoOutline />} />\n          </Popover>\n        </Space>\n        <Space gap={10}>\n          <Text>Click to see Popover (<b>overflow</b> content)</Text>\n          <Popover {...args} content={OverflowPopoverContent}>\n            <ActionButton interactive={false} icon={<StatusInfoOutline />} />\n          </Popover>\n        </Space>\n      </Space>\n    </div>\n}",...Basic.parameters?.docs?.source}}},Positions.parameters={...Positions.parameters,docs:{...Positions.parameters?.docs,source:{originalSource:'{\n  render: (args: PopoverProps) => <div style={{\n    paddingLeft: \'300px\',\n    paddingTop: \'150px\'\n  }}>\n      <div style={{\n      marginLeft: buttonWidth,\n      whiteSpace: \'nowrap\'\n    }}>\n        <Popover placement="topLeft" content={LittlePopoverContent}>\n          <StyledButton>TL</StyledButton>\n        </Popover>\n        <Popover placement="top" content={LittlePopoverContent}>\n          <StyledButton>Top</StyledButton>\n        </Popover>\n        <Popover placement="topRight" content={LittlePopoverContent}>\n          <StyledButton>TR</StyledButton>\n        </Popover>\n      </div>\n      <div style={{\n      width: buttonWidth,\n      float: \'left\'\n    }}>\n        <Popover placement="leftTop" content={LittlePopoverContent}>\n          <StyledButton>LT</StyledButton>\n        </Popover>\n        <Popover placement="left" content={LittlePopoverContent}>\n          <StyledButton>Left</StyledButton>\n        </Popover>\n        <Popover placement="leftBottom" content={LittlePopoverContent}>\n          <StyledButton>LB</StyledButton>\n        </Popover>\n      </div>\n      <div style={{\n      width: buttonWidth,\n      marginLeft: buttonWidth * 4 + 32\n    }}>\n        <Popover placement="rightTop" content={LittlePopoverContent}>\n          <StyledButton>RT</StyledButton>\n        </Popover>\n        <Popover placement="right" content={LittlePopoverContent}>\n          <StyledButton>Right</StyledButton>\n        </Popover>\n        <Popover placement="rightBottom" content={LittlePopoverContent}>\n          <StyledButton>RB</StyledButton>\n        </Popover>\n      </div>\n      <div style={{\n      marginLeft: buttonWidth,\n      clear: \'both\',\n      whiteSpace: \'nowrap\'\n    }}>\n        <Popover placement="bottomLeft" content={LittlePopoverContent}>\n          <StyledButton>BL</StyledButton>\n        </Popover>\n        <Popover {...args} placement="bottom" content={LittlePopoverContent}>\n          <StyledButton>Bottom</StyledButton>\n        </Popover>\n        <Popover placement="bottomRight" content={LittlePopoverContent}>\n          <StyledButton>BR</StyledButton>\n        </Popover>\n      </div>\n    </div>\n}',...Positions.parameters?.docs?.source}}},ThreeWaysToTrigger.parameters={...ThreeWaysToTrigger.parameters,docs:{...ThreeWaysToTrigger.parameters?.docs,source:{originalSource:'{\n  render: (args: PopoverProps) => <div style={{\n    paddingLeft: \'300px\',\n    paddingTop: \'250px\'\n  }}>\n      <Popover {...args} placement="topLeft" trigger="click" content={LittlePopoverContent}>\n        <StyledButton>Click</StyledButton>\n      </Popover>\n      <Popover {...args} placement="top" trigger="hover" content={LittlePopoverContent}>\n        <StyledButton>Hover</StyledButton>\n      </Popover>\n      <Popover {...args} placement="topRight" trigger="focus" content={LittlePopoverContent}>\n        <StyledButton>Focus</StyledButton>\n      </Popover>\n    </div>\n}',...ThreeWaysToTrigger.parameters?.docs?.source}}},ColorTokens.parameters={...ColorTokens.parameters,docs:{...ColorTokens.parameters?.docs,source:{originalSource:"{\n  args: {\n    source: componentColors.popover\n  },\n  render: args => <ThemedPalette {...args} />\n}",...ColorTokens.parameters?.docs?.source}}};const __namedExportsOrder=["Basic","Positions","ThreeWaysToTrigger","ColorTokens"]}}]);