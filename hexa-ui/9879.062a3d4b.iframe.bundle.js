"use strict";(self.webpackChunk_kaspersky_hexa_ui=self.webpackChunk_kaspersky_hexa_ui||[]).push([[9879],{"./src/table/stories/_commonConstants.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Dn:()=>patchKeys,I7:()=>basicArgTypes,MF:()=>basicDataSource,W4:()=>basicTreeDataSource,hz:()=>genArgType,iU:()=>BasicTableStory,mO:()=>Wrapper,q0:()=>basicTwoColumns,t$:()=>generateDataSource});var _src_table__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/table/index.ts"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const Wrapper=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js").Ay.div.withConfig({displayName:"_commonConstants__Wrapper",componentId:"sc-1v4ur0m-0"})(["padding:50px;width:100%;"]),BasicTableStory=args=>{var _args$rowSelection;const[selectedRowKeys,setSelectedRowKeys]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null===(_args$rowSelection=args.rowSelection)||void 0===_args$rowSelection?void 0:_args$rowSelection.selectedRowKeys);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Wrapper,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src_table__WEBPACK_IMPORTED_MODULE_2__.X,_extends({rowSelection:{selectedRowKeys,onChange:newSelectedRowKeys=>{console.log(`selectedRowKeys changed: ${newSelectedRowKeys}`),setSelectedRowKeys(newSelectedRowKeys)}}},args)))},patchKeys=(data,prefix=[])=>data.map(((item,index)=>({...item,...item.children&&{children:patchKeys(item.children,[...prefix,index])},key:[...prefix,index].join(",")}))),genArgType=(description,control,defaultValue)=>({description,control,table:defaultValue?{defaultValue:{summary:defaultValue}}:void 0}),basicArgTypes={columns:genArgType("An array of column objects"),dataSource:genArgType('An array of data. Each object should contain all field used as a "dataIndex" in "columns"'),rowSelection:genArgType("rowSelection.selectedRowKeys - an array of selected rows<br/>rowSelection.onChange - controlled handler","object"),useAccordion:genArgType("Is needed to use accordion in dataSource","boolean","false"),onDragStart:genArgType("Handler for start of dragging"),onDragEnd:genArgType("Handler for end of dragging"),useDragDrop:genArgType("Is drag-n-drop enabled","boolean","false"),emptyText:genArgType("Custom ReactElement that will be shown instead of default empty text"),groupBy:genArgType("dataIndex of column to group"),groupTitleRender:genArgType("Render function for title of group"),rowClassName:genArgType("Classname for each row. It can be used to style content (hover, for example)"),onColumnResize:genArgType("Handler on column resize"),resizingMode:{...genArgType("Resizing mode","select"),options:["max","last","manual","scroll"]},stickyHeader:genArgType("Intend from top in px. Set undefined if sticky is not needed","number","undefined"),loading:genArgType("Is table loading","boolean","false"),loaderProps:genArgType("loaderProps.indicator - custom loader component<br/>loaderProps.delay - delay to show loader"),pagination:{...genArgType("Go to Hexa UI Components/Pagination. Allowed props: current, pageSize, total, simple, onChange, onShowSizeChange.External fields:<br/>pagination.infiniteScrollPageGetter: (page, pageSize) => Promise- function that returns Promise where you can set new data on resolve() and throw error on reject()")},infiniteScrollEndTableText:genArgType("End text when table is ended during infinite scrolling"),infiniteScrollRetryText:genArgType("Retry text when some error occurred during infinite scrolling"),infiniteScrollErrorText:genArgType("Error text when some error occurred during infinite scrolling"),toolbar:{...genArgType("Go to Hexa UI Components/Toolbar. External fields:<br/>toolbar.showSearch - is search enabled<br/>toolbar.showColumns - is columns selector shown<br/>toolbar.showGrouping - is grouping selector shown")},enableSearchHighlighting:genArgType("Should the found text be highlighted","boolean","false"),filterItems:genArgType("An array of filters to show"),initialFilters:genArgType("Filters to set by default"),initialSorting:genArgType("initialSorting.field - column to sort by default<br/>initialSorting.direction - direction of sorting"),saveFilters:genArgType("saveFilters.storageKey - key name of saved filters"),expandable:genArgType('expandable.expandColumnName = "col1" - expanding the tree will be at col1'),defaultColumnWidth:genArgType("Default width of columns","number","undefined"),columnVerticalAlign:{...genArgType("Column vertical align","radio","top"),options:["top","middle","bottom","inherit"]},rowMode:{...genArgType("Row mode","radio","standard"),options:["standard","compact"]},disabled:genArgType("If rowSelection is disabled","boolean","false")},basicTwoColumns=[{title:"table.column.name",key:"name",dataIndex:"name",width:300},{title:"table.column2.name",key:"description",dataIndex:"description",width:200}],generateDataSource=length=>Array.from({length},((_,index)=>({name:`Value ${index+1}`,description:`Description ${index+1}`,key:index+1}))),basicDataSource=generateDataSource(180),basicTreeDataSource=[{name:"John Doe",description:"Nice guy",age:34},{name:"Jane Doe",description:"Cool girl",age:33},{name:"James Doe",description:"Noble man",age:65,children:[{name:"Mary Sue",description:"Dubious character",age:41,children:[{name:"Dirk Gently",description:"Best detective",age:15}]},{name:"John Snow",description:"Knows nothing",age:45}]},{name:"Judy Doe",description:"Great person",age:38}];BasicTableStory.__docgenInfo={description:"",methods:[],displayName:"BasicTableStory",props:{theme:{required:!1,tsType:{name:"ThemeKey"},description:""},dataSource:{required:!1,tsType:{name:"Array",elements:[{name:"T"}],raw:"T[]"},description:""},columns:{required:!1,tsType:{name:"Array",elements:[{name:"intersection",raw:"Omit<ColumnType<TableRecord>, 'key' | 'sorter' | 'filters'> & {\n  key: React.Key,\n  title?: string | ReactElement,\n  /* Show Dash in empty cell for column */\n  hasEmptyCellDash?: boolean,\n  dataIndex?: string,\n  columnId?: string,\n  isSortable?: boolean,\n  allowMultipleFilters?: boolean,\n  sorter?: CustomSorter,\n  /** @deprecated Use **sorter** for custom column sorting */\n  customSorter?: DefaultSorter,\n  groupingAvailable?: boolean,\n  hideColumnAvailable?: boolean,\n  show?: boolean,\n  filters?: ColumnFilter[],\n  filterType?: {\n    type: FilterType,\n    getAvailableValues?: () => Promise<any>\n  },\n  width?: number | string,\n  renderGroupTitle?: (data: string) => ReactNode,\n  resizing?: {\n    disabled: boolean\n  }\n}",elements:[{name:"Omit",elements:[{name:"ColumnType",elements:[{name:"signature",type:"object",raw:"{\n  [key: string]: any,\n  children?: TableRecord[]\n}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}},{key:"children",value:{name:"Array",elements:[{name:"TableRecord"}],raw:"TableRecord[]",required:!1}}]}}],raw:"ColumnType<TableRecord>"},{name:"union",raw:"'key' | 'sorter' | 'filters'",elements:[{name:"literal",value:"'key'"},{name:"literal",value:"'sorter'"},{name:"literal",value:"'filters'"}]}],raw:"Omit<ColumnType<TableRecord>, 'key' | 'sorter' | 'filters'>"},{name:"signature",type:"object",raw:"{\n  key: React.Key,\n  title?: string | ReactElement,\n  /* Show Dash in empty cell for column */\n  hasEmptyCellDash?: boolean,\n  dataIndex?: string,\n  columnId?: string,\n  isSortable?: boolean,\n  allowMultipleFilters?: boolean,\n  sorter?: CustomSorter,\n  /** @deprecated Use **sorter** for custom column sorting */\n  customSorter?: DefaultSorter,\n  groupingAvailable?: boolean,\n  hideColumnAvailable?: boolean,\n  show?: boolean,\n  filters?: ColumnFilter[],\n  filterType?: {\n    type: FilterType,\n    getAvailableValues?: () => Promise<any>\n  },\n  width?: number | string,\n  renderGroupTitle?: (data: string) => ReactNode,\n  resizing?: {\n    disabled: boolean\n  }\n}",signature:{properties:[{key:"key",value:{name:"ReactKey",raw:"React.Key",required:!0}},{key:"title",value:{name:"union",raw:"string | ReactElement",elements:[{name:"string"},{name:"ReactElement"}],required:!1}},{key:"hasEmptyCellDash",value:{name:"boolean",required:!1}},{key:"dataIndex",value:{name:"string",required:!1}},{key:"columnId",value:{name:"string",required:!1}},{key:"isSortable",value:{name:"boolean",required:!1}},{key:"allowMultipleFilters",value:{name:"boolean",required:!1}},{key:"sorter",value:{name:"signature",type:"function",raw:"(a: TableRecord, b: TableRecord, isAsc: boolean) => number",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  [key: string]: any,\n  children?: TableRecord[]\n}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}},{key:"children",value:{name:"Array",elements:[{name:"TableRecord"}],raw:"TableRecord[]",required:!1}}]}},name:"a"},{type:{name:"signature",type:"object",raw:"{\n  [key: string]: any,\n  children?: TableRecord[]\n}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}},{key:"children",value:{name:"Array",elements:[{name:"TableRecord"}],raw:"TableRecord[]",required:!1}}]}},name:"b"},{type:{name:"boolean"},name:"isAsc"}],return:{name:"number"}},required:!1}},{key:"customSorter",value:{name:"signature",type:"function",raw:"<T extends TableRecord>(rows: T[], propName: keyof T, isAsc: boolean) => T[]",signature:{arguments:[{type:{name:"Array",elements:[{name:"T"}],raw:"T[]"},name:"rows"},{type:{name:"T"},name:"propName"},{type:{name:"boolean"},name:"isAsc"}],return:{name:"Array",elements:[{name:"T"}],raw:"T[]"}},required:!1},description:"@deprecated Use **sorter** for custom column sorting"},{key:"groupingAvailable",value:{name:"boolean",required:!1}},{key:"hideColumnAvailable",value:{name:"boolean",required:!1}},{key:"show",value:{name:"boolean",required:!1}},{key:"filters",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  localizationKey?: string,\n  name: string,\n  filter: (record: TableRecord) => boolean\n}",signature:{properties:[{key:"localizationKey",value:{name:"string",required:!1}},{key:"name",value:{name:"string",required:!0}},{key:"filter",value:{name:"signature",type:"function",raw:"(record: TableRecord) => boolean",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  [key: string]: any,\n  children?: TableRecord[]\n}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}},{key:"children",value:{name:"Array",elements:[{name:"TableRecord"}],raw:"TableRecord[]",required:!1}}]}},name:"record"}],return:{name:"boolean"}},required:!0}}]}}],raw:"ColumnFilter[]",required:!1}},{key:"filterType",value:{name:"signature",type:"object",raw:"{\n  type: FilterType,\n  getAvailableValues?: () => Promise<any>\n}",signature:{properties:[{key:"type",value:{name:"FilterType",required:!0}},{key:"getAvailableValues",value:{name:"signature",type:"function",raw:"() => Promise<any>",signature:{arguments:[],return:{name:"Promise",elements:[{name:"any"}],raw:"Promise<any>"}},required:!1}}]},required:!1}},{key:"width",value:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}],required:!1}},{key:"renderGroupTitle",value:{name:"signature",type:"function",raw:"(data: string) => ReactNode",signature:{arguments:[{type:{name:"string"},name:"data"}],return:{name:"ReactNode"}},required:!1}},{key:"resizing",value:{name:"signature",type:"object",raw:"{\n  disabled: boolean\n}",signature:{properties:[{key:"disabled",value:{name:"boolean",required:!0}}]},required:!1}}]}}]}],raw:"TableColumn[]"},description:""},onColumnResize:{required:!1,tsType:{name:"signature",type:"function",raw:"(column: any) => void",signature:{arguments:[{type:{name:"any"},name:"column"}],return:{name:"void"}}},description:"This prop should be memoized"},onManualColumnResize:{required:!1,tsType:{name:"signature",type:"function",raw:"(column: TableRecord) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  [key: string]: any,\n  children?: TableRecord[]\n}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}},{key:"children",value:{name:"Array",elements:[{name:"TableRecord"}],raw:"TableRecord[]",required:!1}}]}},name:"column"}],return:{name:"void"}}},description:"This prop should be memoized"},onGroupByChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(dataIndex: string) => void",signature:{arguments:[{type:{name:"string"},name:"dataIndex"}],return:{name:"void"}}},description:""},search:{required:!1,tsType:{name:"boolean"},description:""},header:{required:!1,tsType:{name:"string"},description:""},pagination:{required:!1,tsType:{name:"union",raw:"false | TablePaginationProps",elements:[{name:"literal",value:"false"},{name:"intersection",raw:"PaginationProps & {\n  infiniteScrollPageGetter?: (page: number) => null | TableRecord[] | Promise<null>,\n  restoreCurrentWhenDataChange?: boolean\n}",elements:[{name:"intersection",raw:"{\n  /** Current page number */\n  current?: number,\n  /** Number of data items per page */\n  pageSize?: number,\n  /** Disabled state */\n  disabled?: boolean,\n  /** Whether to hide pager on single page */\n  hideOnSinglePage?: boolean,\n  /** Specify the sizeChanger options */\n  pageSizeOptions?: string[],\n  /** Determine whether to show pageSize select, it will be true when total > 50 */\n  showSizeChanger?: boolean,\n  /** Show less pagination items: 3 or 5 */\n  showLessItems?: boolean,\n  /**\n   * Total number of data items, including children, if data is tree-like structure\n   */\n  total?: number,\n  /**\n   * Total number of root data items.\n   * Used to calculate the correct number of pages if data is tree-like structure.\n   * Equals to **total** if data is a flat array and should be ignored\n   */\n  totalRoot?: number,\n  /** Number of selected data items */\n  selected?: number,\n  /** Show number of selected data items */\n  showSelected?: boolean,\n  /** Called when the page number or pageSize is changed, and it takes the resulting page number and pageSize as its arguments */\n  onChange?: (page: number, pageSize: number) => void,\n  /** Called when pageSize is changed */\n  onShowSizeChange?: (current: number, size: number) => void,\n  /** Simple Table mode. Without total, size changer and quick jumper */\n  simple?: boolean\n} & PaginationThemeProps & TestingProps",elements:[{name:"signature",type:"object",raw:"{\n  /** Current page number */\n  current?: number,\n  /** Number of data items per page */\n  pageSize?: number,\n  /** Disabled state */\n  disabled?: boolean,\n  /** Whether to hide pager on single page */\n  hideOnSinglePage?: boolean,\n  /** Specify the sizeChanger options */\n  pageSizeOptions?: string[],\n  /** Determine whether to show pageSize select, it will be true when total > 50 */\n  showSizeChanger?: boolean,\n  /** Show less pagination items: 3 or 5 */\n  showLessItems?: boolean,\n  /**\n   * Total number of data items, including children, if data is tree-like structure\n   */\n  total?: number,\n  /**\n   * Total number of root data items.\n   * Used to calculate the correct number of pages if data is tree-like structure.\n   * Equals to **total** if data is a flat array and should be ignored\n   */\n  totalRoot?: number,\n  /** Number of selected data items */\n  selected?: number,\n  /** Show number of selected data items */\n  showSelected?: boolean,\n  /** Called when the page number or pageSize is changed, and it takes the resulting page number and pageSize as its arguments */\n  onChange?: (page: number, pageSize: number) => void,\n  /** Called when pageSize is changed */\n  onShowSizeChange?: (current: number, size: number) => void,\n  /** Simple Table mode. Without total, size changer and quick jumper */\n  simple?: boolean\n}",signature:{properties:[{key:"current",value:{name:"number",required:!1},description:"Current page number"},{key:"pageSize",value:{name:"number",required:!1},description:"Number of data items per page"},{key:"disabled",value:{name:"boolean",required:!1},description:"Disabled state"},{key:"hideOnSinglePage",value:{name:"boolean",required:!1},description:"Whether to hide pager on single page"},{key:"pageSizeOptions",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1},description:"Specify the sizeChanger options"},{key:"showSizeChanger",value:{name:"boolean",required:!1},description:"Determine whether to show pageSize select, it will be true when total > 50"},{key:"showLessItems",value:{name:"boolean",required:!1},description:"Show less pagination items: 3 or 5"},{key:"total",value:{name:"number",required:!1},description:"Total number of data items, including children, if data is tree-like structure"},{key:"totalRoot",value:{name:"number",required:!1},description:"Total number of root data items.\nUsed to calculate the correct number of pages if data is tree-like structure.\nEquals to **total** if data is a flat array and should be ignored"},{key:"selected",value:{name:"number",required:!1},description:"Number of selected data items"},{key:"showSelected",value:{name:"boolean",required:!1},description:"Show number of selected data items"},{key:"onChange",value:{name:"signature",type:"function",raw:"(page: number, pageSize: number) => void",signature:{arguments:[{type:{name:"number"},name:"page"},{type:{name:"number"},name:"pageSize"}],return:{name:"void"}},required:!1},description:"Called when the page number or pageSize is changed, and it takes the resulting page number and pageSize as its arguments"},{key:"onShowSizeChange",value:{name:"signature",type:"function",raw:"(current: number, size: number) => void",signature:{arguments:[{type:{name:"number"},name:"current"},{type:{name:"number"},name:"size"}],return:{name:"void"}},required:!1},description:"Called when pageSize is changed"},{key:"simple",value:{name:"boolean",required:!1},description:"Simple Table mode. Without total, size changer and quick jumper"}]}},{name:"signature",type:"object",raw:"{\n  /** Custom theme */\n  theme?: Theme\n}",signature:{properties:[{key:"theme",value:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}],required:!1},description:"Custom theme"}]}},{name:"signature",type:"object",raw:"{\n  /** Actual identifier for autotesting, whill be passed to HTML attribute data-testid */\n  testId?: string,\n  /** @deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id */\n  klId?: string,\n  /** @deprecated Use 'testId' prop instead */\n  componentId?: string,\n  /** @deprecated Use 'testId' prop instead */\n  dataTestId?: string,\n  componentType?: string\n}",signature:{properties:[{key:"testId",value:{name:"string",required:!1},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},{key:"klId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},{key:"componentId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead"},{key:"dataTestId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead"},{key:"componentType",value:{name:"string",required:!1}}]}}]},{name:"signature",type:"object",raw:"{\n  infiniteScrollPageGetter?: (page: number) => null | TableRecord[] | Promise<null>,\n  restoreCurrentWhenDataChange?: boolean\n}",signature:{properties:[{key:"infiniteScrollPageGetter",value:{name:"signature",type:"function",raw:"(page: number) => null | TableRecord[] | Promise<null>",signature:{arguments:[{type:{name:"number"},name:"page"}],return:{name:"union",raw:"null | TableRecord[] | Promise<null>",elements:[{name:"null"},{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  [key: string]: any,\n  children?: TableRecord[]\n}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}},{key:"children",value:{name:"Array",elements:[{name:"TableRecord"}],raw:"TableRecord[]",required:!1}}]}}],raw:"TableRecord[]"},{name:"Promise",elements:[{name:"null"}],raw:"Promise<null>"}]}},required:!1}},{key:"restoreCurrentWhenDataChange",value:{name:"boolean",required:!1}}]}}]}]},description:""},showColumnsSelector:{required:!1,tsType:{name:"boolean"},description:""},onCloseColumnsSelector:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onColumnsChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(columns: any[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"any"}],raw:"any[]"},name:"columns"}],return:{name:"void"}}},description:""},groupBy:{required:!1,tsType:{name:"string"},description:""},useAccordion:{required:!1,tsType:{name:"boolean"},description:""},stickyHeader:{required:!1,tsType:{name:"number"},description:""},toolbar:{required:!1,tsType:{name:"ToolbarProps"},description:""},onSearch:{required:!1,tsType:{name:"signature",type:"function",raw:"(searchString: string) => void",signature:{arguments:[{type:{name:"string"},name:"searchString"}],return:{name:"void"}}},description:""},groupTitleRender:{required:!1,tsType:{name:"signature",type:"function",raw:"(data: string) => ReactNode",signature:{arguments:[{type:{name:"string"},name:"data"}],return:{name:"ReactNode"}}},description:""},resizingMode:{required:!1,tsType:{name:"union",raw:"'max' | 'last' | 'manual' | 'scroll'",elements:[{name:"literal",value:"'max'"},{name:"literal",value:"'last'"},{name:"literal",value:"'manual'"},{name:"literal",value:"'scroll'"}]},description:""},enableSearchHighlighting:{required:!1,tsType:{name:"boolean"},description:""},stickyScrollingContainer:{required:!1,tsType:{name:"Element"},description:""},maxColumnsForAutoResizing:{required:!1,tsType:{name:"number"},description:""},defaultColumnWidth:{required:!1,tsType:{name:"number"},description:""},isDefaultSortDisabled:{required:!1,tsType:{name:"boolean"},description:""},infiniteScrollEndTableText:{required:!1,tsType:{name:"ReactNode"},description:""},infiniteScrollErrorText:{required:!1,tsType:{name:"ReactNode"},description:""},infiniteScrollRetryText:{required:!1,tsType:{name:"ReactNode"},description:""},loaderProps:{required:!1,tsType:{name:"SpinProps"},description:"Config object for spinner while loading"},useDragDrop:{required:!1,tsType:{name:"boolean"},description:""},onDragStart:{required:!1,tsType:{name:"signature",type:"function",raw:"(rows: unknown[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"unknown"}],raw:"unknown[]"},name:"rows"}],return:{name:"void"}}},description:""},onDragEnd:{required:!1,tsType:{name:"signature",type:"function",raw:"(rows: unknown[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"unknown"}],raw:"unknown[]"},name:"rows"}],return:{name:"void"}}},description:""},expandable:{required:!1,tsType:{name:"intersection",raw:"TableProps<T>['expandable'] & { expandColumnName?: string }",elements:[{name:"TableProps['expandable']",raw:"TableProps<T>['expandable']"},{name:"signature",type:"object",raw:"{ expandColumnName?: string }",signature:{properties:[{key:"expandColumnName",value:{name:"string",required:!1}}]}}]},description:""},emptyText:{required:!1,tsType:{name:"ReactNode"},description:""},columnVerticalAlign:{required:!1,tsType:{name:"union",raw:"'top' | 'middle' | 'bottom' | 'inherit'",elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'middle'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'inherit'"}]},description:""},rowMode:{required:!1,tsType:{name:"union",raw:"'standard' | 'compact'",elements:[{name:"literal",value:"'standard'"},{name:"literal",value:"'compact'"}]},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},isValid:{required:!1,tsType:{name:"boolean"},description:""},onSortChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(val: ActiveSorting) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  field?: string,\n  direction?: SortType,\n  columnId?: string,\n  columnServerField?: string,\n  isDefaultSortDisabled?: boolean,\n  customSorter?: CustomSorter\n}",signature:{properties:[{key:"field",value:{name:"string",required:!1}},{key:"direction",value:{name:"union",raw:"'asc' | 'desc'",elements:[{name:"literal",value:"'asc'"},{name:"literal",value:"'desc'"}],required:!1}},{key:"columnId",value:{name:"string",required:!1}},{key:"columnServerField",value:{name:"string",required:!1}},{key:"isDefaultSortDisabled",value:{name:"boolean",required:!1}},{key:"customSorter",value:{name:"signature",type:"function",raw:"(a: TableRecord, b: TableRecord, isAsc: boolean) => number",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  [key: string]: any,\n  children?: TableRecord[]\n}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}},{key:"children",value:{name:"Array",elements:[{name:"TableRecord"}],raw:"TableRecord[]",required:!1}}]}},name:"a"},{type:{name:"signature",type:"object",raw:"{\n  [key: string]: any,\n  children?: TableRecord[]\n}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}},{key:"children",value:{name:"Array",elements:[{name:"TableRecord"}],raw:"TableRecord[]",required:!1}}]}},name:"b"},{type:{name:"boolean"},name:"isAsc"}],return:{name:"number"}},required:!1}}]}},name:"val"}],return:{name:"void"}}},description:"Call back when sort changed"},showSorterTooltip:{required:!1,tsType:{name:"union",raw:"boolean | TooltipProps",elements:[{name:"boolean"},{name:"intersection",raw:"Omit<TooltipPropsWithTitle, 'placement' | 'title'> & TooltipThemeProps & {\n  /** Placement */\n  placement?: 'top' | 'left' | 'right' | 'bottom' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' | 'leftTop' | 'leftBottom' | 'rightTop' | 'rightBottom',\n  /** Should fall back to default align config */\n  defaultAlign?: boolean,\n  /** Tooltip content */\n  text: TooltipPropsWithTitle['title']\n}",elements:[{name:"Omit",elements:[{name:"TooltipPropsWithTitle"},{name:"union",raw:"'placement' | 'title'",elements:[{name:"literal",value:"'placement'"},{name:"literal",value:"'title'"}]}],raw:"Omit<TooltipPropsWithTitle, 'placement' | 'title'>"},{name:"signature",type:"object",raw:"{\n  /** Custom theme */\n  theme?: Theme\n}",signature:{properties:[{key:"theme",value:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}],required:!1},description:"Custom theme"}]}},{name:"signature",type:"object",raw:"{\n  /** Placement */\n  placement?: 'top' | 'left' | 'right' | 'bottom' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' | 'leftTop' | 'leftBottom' | 'rightTop' | 'rightBottom',\n  /** Should fall back to default align config */\n  defaultAlign?: boolean,\n  /** Tooltip content */\n  text: TooltipPropsWithTitle['title']\n}",signature:{properties:[{key:"placement",value:{name:"union",raw:"'top' | 'left' | 'right' | 'bottom' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' | 'leftTop' | 'leftBottom' | 'rightTop' | 'rightBottom'",elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'topLeft'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottomRight'"},{name:"literal",value:"'leftTop'"},{name:"literal",value:"'leftBottom'"},{name:"literal",value:"'rightTop'"},{name:"literal",value:"'rightBottom'"}],required:!1},description:"Placement"},{key:"defaultAlign",value:{name:"boolean",required:!1},description:"Should fall back to default align config"},{key:"text",value:{name:"TooltipPropsWithTitle['title']",raw:"TooltipPropsWithTitle['title']",required:!0},description:"Tooltip content"}]}}]}]},description:""},initialSorting:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n  field?: string,\n  direction?: SortType,\n  columnId?: string,\n  columnServerField?: string,\n  isDefaultSortDisabled?: boolean,\n  customSorter?: CustomSorter\n}",signature:{properties:[{key:"field",value:{name:"string",required:!1}},{key:"direction",value:{name:"union",raw:"'asc' | 'desc'",elements:[{name:"literal",value:"'asc'"},{name:"literal",value:"'desc'"}],required:!1}},{key:"columnId",value:{name:"string",required:!1}},{key:"columnServerField",value:{name:"string",required:!1}},{key:"isDefaultSortDisabled",value:{name:"boolean",required:!1}},{key:"customSorter",value:{name:"signature",type:"function",raw:"(a: TableRecord, b: TableRecord, isAsc: boolean) => number",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  [key: string]: any,\n  children?: TableRecord[]\n}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}},{key:"children",value:{name:"Array",elements:[{name:"TableRecord"}],raw:"TableRecord[]",required:!1}}]}},name:"a"},{type:{name:"signature",type:"object",raw:"{\n  [key: string]: any,\n  children?: TableRecord[]\n}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}},{key:"children",value:{name:"Array",elements:[{name:"TableRecord"}],raw:"TableRecord[]",required:!1}}]}},name:"b"},{type:{name:"boolean"},name:"isAsc"}],return:{name:"number"}},required:!1}}]}},description:""},externalSorting:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n  field?: string,\n  direction?: SortType,\n  columnId?: string,\n  columnServerField?: string,\n  isDefaultSortDisabled?: boolean,\n  customSorter?: CustomSorter\n}",signature:{properties:[{key:"field",value:{name:"string",required:!1}},{key:"direction",value:{name:"union",raw:"'asc' | 'desc'",elements:[{name:"literal",value:"'asc'"},{name:"literal",value:"'desc'"}],required:!1}},{key:"columnId",value:{name:"string",required:!1}},{key:"columnServerField",value:{name:"string",required:!1}},{key:"isDefaultSortDisabled",value:{name:"boolean",required:!1}},{key:"customSorter",value:{name:"signature",type:"function",raw:"(a: TableRecord, b: TableRecord, isAsc: boolean) => number",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  [key: string]: any,\n  children?: TableRecord[]\n}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}},{key:"children",value:{name:"Array",elements:[{name:"TableRecord"}],raw:"TableRecord[]",required:!1}}]}},name:"a"},{type:{name:"signature",type:"object",raw:"{\n  [key: string]: any,\n  children?: TableRecord[]\n}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}},{key:"children",value:{name:"Array",elements:[{name:"TableRecord"}],raw:"TableRecord[]",required:!1}}]}},name:"b"},{type:{name:"boolean"},name:"isAsc"}],return:{name:"number"}},required:!1}}]}},description:""},setExternalSorting:{required:!1,tsType:{name:"signature",type:"function",raw:"(arg0: ActiveSorting) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  field?: string,\n  direction?: SortType,\n  columnId?: string,\n  columnServerField?: string,\n  isDefaultSortDisabled?: boolean,\n  customSorter?: CustomSorter\n}",signature:{properties:[{key:"field",value:{name:"string",required:!1}},{key:"direction",value:{name:"union",raw:"'asc' | 'desc'",elements:[{name:"literal",value:"'asc'"},{name:"literal",value:"'desc'"}],required:!1}},{key:"columnId",value:{name:"string",required:!1}},{key:"columnServerField",value:{name:"string",required:!1}},{key:"isDefaultSortDisabled",value:{name:"boolean",required:!1}},{key:"customSorter",value:{name:"signature",type:"function",raw:"(a: TableRecord, b: TableRecord, isAsc: boolean) => number",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  [key: string]: any,\n  children?: TableRecord[]\n}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}},{key:"children",value:{name:"Array",elements:[{name:"TableRecord"}],raw:"TableRecord[]",required:!1}}]}},name:"a"},{type:{name:"signature",type:"object",raw:"{\n  [key: string]: any,\n  children?: TableRecord[]\n}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}},{key:"children",value:{name:"Array",elements:[{name:"TableRecord"}],raw:"TableRecord[]",required:!1}}]}},name:"b"},{type:{name:"boolean"},name:"isAsc"}],return:{name:"number"}},required:!1}}]}},name:"arg0"}],return:{name:"void"}}},description:""},useFiltersSidebar:{required:!1,tsType:{name:"boolean"},description:""},onFilterChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(val: ActiveFilter) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  [fieldName: string]: {\n    [filterName: string]: ((value: any) => boolean)\n  }\n}",signature:{properties:[{key:{name:"string"},value:{name:"signature",type:"object",raw:"{\n  [filterName: string]: ((value: any) => boolean)\n}",signature:{properties:[{key:{name:"string"},value:{name:"unknown",required:!0}}]},required:!0}}]}},name:"val"}],return:{name:"void"}}},description:"Call back when filter from sidebar changed"},onFiltersChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(filters: FilterConfig[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"union",raw:"TextFilter | DateRangeFilter | NumberFilter | EnumFilter",elements:[{name:"intersection",raw:"BasicFilter<TextOperations> & {\n  type: FilterType.Text | FilterType.Radio,\n  value: string | null\n}",elements:[{name:"signature",type:"object",raw:"{\n  name: string,\n  condition: Condition\n}",signature:{properties:[{key:"name",value:{name:"string",required:!0}},{key:"condition",value:{name:"union",raw:"EqualsOperations |\nContainsOperations|\nFilterOperation.custom",elements:[{name:"union",raw:"FilterOperation.eq |\nFilterOperation.neq",elements:[{name:"FilterOperation.eq"},{name:"FilterOperation.neq"}]},{name:"union",raw:"FilterOperation.cont |\nFilterOperation.ncont",elements:[{name:"FilterOperation.cont"},{name:"FilterOperation.ncont"}]},{name:"FilterOperation.custom"}],required:!0}}]}},{name:"signature",type:"object",raw:"{\n  type: FilterType.Text | FilterType.Radio,\n  value: string | null\n}",signature:{properties:[{key:"type",value:{name:"union",raw:"FilterType.Text | FilterType.Radio",elements:[{name:"FilterType.Text"},{name:"FilterType.Radio"}],required:!0}},{key:"value",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!0}}]}}]},{name:"intersection",raw:"BasicFilter<DateOperations> & {\n  type: FilterType.DateRange,\n  value: { from: DateInputValue, to: DateInputValue }\n}",elements:[{name:"signature",type:"object",raw:"{\n  name: string,\n  condition: Condition\n}",signature:{properties:[{key:"name",value:{name:"string",required:!0}},{key:"condition",value:{name:"union",raw:"EqualsOperations |\nContainsOperations|\nFilterOperation.custom",elements:[{name:"union",raw:"FilterOperation.eq |\nFilterOperation.neq",elements:[{name:"FilterOperation.eq"},{name:"FilterOperation.neq"}]},{name:"union",raw:"FilterOperation.cont |\nFilterOperation.ncont",elements:[{name:"FilterOperation.cont"},{name:"FilterOperation.ncont"}]},{name:"FilterOperation.custom"}],required:!0}}]}},{name:"signature",type:"object",raw:"{\n  type: FilterType.DateRange,\n  value: { from: DateInputValue, to: DateInputValue }\n}",signature:{properties:[{key:"type",value:{name:"FilterType.DateRange",required:!0}},{key:"value",value:{name:"signature",type:"object",raw:"{ from: DateInputValue, to: DateInputValue }",signature:{properties:[{key:"from",value:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}],required:!0}},{key:"to",value:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}],required:!0}}]},required:!0}}]}}]},{name:"intersection",raw:"BasicFilter<NumberOperations> & {\n  type: FilterType.Number,\n  // Can use '>' and '<' in conditions\n  exact?: boolean,\n  value: number | null\n}",elements:[{name:"signature",type:"object",raw:"{\n  name: string,\n  condition: Condition\n}",signature:{properties:[{key:"name",value:{name:"string",required:!0}},{key:"condition",value:{name:"union",raw:"EqualsOperations |\nContainsOperations|\nFilterOperation.custom",elements:[{name:"union",raw:"FilterOperation.eq |\nFilterOperation.neq",elements:[{name:"FilterOperation.eq"},{name:"FilterOperation.neq"}]},{name:"union",raw:"FilterOperation.cont |\nFilterOperation.ncont",elements:[{name:"FilterOperation.cont"},{name:"FilterOperation.ncont"}]},{name:"FilterOperation.custom"}],required:!0}}]}},{name:"signature",type:"object",raw:"{\n  type: FilterType.Number,\n  // Can use '>' and '<' in conditions\n  exact?: boolean,\n  value: number | null\n}",signature:{properties:[{key:"type",value:{name:"FilterType.Number",required:!0}},{key:"exact",value:{name:"boolean",required:!1}},{key:"value",value:{name:"union",raw:"number | null",elements:[{name:"number"},{name:"null"}],required:!0}}]}}]},{name:"intersection",raw:"BasicFilter<EnumOperations> & {\n  type: FilterType.Enum,\n  value: any\n}",elements:[{name:"signature",type:"object",raw:"{\n  name: string,\n  condition: Condition\n}",signature:{properties:[{key:"name",value:{name:"string",required:!0}},{key:"condition",value:{name:"union",raw:"EqualsOperations |\nContainsOperations|\nFilterOperation.custom",elements:[{name:"union",raw:"FilterOperation.eq |\nFilterOperation.neq",elements:[{name:"FilterOperation.eq"},{name:"FilterOperation.neq"}]},{name:"union",raw:"FilterOperation.cont |\nFilterOperation.ncont",elements:[{name:"FilterOperation.cont"},{name:"FilterOperation.ncont"}]},{name:"FilterOperation.custom"}],required:!0}}]}},{name:"signature",type:"object",raw:"{\n  type: FilterType.Enum,\n  value: any\n}",signature:{properties:[{key:"type",value:{name:"FilterType.Enum",required:!0}},{key:"value",value:{name:"any",required:!0}}]}}]}]}],raw:"FilterConfig[]"},name:"filters"}],return:{name:"void"}}},description:"Call back when filters from dropdown changed"},appliedFilters:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n  [fieldName: string]: {\n    [filterName: string]: ((value: any) => boolean)\n  }\n}",signature:{properties:[{key:{name:"string"},value:{name:"signature",type:"object",raw:"{\n  [filterName: string]: ((value: any) => boolean)\n}",signature:{properties:[{key:{name:"string"},value:{name:"unknown",required:!0}}]},required:!0}}]}},description:""},saveFilters:{required:!1,tsType:{name:"IFiltersSavingSettings"},description:"Object with key name of saved filters: saveFilters.storageKey"},filterItems:{required:!1,tsType:{name:"signature",type:"object",raw:"{ items: FilterItemTagProps[], clearLinkText?: string, onClear?: () => void }",signature:{properties:[{key:"items",value:{name:"Array",elements:[{name:"FilterItemTagProps"}],raw:"FilterItemTagProps[]",required:!0}},{key:"clearLinkText",value:{name:"string",required:!1}},{key:"onClear",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!1}}]}},description:"An array of filters to show"},onCloseFilterSidebar:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Call back when sidebar close"},showFilterSidebar:{required:!1,tsType:{name:"boolean"},description:""},initialFilters:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n  [fieldName: string]: {\n    [filterName: string]: ((value: any) => boolean)\n  }\n}",signature:{properties:[{key:{name:"string"},value:{name:"signature",type:"object",raw:"{\n  [filterName: string]: ((value: any) => boolean)\n}",signature:{properties:[{key:{name:"string"},value:{name:"unknown",required:!0}}]},required:!0}}]}},description:"Filters to set by default"},defaultFiltersConfig:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:"TextFilter | DateRangeFilter | NumberFilter | EnumFilter",elements:[{name:"intersection",raw:"BasicFilter<TextOperations> & {\n  type: FilterType.Text | FilterType.Radio,\n  value: string | null\n}",elements:[{name:"signature",type:"object",raw:"{\n  name: string,\n  condition: Condition\n}",signature:{properties:[{key:"name",value:{name:"string",required:!0}},{key:"condition",value:{name:"union",raw:"EqualsOperations |\nContainsOperations|\nFilterOperation.custom",elements:[{name:"union",raw:"FilterOperation.eq |\nFilterOperation.neq",elements:[{name:"FilterOperation.eq"},{name:"FilterOperation.neq"}]},{name:"union",raw:"FilterOperation.cont |\nFilterOperation.ncont",elements:[{name:"FilterOperation.cont"},{name:"FilterOperation.ncont"}]},{name:"FilterOperation.custom"}],required:!0}}]}},{name:"signature",type:"object",raw:"{\n  type: FilterType.Text | FilterType.Radio,\n  value: string | null\n}",signature:{properties:[{key:"type",value:{name:"union",raw:"FilterType.Text | FilterType.Radio",elements:[{name:"FilterType.Text"},{name:"FilterType.Radio"}],required:!0}},{key:"value",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!0}}]}}]},{name:"intersection",raw:"BasicFilter<DateOperations> & {\n  type: FilterType.DateRange,\n  value: { from: DateInputValue, to: DateInputValue }\n}",elements:[{name:"signature",type:"object",raw:"{\n  name: string,\n  condition: Condition\n}",signature:{properties:[{key:"name",value:{name:"string",required:!0}},{key:"condition",value:{name:"union",raw:"EqualsOperations |\nContainsOperations|\nFilterOperation.custom",elements:[{name:"union",raw:"FilterOperation.eq |\nFilterOperation.neq",elements:[{name:"FilterOperation.eq"},{name:"FilterOperation.neq"}]},{name:"union",raw:"FilterOperation.cont |\nFilterOperation.ncont",elements:[{name:"FilterOperation.cont"},{name:"FilterOperation.ncont"}]},{name:"FilterOperation.custom"}],required:!0}}]}},{name:"signature",type:"object",raw:"{\n  type: FilterType.DateRange,\n  value: { from: DateInputValue, to: DateInputValue }\n}",signature:{properties:[{key:"type",value:{name:"FilterType.DateRange",required:!0}},{key:"value",value:{name:"signature",type:"object",raw:"{ from: DateInputValue, to: DateInputValue }",signature:{properties:[{key:"from",value:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}],required:!0}},{key:"to",value:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}],required:!0}}]},required:!0}}]}}]},{name:"intersection",raw:"BasicFilter<NumberOperations> & {\n  type: FilterType.Number,\n  // Can use '>' and '<' in conditions\n  exact?: boolean,\n  value: number | null\n}",elements:[{name:"signature",type:"object",raw:"{\n  name: string,\n  condition: Condition\n}",signature:{properties:[{key:"name",value:{name:"string",required:!0}},{key:"condition",value:{name:"union",raw:"EqualsOperations |\nContainsOperations|\nFilterOperation.custom",elements:[{name:"union",raw:"FilterOperation.eq |\nFilterOperation.neq",elements:[{name:"FilterOperation.eq"},{name:"FilterOperation.neq"}]},{name:"union",raw:"FilterOperation.cont |\nFilterOperation.ncont",elements:[{name:"FilterOperation.cont"},{name:"FilterOperation.ncont"}]},{name:"FilterOperation.custom"}],required:!0}}]}},{name:"signature",type:"object",raw:"{\n  type: FilterType.Number,\n  // Can use '>' and '<' in conditions\n  exact?: boolean,\n  value: number | null\n}",signature:{properties:[{key:"type",value:{name:"FilterType.Number",required:!0}},{key:"exact",value:{name:"boolean",required:!1}},{key:"value",value:{name:"union",raw:"number | null",elements:[{name:"number"},{name:"null"}],required:!0}}]}}]},{name:"intersection",raw:"BasicFilter<EnumOperations> & {\n  type: FilterType.Enum,\n  value: any\n}",elements:[{name:"signature",type:"object",raw:"{\n  name: string,\n  condition: Condition\n}",signature:{properties:[{key:"name",value:{name:"string",required:!0}},{key:"condition",value:{name:"union",raw:"EqualsOperations |\nContainsOperations|\nFilterOperation.custom",elements:[{name:"union",raw:"FilterOperation.eq |\nFilterOperation.neq",elements:[{name:"FilterOperation.eq"},{name:"FilterOperation.neq"}]},{name:"union",raw:"FilterOperation.cont |\nFilterOperation.ncont",elements:[{name:"FilterOperation.cont"},{name:"FilterOperation.ncont"}]},{name:"FilterOperation.custom"}],required:!0}}]}},{name:"signature",type:"object",raw:"{\n  type: FilterType.Enum,\n  value: any\n}",signature:{properties:[{key:"type",value:{name:"FilterType.Enum",required:!0}},{key:"value",value:{name:"any",required:!0}}]}}]}]}],raw:"FilterConfig[]"},description:"Filter config to apply for data"},__EXPERIMENTAL__VIRTUAL:{required:!1,tsType:{name:"boolean"},description:"Experimental flag to enable virtualization. Not ready to use in production"},testId:{required:!1,tsType:{name:"string"},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},klId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},componentId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},dataTestId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},componentType:{required:!1,tsType:{name:"string"},description:""}}}},"./src/table/__meta__/meta.json":module=>{module.exports=JSON.parse('{"dod":{"designTokens":false,"useThemedHook":false,"unitTests":false,"screenshotTests":false,"migration":false,"apiTable":false,"storybook":true},"component":"Table","description":"Компонент-контейнер для группы команд или элементов управления. ","usage":"","designLink":"https://www.figma.com/file/9hiN2DbkqbxbhR9EWRI1VK/B2B-UI-KIT?node-id=4055%3A17685"}')}}]);