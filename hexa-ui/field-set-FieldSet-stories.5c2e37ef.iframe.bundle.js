"use strict";(self.webpackChunk_kaspersky_hexa_ui=self.webpackChunk_kaspersky_hexa_ui||[]).push([[5871],{"./node_modules/@kaspersky/hexa-ui-icons/esm/16/Placeholder.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>l});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_helpers_resolveColorToken_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@kaspersky/hexa-ui-icons/esm/helpers/resolveColorToken.js");const o=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(((o,l)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",{width:16,height:16,viewBox:"0 0 16 16",fill:"none",xmlns:"http://www.w3.org/2000/svg",ref:l,...o},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M1 3.48551C1 2.1128 2.113 1 3.48595 1H5.21023C5.57448 1 5.86976 1.29523 5.86976 1.65942C5.86976 2.02361 5.57448 2.31884 5.21023 2.31884H3.48595C2.8415 2.31884 2.31907 2.84118 2.31907 3.48551V5.22071C2.31907 5.5849 2.02379 5.88013 1.65954 5.88013C1.29528 5.88013 1 5.5849 1 5.22071V3.48551Z",fill:(0,_helpers_resolveColorToken_js__WEBPACK_IMPORTED_MODULE_1__.$)(o.color)||o.color||"currentColor"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M1 12.5145C1 13.8872 2.113 15 3.48595 15H5.21023C5.57448 15 5.86976 14.7048 5.86976 14.3406C5.86976 13.9764 5.57448 13.6812 5.21023 13.6812H3.48595C2.8415 13.6812 2.31907 13.1588 2.31907 12.5145V10.7793C2.31907 10.4151 2.02379 10.1199 1.65954 10.1199C1.29528 10.1199 1 10.4151 1 10.7793V12.5145Z",fill:(0,_helpers_resolveColorToken_js__WEBPACK_IMPORTED_MODULE_1__.$)(o.color)||o.color||"currentColor"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M12.5141 1C13.887 1 15 2.1128 15 3.48551V5.22071C15 5.5849 14.7047 5.88013 14.3405 5.88013C13.9762 5.88013 13.6809 5.5849 13.6809 5.22071V3.48551C13.6809 2.84118 13.1585 2.31884 12.5141 2.31884H10.7898C10.4255 2.31884 10.1302 2.02361 10.1302 1.65942C10.1302 1.29523 10.4255 1 10.7898 1H12.5141Z",fill:(0,_helpers_resolveColorToken_js__WEBPACK_IMPORTED_MODULE_1__.$)(o.color)||o.color||"currentColor"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M15 12.5145C15 13.8872 13.887 15 12.5141 15H10.7898C10.4255 15 10.1302 14.7048 10.1302 14.3406C10.1302 13.9764 10.4255 13.6812 10.7898 13.6812H12.5141C13.1585 13.6812 13.6809 13.1588 13.6809 12.5145V10.7793C13.6809 10.4151 13.9762 10.1199 14.3405 10.1199C14.7047 10.1199 15 10.4151 15 10.7793V12.5145Z",fill:(0,_helpers_resolveColorToken_js__WEBPACK_IMPORTED_MODULE_1__.$)(o.color)||o.color||"currentColor"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M8.25838 2.31884C8.62263 2.31884 8.91791 2.02361 8.91791 1.65942C8.91791 1.29523 8.62263 1 8.25838 1H7.74173C7.37747 1 7.08219 1.29523 7.08219 1.65942C7.08219 2.02361 7.37747 2.31884 7.74173 2.31884H8.25838Z",fill:(0,_helpers_resolveColorToken_js__WEBPACK_IMPORTED_MODULE_1__.$)(o.color)||o.color||"currentColor"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M8.91791 14.3406C8.91791 13.9764 8.62263 13.6812 8.25838 13.6812H7.74173C7.37747 13.6812 7.08219 13.9764 7.08219 14.3406C7.08219 14.7048 7.37747 15 7.74173 15H8.25838C8.62263 15 8.91791 14.7048 8.91791 14.3406Z",fill:(0,_helpers_resolveColorToken_js__WEBPACK_IMPORTED_MODULE_1__.$)(o.color)||o.color||"currentColor"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M2.31907 8.24273C2.31907 8.60691 2.02379 8.90215 1.65954 8.90215C1.29528 8.90215 1 8.60691 1 8.24273V7.72729C1 7.3631 1.29528 7.06787 1.65954 7.06787C2.02379 7.06787 2.31907 7.3631 2.31907 7.72729V8.24273Z",fill:(0,_helpers_resolveColorToken_js__WEBPACK_IMPORTED_MODULE_1__.$)(o.color)||o.color||"currentColor"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M14.3405 8.90215C14.7047 8.90215 15 8.60691 15 8.24273V7.72729C15 7.3631 14.7047 7.06787 14.3405 7.06787C13.9762 7.06787 13.6809 7.3631 13.6809 7.72729V8.24273C13.6809 8.60691 13.9762 8.90215 14.3405 8.90215Z",fill:(0,_helpers_resolveColorToken_js__WEBPACK_IMPORTED_MODULE_1__.$)(o.color)||o.color||"currentColor"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M4.95673 5.97101C4.95673 5.41073 5.41101 4.95652 5.9714 4.95652H10.0301C10.5905 4.95652 11.0448 5.41073 11.0448 5.97101V10.029C11.0448 10.5893 10.5905 11.0435 10.0301 11.0435H5.9714C5.41101 11.0435 4.95673 10.5893 4.95673 10.029V5.97101ZM6.2758 9.72464V6.27536H9.72569V9.72464H6.2758Z",fill:(0,_helpers_resolveColorToken_js__WEBPACK_IMPORTED_MODULE_1__.$)(o.color)||o.color||"currentColor"})))),l=react__WEBPACK_IMPORTED_MODULE_0__.memo(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(((r,l)=>{const{klId:t,testId:C,...c}=r;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(o,{"kl-id":t,"data-testid":C,ref:l,...c})})));l.displayName="Placeholder"},"./src/button/Button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button});var useTestAttribute=__webpack_require__("./helpers/hooks/useTestAttribute.ts"),showDeprecationWarn=__webpack_require__("./helpers/showDeprecationWarn.ts"),es_button=__webpack_require__("./node_modules/antd/es/button/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),variables=__webpack_require__("./design-system/theme/themes/variables.ts");const fromProps=(0,__webpack_require__("./helpers/getFromProps.ts").P)(),groupCss=(0,styled_components_browser_esm.AH)(["gap:6px;&.ant-btn-group > .ant-btn:first-child:not(:last-child){border-radius:7px 0 0 7px;}&.ant-btn-group > .ant-btn:not(:last-child):not(:first-child){border-radius:0;}&.ant-btn-group > .ant-btn:last-child:not(:first-child){border-radius:0 7px 7px 0;}"]),buttonCss=(0,styled_components_browser_esm.AH)(["&.ant-btn{display:inline-flex;flex-direction:row;justify-content:center;align-items:center;gap:","px;outline:none;height:",";min-width:",";max-width:100%;padding:",";border-radius:",";background-color:",";color:",";border:",";box-shadow:none;.kl-components-button-text{max-width:100%;text-overflow:ellipsis;overflow:hidden;font-family:",";font-size:",";line-height:",";font-weight:",";font-style:",";letter-spacing:",';}&:not([disabled]) > span[role="img"] > svg{color:',";}&:focus-visible{box-shadow:",";}&:hover,&:hover:focus{color:",";background-color:",";}&:active,&:active:focus{background-color:",";border:",";transition-duration:.02s;}&[disabled],&.ant-btn-loading{&,&:hover,&:active,&:focus{background-color:",";color:",";border:",";box-shadow:none;cursor:not-allowed;svg{color:",";}}}&.ant-btn-loading{& > span:not(.ant-btn-loading-icon),& > svg:not(.ant-btn-loading-icon){visibility:",";overflow:hidden;transition:visibility 0.3s;}}.ant-btn-loading-icon{position:absolute;left:50%;top:50%;margin-top:-8px;margin-left:-8px;transition:opacity 0.3s;color:",";svg{width:16px;height:16px;}span{padding-right:0;}}.anticon{line-height:0;}&::before{opacity:0;}&.icon-only{width:",";min-width:",";padding:unset;line-height:unset;}&.ant-dropdown-trigger.ant-dropdown-open{background-color:",";border:",";}}&[ant-click-animating-without-extra-node=true]::after,.ant-click-animating-node{display:none;}"],variables.m[2],fromProps("height"),fromProps("minWidth"),fromProps("padding"),fromProps("borderRadius"),(({isPressed})=>fromProps((isPressed?"active":"enabled")+".background")),fromProps("enabled.color"),fromProps("enabled.border"),fromProps("fontFamily"),fromProps("fontSize"),fromProps("lineHeight"),fromProps("fontWeight"),fromProps("fontStyle"),fromProps("letterSpacing"),fromProps("enabled.color"),fromProps("focus.boxShadow"),fromProps("hover.color"),fromProps("hover.background"),fromProps("active.background"),fromProps("active.border"),fromProps("disabled.background"),fromProps("disabled.color"),fromProps("disabled.border"),fromProps("disabled.color"),(props=>props.loading?"hidden":"visible"),fromProps("disabled.color"),fromProps("height"),fromProps("height"),fromProps("active.background"),fromProps("active.border"));var types=__webpack_require__("./src/button/types.ts"),useComponentCssConfig=__webpack_require__("./design-system/css-configs/helpers/useComponentCssConfig.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const StyledButton=(0,styled_components_browser_esm.Ay)(es_button.A).withConfig({shouldForwardProp:prop=>!["cssConfig","isPressed"].includes(prop)}).withConfig({displayName:"Button__StyledButton",componentId:"sc-5urxsu-0"})(["",""],buttonCss),Button=rawProps=>{const{mode="primary",...notDeprecatedProps}=rawProps;let notDeprecatedMode=mode;types.b.includes(mode)||(notDeprecatedMode="primary",(0,showDeprecationWarn.w)("mode",mode));const themedProps=(props=>(0,useComponentCssConfig.M)(props,{componentName:"button",defaultValues:{mode:"primary",size:"medium"}}))({...notDeprecatedProps,mode:notDeprecatedMode}),props=(0,useTestAttribute.a)(themedProps);return react.createElement(ButtonView,props)},ButtonView=({className,text,children,type,iconBefore,iconAfter,testAttributes,...rest})=>{const child=text||children;return react.createElement(StyledButton,_extends({className:classnames_default()(className,{"icon-only":!child}),htmlType:type},testAttributes,rest,{icon:void 0}),child?[iconBefore,react.createElement("span",{key:"radio",className:"kl-components-button-text"}," ",child," "),iconAfter]:iconBefore||iconAfter)},StyledButtonGroup=(0,styled_components_browser_esm.Ay)(es_button.A.Group).withConfig({shouldForwardProp:prop=>!["cssConfig"].includes(prop)}).withConfig({displayName:"Button__StyledButtonGroup",componentId:"sc-5urxsu-1"})(["",""],groupCss);Button.Group=rawProps=>{const{testAttributes,...rest}=(0,useTestAttribute.a)(rawProps);return react.createElement(StyledButtonGroup,_extends({},testAttributes,rest))},Button.__docgenInfo={description:"",methods:[{name:"Group",docblock:null,modifiers:["static"],params:[{name:"rawProps",optional:!1,type:{name:"intersection",raw:"AntdButtonGroupProps & {\n  /** React children */\n  children?: ReactNode\n} & TestingProps",elements:[{name:"AntdButtonGroupProps"},{name:"signature",type:"object",raw:"{\n  /** React children */\n  children?: ReactNode\n}",signature:{properties:[{key:"children",value:{name:"ReactNode",required:!1},description:"React children"}]}},{name:"signature",type:"object",raw:"{\n  /** Actual identifier for autotesting, whill be passed to HTML attribute data-testid */\n  testId?: string,\n  /** @deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id */\n  klId?: string,\n  /** @deprecated Use 'testId' prop instead */\n  componentId?: string,\n  /** @deprecated Use 'testId' prop instead */\n  dataTestId?: string,\n  componentType?: string\n}",signature:{properties:[{key:"testId",value:{name:"string",required:!1},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},{key:"klId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},{key:"componentId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead"},{key:"dataTestId",value:{name:"string",required:!1},description:"@deprecated Use 'testId' prop instead"},{key:"componentType",value:{name:"string",required:!1}}]}}],alias:"ButtonGroupProps"}}],returns:{type:{name:"JSX.Element"}}}],displayName:"Button",props:{size:{required:!1,tsType:{name:"literal",value:"`${Exclude<Size, Size.ExtraSmall>}`"},description:"Size"},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Custom theme"},mode:{required:!1,tsType:{name:"buttonModes[number]",raw:"typeof buttonModes[number]"},description:"Color mode"},disabled:{required:!1,tsType:{name:"boolean"},description:"Disabled state"},loading:{required:!1,tsType:{name:"boolean"},description:"Loading state"},className:{required:!1,tsType:{name:"string"},description:"Css class"},iconBefore:{required:!1,tsType:{name:"ReactNode"},description:"Icon before text"},iconAfter:{required:!1,tsType:{name:"ReactNode"},description:"Icon after text"},onClick:{required:!1,tsType:{name:"MouseEventHandler",elements:[{name:"HTMLElement"}],raw:"MouseEventHandler<HTMLElement>"},description:"On click handler"},text:{required:!1,tsType:{name:"string"},description:"Text"},type:{required:!1,tsType:{name:"ButtonHTMLType"},description:"HTML attribute 'type'"},isPressed:{required:!1,tsType:{name:"boolean"},description:"Display in :active state"},children:{required:!1,tsType:{name:"ReactNode"},description:"React children"},style:{required:!1,tsType:{name:"ReactCSSProperties",raw:"React.CSSProperties"},description:""},testId:{required:!1,tsType:{name:"string"},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},klId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},componentId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},dataTestId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},componentType:{required:!1,tsType:{name:"string"},description:""}}}},"./src/button/types.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{b:()=>buttonModes});const buttonModes=["primary","secondary","tertiary","dangerFilled","dangerOutlined"]},"./src/indicator/Indicator.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{C:()=>Indicator});var useTestAttribute=__webpack_require__("./helpers/hooks/useTestAttribute.ts"),shouldForwardProp=__webpack_require__("./helpers/shouldForwardProp.ts"),showDeprecationWarn=__webpack_require__("./helpers/showDeprecationWarn.ts"),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),types=__webpack_require__("./src/indicator/types.ts"),useThemedComponent=__webpack_require__("./helpers/useThemedComponent.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const Dot=styled_components_browser_esm.Ay.span.withConfig({shouldForwardProp:shouldForwardProp.M}).withConfig({displayName:"Indicator__Dot",componentId:"sc-kh7fay-0"})(["width:8px;height:8px;border-radius:50%;box-sizing:content-box;display:inline-block;background:",";"," flex:none;"],(props=>props.cssConfig.background),(props=>props.border&&`border: 2px solid ${props.cssConfig.border};`)),Indicator=rawProps=>{const{mode="accent",...notDeprecatedProps}=rawProps;let notDeprecatedMode=mode;types.g.includes(mode)||(notDeprecatedMode="accent",(0,showDeprecationWarn.w)("mode",mode));const themedProps=(props=>(0,useThemedComponent.K)(props,{componentName:"indicator",defaultValues:{mode:"accent"}}))({...notDeprecatedProps,mode:notDeprecatedMode}),{testAttributes,...props}=(0,useTestAttribute.a)(themedProps);return react.createElement(Dot,_extends({},testAttributes,props))};Indicator.__docgenInfo={description:"",methods:[],displayName:"Indicator",props:{border:{required:!1,tsType:{name:"boolean"},description:"Show border"},mode:{required:!1,tsType:{name:"IndicatorModes[number]",raw:"typeof IndicatorModes[number]"},description:"Color mode"},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Custom theme"},testId:{required:!1,tsType:{name:"string"},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},klId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},componentId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},dataTestId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},componentType:{required:!1,tsType:{name:"string"},description:""}}}},"./src/indicator/types.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{g:()=>IndicatorModes});const IndicatorModes=["accent","not-active","new","update","inProgress","resolved","inIncident","high","critical","medium","info","positive","low"]},"./src/field-set/FieldSet.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Disabled:()=>Disabled,KeyValueMapper:()=>KeyValueMapper,OverrideCommonStyles:()=>OverrideCommonStyles,ReducedMargin:()=>ReducedMargin,WaysToDeclareComponent:()=>WaysToDeclareComponent,__namedExportsOrder:()=>__namedExportsOrder,default:()=>FieldSet_stories});var badges=__webpack_require__("./.storybook/badges.tsx"),withMeta=__webpack_require__("./.storybook/components/Meta/withMeta.tsx"),FieldSet=__webpack_require__("./src/field-set/FieldSet.tsx"),SegmentedButton=__webpack_require__("./src/segmented-button/SegmentedButton.tsx"),Tag=__webpack_require__("./src/tag/Tag.tsx"),Typography=__webpack_require__("./src/typography/Typography.tsx"),Textbox=__webpack_require__("./src/input/Textbox.tsx"),Field=__webpack_require__("./src/field/Field.tsx"),Toggle=__webpack_require__("./src/toggle/Toggle.tsx"),Button=__webpack_require__("./src/button/Button.tsx"),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),Placeholder=__webpack_require__("./node_modules/@kaspersky/hexa-ui-icons/esm/16/Placeholder.js");const meta_namespaceObject=JSON.parse('{"dod":{"designTokens":false,"useThemedHook":false,"unitTests":false,"screenshotTests":false,"migration":false,"apiTable":false,"storybook":true},"component":"FieldSet","description":"","usage":"","designLink":""}');function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const FieldSet_stories={title:"Hexa UI Components/FieldSet",component:FieldSet.n,parameters:{badges:[badges.j.stable,badges.j.reviewedByDesign],docs:{page:(0,withMeta.C)(meta_namespaceObject)}}},getOptions=(number,componentName)=>Array.from({length:number}).map(((_,index)=>({label:`${componentName} option ${index+1}`,value:`${index+1}`}))),Container=styled_components_browser_esm.Ay.div.withConfig({displayName:"FieldSetstories__Container",componentId:"sc-e90yil-0"})(["display:flex;flex-direction:column;width:100%;gap:8px;"]),Basic={render:args=>{const[view,setView]=(0,react.useState)(["top"]);return react.createElement(Container,null,react.createElement(SegmentedButton.t,{items:[{text:"labelPosition: top",value:"top"},{text:"labelPosition: before",value:"before"},{text:"gridLayout",value:"grid"}],value:view,onChange:setView}),react.createElement(FieldSet.n,_extends({},args,{labelPosition:"top"===view[0]||"before"===view[0]?view[0]:void 0,gridLayout:"grid"===view[0]&&{firstCol:"123px",secondCol:"456px"}})))},args:{items:[{label:"textbox",control:{component:"textbox",placeholder:"hello"}},{label:"textbox-masked",control:{component:"textbox-masked",maskOptions:{mask:"NUM.NUM.NUM.NUM",blocks:{NUM:{mask:/^[0-9]{1,3}$/}}},placeholder:"hello"}},{label:"textbox-number",control:{component:"textbox-number",placeholder:"123"}},{label:"textbox-password",control:{component:"textbox-password",value:"123"}},{label:"textbox-textarea",control:{component:"textbox-textarea",placeholder:"hello",showCount:!0,maxLength:1e3}},{label:"select",control:{component:"select",options:getOptions(4,"Select"),value:"1"}},{label:"multiselect",control:{component:"select",mode:"multiple",options:getOptions(4,"Multiselect"),value:["1"]}},{label:"search",control:{component:"search",placeholder:"search"}},{label:"calendar",control:{component:"calendar"}},{label:"range-picker",control:{component:"range-picker"}},{label:"time-input",control:{component:"time-input"}},{label:"code-viewer",control:{component:"code-viewer",language:"html"}},{label:"button ".repeat(20),control:{component:"button",text:"Button text",mode:"secondary"}},{label:"segmented-button",control:{component:"segmented-button",value:["1"],onChange:e=>e,size:"large",items:getOptions(3,"SegmentedButton").map((item=>({text:item.label,value:item.value})))}},{label:"checkbox",control:{component:"checkbox",children:"Single checkbox"}},{label:"checkbox-group",control:{component:"checkbox-group",options:getOptions(4,"Checkbox")}},{label:"radio",control:{component:"radio",options:getOptions(4,"Radio"),vertical:!0}},{label:"toggle",control:{component:"toggle",text:"Toggle label text"}},{label:"link",control:{component:"link",children:"Link text"}},{label:"status",control:{component:"status",icon:react.createElement(Placeholder.A,null),label:"Status text"}},{label:"status-group (only vertical)",control:{component:"status-group",items:Array.from({length:5},((_,index)=>({label:`Status ${index+1}`,icon:react.createElement(Placeholder.A,null)})))}},{label:"tag-group horizontal",control:{component:"tag-group",items:[react.createElement(Tag.v,{key:0,label:"Tag text 1"}),...Array.from({length:19},((_,index)=>({label:`Tag text ${index+2}`})))]}},{label:"tag-group vertical",control:{component:"tag-group",orientation:"vertical",items:Array.from({length:5},((_,index)=>({label:`Tag text ${index+1}`})))}},{label:"Text",control:{component:"text",children:"Text"}}]}},WaysToDeclareComponent={render:()=>react.createElement(Container,null,react.createElement(Typography.H3,null,"Look in code! dev only"),react.createElement(FieldSet.n,{items:[{label:"JSON-like",message:"зашибись! классно!",messageMode:"success",control:{component:"textbox",validationStatus:"success",value:"its better to declare like this"}},{label:"JSON-like field, JSX control",message:"сомнительно, но окээээй",messageMode:"warning",control:react.createElement(Textbox.R,{value:"its ok, but common props (disabled)"})},react.createElement(Field.D,{key:"JSX Field and control",label:"JSX Field and control",message:"мы все в этом виноваты",messageMode:"error",control:react.createElement(Textbox.R,{validationStatus:"error"})})]}))},OverrideCommonStyles={args:{labelPosition:"before",items:[{label:"default control",control:{component:"textbox"}},{label:"custom layout",gridLayout:{firstCol:"123px",secondCol:"456px"},control:{component:"textbox"}},{label:"default control",control:{component:"toggle",text:"some button"}},{label:"another custom layout",labelPosition:"top",control:{component:"textbox"}},{label:"default control",control:{component:"button",text:"some button"}}]}},ReducedMargin={args:{labelPosition:"before",items:[{label:"input-like",control:{component:"textbox"}},{label:"text-like",control:{component:"text",children:"Text"}},{label:"text-like",control:{component:"status",label:"Reduced margin before label-like element"}},{label:"text-like",control:{component:"link",children:"Link"}},{label:"input-like",control:{component:"select"}},{label:"input-like",marginBefore:"32px",control:{component:"textbox-textarea",value:"custom margin"}},{label:"input-like",marginBefore:48,control:{component:"search",value:"custom margin"}}]}},FieldSetsContainer=styled_components_browser_esm.Ay.div.withConfig({displayName:"FieldSetstories__FieldSetsContainer",componentId:"sc-e90yil-1"})(["display:flex;flex-direction:column;gap:12px;margin-bottom:12px;"]),Disabled={render:args=>{const[commonDisabled,setCommonDisabled]=(0,react.useState)(!1),[buttonDisabled,setButtonDisabled]=(0,react.useState)(!1),items=[{label:"button",control:{component:"button",disabled:buttonDisabled,text:"button",mode:"secondary"}},{label:"textbox",control:{component:"textbox",value:"textbox"}}];return react.createElement(FieldSetsContainer,null,react.createElement(Typography.H4,null,"Look in code how to disable component manually"),react.createElement(Toggle.l,{onChange:setButtonDisabled},`disable only button: ${commonDisabled.toString()}`),react.createElement(Toggle.l,{onChange:setCommonDisabled},`disable all: ${commonDisabled.toString()}`),react.createElement(FieldSet.n,_extends({},args,{items,disabled:commonDisabled,labelPosition:"before"})))}},KeyValueMapper={render:args=>react.createElement(FieldSet.n.KeyValueMapper,args),args:{gridLayout:{cols:["200px","400px"]},keyTooltip:"tooltip",keyRequired:!0,rowHeight:123123,padding:12,keysMargin:123123,wrapperClasses:{keyClassName:"class1",valueClassName:"class2"},data:[{pairKey:"Input",pairValue:react.createElement(Textbox.R,{placeholder:"Text"})},{pairKey:"Textarea",pairValue:react.createElement(Textbox.R.Textarea,{placeholder:"Text area"})},{pairKey:"Button",pairValue:react.createElement(Button.$,{size:"medium",mode:"primary"},"Button")}]}};Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  render: (args: FieldSetProps) => {\n    const viewItems: SegmentedButtonOption[] = [{\n      text: 'labelPosition: top',\n      value: 'top'\n    }, {\n      text: 'labelPosition: before',\n      value: 'before'\n    }, {\n      text: 'gridLayout',\n      value: 'grid'\n    }];\n    const [view, setView] = useState<string[]>(['top']);\n    return <Container>\n        <SegmentedButton items={viewItems} value={view} onChange={setView} />\n        <FieldSet {...args} labelPosition={((view[0] === 'top' || view[0] === 'before' || undefined) && view[0]) as FieldProps['labelPosition']} gridLayout={(view[0] === 'grid' && {\n        firstCol: '123px',\n        secondCol: '456px'\n      }) as FieldProps['gridLayout']} />\n      </Container>;\n  },\n  args: {\n    items: [{\n      label: 'textbox',\n      control: {\n        component: 'textbox',\n        placeholder: 'hello'\n      }\n    }, {\n      label: 'textbox-masked',\n      control: {\n        component: 'textbox-masked',\n        maskOptions: {\n          mask: 'NUM.NUM.NUM.NUM',\n          blocks: {\n            NUM: {\n              mask: /^[0-9]{1,3}$/\n            }\n          }\n        },\n        placeholder: 'hello'\n      }\n    }, {\n      label: 'textbox-number',\n      control: {\n        component: 'textbox-number',\n        placeholder: '123'\n      }\n    }, {\n      label: 'textbox-password',\n      control: {\n        component: 'textbox-password',\n        value: '123'\n      }\n    }, {\n      label: 'textbox-textarea',\n      control: {\n        component: 'textbox-textarea',\n        placeholder: 'hello',\n        showCount: true,\n        maxLength: 1000\n      }\n    }, {\n      label: 'select',\n      control: {\n        component: 'select',\n        options: getOptions(4, 'Select'),\n        value: '1'\n      }\n    }, {\n      label: 'multiselect',\n      control: {\n        component: 'select',\n        mode: 'multiple',\n        options: getOptions(4, 'Multiselect'),\n        value: ['1']\n      }\n    }, {\n      label: 'search',\n      control: {\n        component: 'search',\n        placeholder: 'search'\n      }\n    }, {\n      label: 'calendar',\n      control: {\n        component: 'calendar'\n      }\n    }, {\n      label: 'range-picker',\n      control: {\n        component: 'range-picker'\n      }\n    }, {\n      label: 'time-input',\n      control: {\n        component: 'time-input'\n      }\n    }, {\n      label: 'code-viewer',\n      control: {\n        component: 'code-viewer',\n        language: 'html'\n      }\n    }, {\n      label: 'button '.repeat(20),\n      control: {\n        component: 'button',\n        text: 'Button text',\n        mode: 'secondary'\n      }\n    }, {\n      label: 'segmented-button',\n      control: {\n        component: 'segmented-button',\n        value: ['1'],\n        onChange: e => e,\n        size: 'large',\n        items: getOptions(3, 'SegmentedButton').map(item => ({\n          text: item.label,\n          value: item.value\n        }))\n      }\n    }, {\n      label: 'checkbox',\n      control: {\n        component: 'checkbox',\n        children: 'Single checkbox'\n      }\n    }, {\n      label: 'checkbox-group',\n      control: {\n        component: 'checkbox-group',\n        options: getOptions(4, 'Checkbox')\n      }\n    }, {\n      label: 'radio',\n      control: {\n        component: 'radio',\n        options: getOptions(4, 'Radio'),\n        vertical: true\n      }\n    }, {\n      label: 'toggle',\n      control: {\n        component: 'toggle',\n        text: 'Toggle label text'\n      }\n    }, {\n      label: 'link',\n      control: {\n        component: 'link',\n        children: 'Link text'\n      }\n    }, {\n      label: 'status',\n      control: {\n        component: 'status',\n        icon: <Placeholder />,\n        label: 'Status text'\n      }\n    }, {\n      label: 'status-group (only vertical)',\n      control: {\n        component: 'status-group',\n        items: Array.from({\n          length: 5\n        }, (_, index) => ({\n          label: `Status ${index + 1}`,\n          icon: <Placeholder />\n        }))\n      }\n    }, {\n      label: 'tag-group horizontal',\n      control: {\n        component: 'tag-group',\n        items: [<Tag key={0} label=\"Tag text 1\" />, ...Array.from({\n          length: 19\n        }, (_, index) => ({\n          label: `Tag text ${index + 2}`\n        }))]\n      }\n    }, {\n      label: 'tag-group vertical',\n      control: {\n        component: 'tag-group',\n        orientation: 'vertical',\n        items: Array.from({\n          length: 5\n        }, (_, index) => ({\n          label: `Tag text ${index + 1}`\n        }))\n      }\n    }, {\n      label: 'Text',\n      control: {\n        component: 'text',\n        children: 'Text'\n      }\n    }]\n  }\n}",...Basic.parameters?.docs?.source}}},WaysToDeclareComponent.parameters={...WaysToDeclareComponent.parameters,docs:{...WaysToDeclareComponent.parameters?.docs,source:{originalSource:"{\n  render: () => <Container>\n      <H3>Look in code! dev only</H3>\n      <FieldSet items={[{\n      label: 'JSON-like',\n      message: 'зашибись! классно!',\n      messageMode: 'success',\n      control: {\n        component: 'textbox',\n        validationStatus: 'success',\n        value: 'its better to declare like this'\n      }\n    }, {\n      label: 'JSON-like field, JSX control',\n      message: 'сомнительно, но окээээй',\n      messageMode: 'warning',\n      control: <Textbox value=\"its ok, but common props (disabled)\" />\n    }, <Field key=\"JSX Field and control\" label=\"JSX Field and control\" message=\"мы все в этом виноваты\" messageMode=\"error\" control={<Textbox validationStatus=\"error\" />} />]} />\n    </Container>\n}",...WaysToDeclareComponent.parameters?.docs?.source}}},OverrideCommonStyles.parameters={...OverrideCommonStyles.parameters,docs:{...OverrideCommonStyles.parameters?.docs,source:{originalSource:"{\n  args: {\n    labelPosition: 'before',\n    items: [{\n      label: 'default control',\n      control: {\n        component: 'textbox'\n      }\n    }, {\n      label: 'custom layout',\n      gridLayout: {\n        firstCol: '123px',\n        secondCol: '456px'\n      },\n      control: {\n        component: 'textbox'\n      }\n    }, {\n      label: 'default control',\n      control: {\n        component: 'toggle',\n        text: 'some button'\n      }\n    }, {\n      label: 'another custom layout',\n      labelPosition: 'top',\n      control: {\n        component: 'textbox'\n      }\n    }, {\n      label: 'default control',\n      control: {\n        component: 'button',\n        text: 'some button'\n      }\n    }]\n  }\n}",...OverrideCommonStyles.parameters?.docs?.source}}},ReducedMargin.parameters={...ReducedMargin.parameters,docs:{...ReducedMargin.parameters?.docs,source:{originalSource:"{\n  args: {\n    labelPosition: 'before',\n    items: [{\n      label: 'input-like',\n      control: {\n        component: 'textbox'\n      }\n    }, {\n      label: 'text-like',\n      control: {\n        component: 'text',\n        children: 'Text'\n      }\n    }, {\n      label: 'text-like',\n      control: {\n        component: 'status',\n        label: 'Reduced margin before label-like element'\n      }\n    }, {\n      label: 'text-like',\n      control: {\n        component: 'link',\n        children: 'Link'\n      }\n    }, {\n      label: 'input-like',\n      control: {\n        component: 'select'\n      }\n    }, {\n      label: 'input-like',\n      marginBefore: '32px',\n      control: {\n        component: 'textbox-textarea',\n        value: 'custom margin'\n      }\n    }, {\n      label: 'input-like',\n      marginBefore: 48,\n      control: {\n        component: 'search',\n        value: 'custom margin'\n      }\n    }]\n  }\n}",...ReducedMargin.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  render: (args: FieldSetProps) => {\n    const [commonDisabled, setCommonDisabled] = useState<boolean>(false);\n    const [buttonDisabled, setButtonDisabled] = useState<boolean>(false);\n    const items: FieldSetItem[] = [{\n      label: 'button',\n      control: {\n        component: 'button',\n        disabled: buttonDisabled,\n        text: 'button',\n        mode: 'secondary'\n      }\n    }, {\n      label: 'textbox',\n      control: {\n        component: 'textbox',\n        value: 'textbox'\n      }\n    }];\n    return <FieldSetsContainer>\n        <H4>Look in code how to disable component manually</H4>\n        <Toggle onChange={setButtonDisabled}>\n          {`disable only button: ${commonDisabled.toString()}`}\n        </Toggle>\n        <Toggle onChange={setCommonDisabled}>\n          {`disable all: ${commonDisabled.toString()}`}\n        </Toggle>\n        <FieldSet {...args} items={items} disabled={commonDisabled} labelPosition=\"before\" />\n      </FieldSetsContainer>;\n  }\n}",...Disabled.parameters?.docs?.source}}},KeyValueMapper.parameters={...KeyValueMapper.parameters,docs:{...KeyValueMapper.parameters?.docs,source:{originalSource:"{\n  render: (args: KeyValueProps) => {\n    return <FieldSet.KeyValueMapper {...args} />;\n  },\n  args: {\n    gridLayout: {\n      cols: ['200px', '400px']\n    },\n    keyTooltip: 'tooltip',\n    keyRequired: true,\n    rowHeight: 123123,\n    padding: 12,\n    keysMargin: 123123,\n    wrapperClasses: {\n      keyClassName: 'class1',\n      valueClassName: 'class2'\n    },\n    data: [{\n      pairKey: 'Input',\n      pairValue: <Textbox placeholder=\"Text\" />\n    }, {\n      pairKey: 'Textarea',\n      pairValue: <Textbox.Textarea placeholder=\"Text area\" />\n    }, {\n      pairKey: 'Button',\n      pairValue: <Button size=\"medium\" mode=\"primary\">\n            Button\n          </Button>\n    }]\n  }\n}",...KeyValueMapper.parameters?.docs?.source}}};const __namedExportsOrder=["Basic","WaysToDeclareComponent","OverrideCommonStyles","ReducedMargin","Disabled","KeyValueMapper"]}}]);