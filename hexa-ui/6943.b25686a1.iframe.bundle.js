"use strict";(self.webpackChunk_kaspersky_hexa_ui=self.webpackChunk_kaspersky_hexa_ui||[]).push([[6943],{"./src/divider/Divider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c:()=>Divider});var useTestAttribute=__webpack_require__("./helpers/hooks/useTestAttribute.ts"),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const fromProps=(0,__webpack_require__("./helpers/getFromProps.ts").P)(),dividerCss=(0,styled_components_browser_esm.AH)(["padding:0;display:flex;background:",";",""],fromProps("color"),(({direction})=>"horizontal"===direction?(0,styled_components_browser_esm.AH)(["margin-top:0;margin-bottom:0;width:100%;height:1px;"]):(0,styled_components_browser_esm.AH)(["margin-left:0;margin-right:0;width:1px;"])));var useThemedComponent=__webpack_require__("./helpers/useThemedComponent.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const StyledDivider=styled_components_browser_esm.Ay.div.withConfig({shouldForwardProp:prop=>!["cssConfig","direction"].includes(prop)}).withConfig({displayName:"Divider__StyledDivider",componentId:"sc-1h4urf-0"})(["",""],dividerCss),Divider=rawProps=>{const themedProps=(props=>(0,useThemedComponent.K)(props,{componentName:"divider",defaultValues:{mode:"normal"}}))(rawProps),props=(0,useTestAttribute.a)(themedProps);return react.createElement(DividerView,props)},DividerView=({testAttributes,cssConfig,direction="horizontal",...rest})=>react.createElement(StyledDivider,_extends({direction,cssConfig},testAttributes,rest));Divider.__docgenInfo={description:"",methods:[],displayName:"Divider",props:{theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Custom theme"},mode:{required:!1,tsType:{name:"union",raw:"'normal' | 'light' | 'bold' | 'onLight' | 'inverted'",elements:[{name:"literal",value:"'normal'"},{name:"literal",value:"'light'"},{name:"literal",value:"'bold'"},{name:"literal",value:"'onLight'"},{name:"literal",value:"'inverted'"}]},description:"Color mode"},className:{required:!1,tsType:{name:"string"},description:"Custom class name"},direction:{required:!1,tsType:{name:"union",raw:"'horizontal' | 'vertical'",elements:[{name:"literal",value:"'horizontal'"},{name:"literal",value:"'vertical'"}]},description:"Direction"},testId:{required:!1,tsType:{name:"string"},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},klId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},componentId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},dataTestId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},componentType:{required:!1,tsType:{name:"string"},description:""}}}},"./src/dropdown/Dropdown.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{ms:()=>Dropdown,rx:()=>DropdownDivider,RP:()=>DropdownGroup,rI:()=>DropdownMenu,bj:()=>DropdownSubmenu});var WithGlobalComponentStyles=__webpack_require__("./helpers/hocs/WithGlobalComponentStyles.tsx"),WithGlobalStyles=__webpack_require__("./helpers/hocs/WithGlobalStyles.tsx"),dropdown=__webpack_require__("./node_modules/antd/es/dropdown/index.js"),menu=__webpack_require__("./node_modules/antd/es/menu/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),react=__webpack_require__("./node_modules/react/index.js"),variables=__webpack_require__("./design-system/theme/themes/variables.ts"),typography=__webpack_require__("./design-system/tokens/typography.ts"),Divider=__webpack_require__("./src/divider/Divider.tsx"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),js=__webpack_require__("./node_modules/@kaspersky/hexa-ui-core/esm/typography/js/index.js");const groupTextSizes=(0,typography.ip)(js.jA.BTM4),dropdownItemInnerCss=(0,styled_components_browser_esm.AH)(["width:100%;display:flex;flex-direction:row;justify-content:space-between;gap:","px;&,&:hover,&:active{background:transparent;}.kl6-dropdown-item-inner-block{display:flex;flex-direction:row;gap:","px;.kl6-dropdown-item-inner-additional,.kl6-dropdown-item-inner-expand-icon{height:20px;display:flex;flex-direction:column;justify-content:center;}.kl6-dropdown-item-inner-text-wrapper{display:flex;flex-direction:column;.kl6-dropdown-item-inner-text{text-wrap:wrap;display:flex;align-items:flex-end;gap:8px;}}}"],variables.m[2],variables.m[2]),textSizes=(0,typography.ip)(js.jA.BTR3),descriptionTextSizes=(0,typography.ip)(js.jA.BTR4),getDropdownCss=(cssConfig,rootHashClass)=>(0,styled_components_browser_esm.AH)([".","{padding:0;.ant-dropdown-menu{"," border-radius:","px;padding:","px 0px;margin:0;background:",";box-shadow:",";min-width:120px;max-width:600px;& > li{&:not(.kl6-dropdown-group-title){",";}&.kl6-dropdown-group-title{",";}&:first-child{border-top-left-radius:calc(","px/2);border-top-right-radius:calc(","px/2);}&:last-child{border-bottom-left-radius:calc(","px/2);border-bottom-right-radius:calc(","px/2);}}&.kl6-dropdown-loading{padding:","px 0px;display:flex;justify-content:center;}.ant-dropdown-menu-submenu-title{padding:0;&:hover{background:transparent;}}.ant-dropdown-menu-submenu-expand-icon{display:none;}}}"],rootHashClass,cssConfig.popupMaxHeight?`max-height: ${cssConfig.popupMaxHeight<100?100:cssConfig.popupMaxHeight}px;\n          overflow: auto;`:"",variables.a[4],variables.m[2],cssConfig.unselected.enabled.background,cssConfig.boxShadow,(cssConfig=>(0,styled_components_browser_esm.AH)(["padding:","px ","px;background:",";color:",";font-family:",";font-size:",";line-height:",";font-weight:",";font-style:",";letter-spacing:",";&:hover,&:focus-visible,&.ant-dropdown-menu-submenu-active{background:",";outline:none;}.kl6-dropdown-item-description{color:",";font-family:",";font-size:",";line-height:",";font-weight:",";font-style:",";letter-spacing:",";}&.ant-dropdown-menu-item-selected,&.ant-dropdown-menu-submenu-open{background:",";color:",";.kl6-dropdown-item-description{color:",";}}&.ant-dropdown-menu-item-disabled,&.ant-dropdown-menu-submenu-disabled{&,&:hover{background:",";.kl6-dropdown-item-inner-expand-icon,.kl6-dropdown-item-inner-additional,.kl6-dropdown-item-inner-text{color:",";}}}&.kl6-dropdown-item-action{color:",";&:hover,&:focus-visible{color:",";outline:none;}&.ant-dropdown-menu-item-selected,&.ant-dropdown-menu-submenu-open{color:",";&:hover,&:focus-visible{color:",";outline:none;}}}&.kl6-dropdown-item-custom:hover{background:",";}.ant-dropdown-menu-submenu-title{background:transparent;color:inherit;font-family:inherit;font-size:inherit;line-height:inherit;font-weight:inherit;font-style:inherit;letter-spacing:inherit;}"],variables.m[3],variables.m[6],cssConfig.unselected.enabled.background,cssConfig.unselected.enabled.color,textSizes.fontFamily,textSizes.fontSize,textSizes.lineHeight,textSizes.fontWeight,textSizes.fontStyle,textSizes.letterSpacing,cssConfig.unselected.hover.background,cssConfig.unselected.enabled.descriptionColor,descriptionTextSizes.fontFamily,descriptionTextSizes.fontSize,descriptionTextSizes.lineHeight,descriptionTextSizes.fontWeight,descriptionTextSizes.fontStyle,descriptionTextSizes.letterSpacing,cssConfig.selected.enabled.background,cssConfig.selected.enabled.color,cssConfig.selected.enabled.descriptionColor,cssConfig.unselected.enabled.background,cssConfig.unselected.disabled.color,cssConfig.selected.enabled.color,cssConfig.selected.hover.color,cssConfig.selected.enabled.color,cssConfig.selected.hover.color,cssConfig.unselected.enabled.background))(cssConfig),(cssConfig=>(0,styled_components_browser_esm.AH)(["padding:","px ","px ","px;font-family:",";font-size:",";line-height:",";font-weight:",";font-style:",";letter-spacing:",";color:",";background:",";"],variables.m[5],variables.m[6],variables.m[3],groupTextSizes.fontFamily,groupTextSizes.fontSize,groupTextSizes.lineHeight,groupTextSizes.fontWeight,groupTextSizes.fontStyle,groupTextSizes.letterSpacing,cssConfig.groupTitleColor,cssConfig.unselected.enabled.background))(cssConfig),variables.a[4],variables.a[4],variables.a[4],variables.a[4],variables.m[8]),StyledDivider=(0,styled_components_browser_esm.Ay)(Divider.c).withConfig({displayName:"dropdownCss__StyledDivider",componentId:"sc-1jh25v-0"})(["margin:","px 0;"],variables.m[2]);var Tooltip=__webpack_require__("./src/tooltip/Tooltip.tsx"),ArrowRight=__webpack_require__("./node_modules/@kaspersky/hexa-ui-icons/esm/16/ArrowRight.js");const StyledDropdownItemInner=styled_components_browser_esm.Ay.div.withConfig({displayName:"DropdownItemInner__StyledDropdownItemInner",componentId:"sc-1na3jm1-0"})(["",""],dropdownItemInnerCss),DropdownItemInner=({children,type,tooltip,description,componentsBefore,componentsAfter})=>{const dropdownItemInner=(0,react.useMemo)((()=>react.createElement(StyledDropdownItemInner,null,react.createElement("div",{className:"kl6-dropdown-item-inner-block"},null==componentsBefore?void 0:componentsBefore.map(((Component,index)=>react.createElement("div",{key:index,className:"kl6-dropdown-item-inner-additional"},Component))),react.createElement("div",{className:"kl6-dropdown-item-inner-text-wrapper"},react.createElement("div",{className:"kl6-dropdown-item-inner-text"},children),description&&react.createElement("div",{className:"kl6-dropdown-item-description"},description))),(componentsAfter||"submenu"===type)&&react.createElement("div",{className:"kl6-dropdown-item-inner-block"},null==componentsAfter?void 0:componentsAfter.map(((Component,index)=>react.createElement("div",{key:index,className:"kl6-dropdown-item-inner-additional"},Component))),"submenu"===type&&react.createElement("div",{className:"kl6-dropdown-item-inner-expand-icon"},react.createElement(ArrowRight.A,null))))),[children,componentsAfter,componentsBefore,description,type]);return tooltip?react.createElement(Tooltip.m,{text:tooltip},dropdownItemInner):dropdownItemInner};DropdownItemInner.__docgenInfo={description:"",methods:[],displayName:"DropdownItemInner",props:{children:{required:!0,tsType:{name:"union",raw:"ReactNode | DropdownItemProps[]",elements:[{name:"ReactNode"},{name:"Array",elements:[{name:"intersection",raw:"Omit<MenuItemProps, 'onClick'> & DropdownItemInnerProps & {\n  // copy-paste from antd non-exported type\n  onClick?: (info: {\n    key: string,\n    keyPath: string[],\n    /** @deprecated This will not be supported in the future. You should avoid using this */\n    item: ReactInstance,\n    domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n  }) => void\n} & DropdownThemeProps",elements:[{name:"Omit",elements:[{name:"MenuItemProps"},{name:"literal",value:"'onClick'"}],raw:"Omit<MenuItemProps, 'onClick'>"},{name:"signature",type:"object",raw:"{\n  children: ReactNode | DropdownItemProps[],\n  type?: 'group' | 'submenu' | 'action' | 'divider',\n  description?: string,\n  tooltip?: string,\n  componentsBefore?: ReactNode[],\n  componentsAfter?: ReactNode[]\n}",signature:{properties:[{key:"children",value:{name:"union",raw:"ReactNode | DropdownItemProps[]",elements:[{name:"ReactNode"},{name:"Array",elements:[{name:"DropdownItemProps"}],raw:"DropdownItemProps[]"}],required:!0}},{key:"type",value:{name:"union",raw:"'group' | 'submenu' | 'action' | 'divider'",elements:[{name:"literal",value:"'group'"},{name:"literal",value:"'submenu'"},{name:"literal",value:"'action'"},{name:"literal",value:"'divider'"}],required:!1}},{key:"description",value:{name:"string",required:!1}},{key:"tooltip",value:{name:"string",required:!1}},{key:"componentsBefore",value:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]",required:!1}},{key:"componentsAfter",value:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  // copy-paste from antd non-exported type\n  onClick?: (info: {\n    key: string,\n    keyPath: string[],\n    /** @deprecated This will not be supported in the future. You should avoid using this */\n    item: ReactInstance,\n    domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n  }) => void\n}",signature:{properties:[{key:"onClick",value:{name:"signature",type:"function",raw:"(info: {\n  key: string,\n  keyPath: string[],\n  /** @deprecated This will not be supported in the future. You should avoid using this */\n  item: ReactInstance,\n  domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  key: string,\n  keyPath: string[],\n  /** @deprecated This will not be supported in the future. You should avoid using this */\n  item: ReactInstance,\n  domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n}",signature:{properties:[{key:"key",value:{name:"string",required:!0}},{key:"keyPath",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}},{key:"item",value:{name:"ReactInstance",required:!0},description:"@deprecated This will not be supported in the future. You should avoid using this"},{key:"domEvent",value:{name:"union",raw:"MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>",elements:[{name:"MouseEvent",elements:[{name:"HTMLElement"}],raw:"MouseEvent<HTMLElement>"},{name:"KeyboardEvent",elements:[{name:"HTMLElement"}],raw:"KeyboardEvent<HTMLElement>"}],required:!0}}]}},name:"info"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:"{\n  /** Custom theme */\n  theme?: Theme\n}",signature:{properties:[{key:"theme",value:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}],required:!1},description:"Custom theme"}]}}]}],raw:"DropdownItemProps[]"}]},description:""},type:{required:!1,tsType:{name:"union",raw:"'group' | 'submenu' | 'action' | 'divider'",elements:[{name:"literal",value:"'group'"},{name:"literal",value:"'submenu'"},{name:"literal",value:"'action'"},{name:"literal",value:"'divider'"}]},description:""},description:{required:!1,tsType:{name:"string"},description:""},tooltip:{required:!1,tsType:{name:"string"},description:""},componentsBefore:{required:!1,tsType:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]"},description:""},componentsAfter:{required:!1,tsType:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]"},description:""}}};const DropdownItem=({children,componentsBefore,componentsAfter,description,tooltip,type,...rest})=>react.createElement(menu.A.Item,rest,react.createElement(DropdownItemInner,{componentsBefore,componentsAfter,description,tooltip},children));DropdownItem.__docgenInfo={description:"",methods:[],displayName:"DropdownItem",props:{children:{required:!0,tsType:{name:"union",raw:"ReactNode | DropdownItemProps[]",elements:[{name:"ReactNode"},{name:"Array",elements:[{name:"intersection",raw:"Omit<MenuItemProps, 'onClick'> & DropdownItemInnerProps & {\n  // copy-paste from antd non-exported type\n  onClick?: (info: {\n    key: string,\n    keyPath: string[],\n    /** @deprecated This will not be supported in the future. You should avoid using this */\n    item: ReactInstance,\n    domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n  }) => void\n} & DropdownThemeProps",elements:[{name:"Omit",elements:[{name:"MenuItemProps"},{name:"literal",value:"'onClick'"}],raw:"Omit<MenuItemProps, 'onClick'>"},{name:"signature",type:"object",raw:"{\n  children: ReactNode | DropdownItemProps[],\n  type?: 'group' | 'submenu' | 'action' | 'divider',\n  description?: string,\n  tooltip?: string,\n  componentsBefore?: ReactNode[],\n  componentsAfter?: ReactNode[]\n}",signature:{properties:[{key:"children",value:{name:"union",raw:"ReactNode | DropdownItemProps[]",elements:[{name:"ReactNode"},{name:"Array",elements:[{name:"DropdownItemProps"}],raw:"DropdownItemProps[]"}],required:!0}},{key:"type",value:{name:"union",raw:"'group' | 'submenu' | 'action' | 'divider'",elements:[{name:"literal",value:"'group'"},{name:"literal",value:"'submenu'"},{name:"literal",value:"'action'"},{name:"literal",value:"'divider'"}],required:!1}},{key:"description",value:{name:"string",required:!1}},{key:"tooltip",value:{name:"string",required:!1}},{key:"componentsBefore",value:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]",required:!1}},{key:"componentsAfter",value:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  // copy-paste from antd non-exported type\n  onClick?: (info: {\n    key: string,\n    keyPath: string[],\n    /** @deprecated This will not be supported in the future. You should avoid using this */\n    item: ReactInstance,\n    domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n  }) => void\n}",signature:{properties:[{key:"onClick",value:{name:"signature",type:"function",raw:"(info: {\n  key: string,\n  keyPath: string[],\n  /** @deprecated This will not be supported in the future. You should avoid using this */\n  item: ReactInstance,\n  domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  key: string,\n  keyPath: string[],\n  /** @deprecated This will not be supported in the future. You should avoid using this */\n  item: ReactInstance,\n  domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n}",signature:{properties:[{key:"key",value:{name:"string",required:!0}},{key:"keyPath",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}},{key:"item",value:{name:"ReactInstance",required:!0},description:"@deprecated This will not be supported in the future. You should avoid using this"},{key:"domEvent",value:{name:"union",raw:"MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>",elements:[{name:"MouseEvent",elements:[{name:"HTMLElement"}],raw:"MouseEvent<HTMLElement>"},{name:"KeyboardEvent",elements:[{name:"HTMLElement"}],raw:"KeyboardEvent<HTMLElement>"}],required:!0}}]}},name:"info"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:"{\n  /** Custom theme */\n  theme?: Theme\n}",signature:{properties:[{key:"theme",value:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}],required:!1},description:"Custom theme"}]}}]}],raw:"DropdownItemProps[]"}]},description:""},type:{required:!1,tsType:{name:"union",raw:"'group' | 'submenu' | 'action' | 'divider'",elements:[{name:"literal",value:"'group'"},{name:"literal",value:"'submenu'"},{name:"literal",value:"'action'"},{name:"literal",value:"'divider'"}]},description:""},description:{required:!1,tsType:{name:"string"},description:""},tooltip:{required:!1,tsType:{name:"string"},description:""},componentsBefore:{required:!1,tsType:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]"},description:""},componentsAfter:{required:!1,tsType:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]"},description:""},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(info: {\n  key: string,\n  keyPath: string[],\n  /** @deprecated This will not be supported in the future. You should avoid using this */\n  item: ReactInstance,\n  domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  key: string,\n  keyPath: string[],\n  /** @deprecated This will not be supported in the future. You should avoid using this */\n  item: ReactInstance,\n  domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n}",signature:{properties:[{key:"key",value:{name:"string",required:!0}},{key:"keyPath",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}},{key:"item",value:{name:"ReactInstance",required:!0},description:"@deprecated This will not be supported in the future. You should avoid using this"},{key:"domEvent",value:{name:"union",raw:"MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>",elements:[{name:"MouseEvent",elements:[{name:"HTMLElement"}],raw:"MouseEvent<HTMLElement>"},{name:"KeyboardEvent",elements:[{name:"HTMLElement"}],raw:"KeyboardEvent<HTMLElement>"}],required:!0}}]}},name:"info"}],return:{name:"void"}}},description:""},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Custom theme"}}};var Loader=__webpack_require__("./src/loader/Loader.tsx"),v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const mapOverlay=(items,overlayClassName)=>items.map((({type,disabled,title,description,tooltip,componentsAfter,componentsBefore,children,...rest})=>{const key=(0,v4.A)();switch(type){case"submenu":return react.createElement(DropdownSubmenu,{key,title:react.createElement(DropdownItemInner,{type,description,tooltip,componentsBefore,componentsAfter},title),popupOffset:[16,-10],popupClassName:overlayClassName,disabled},mapOverlay(children,overlayClassName));case"group":return react.createElement(react.Fragment,null,react.createElement(DropdownGroup,{"data-dropdown-item-group":!0},title),mapOverlay(children,overlayClassName));case"divider":return react.createElement(DropdownDivider,null);default:return react.createElement(DropdownItem,_extends({key,disabled,componentsBefore,componentsAfter,description,tooltip},rest,{className:classnames_default()(rest.className,{"kl6-dropdown-item-action":"action"===type,"kl6-dropdown-item-custom":"string"!=typeof children})}),children)}}));var useThemedComponent=__webpack_require__("./helpers/useThemedComponent.tsx");function Dropdown_extends(){return Dropdown_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},Dropdown_extends.apply(null,arguments)}const Dropdown=rawProps=>{const props=(props=>{const themedProps=(0,useThemedComponent.K)(props,{componentName:"dropdown",defaultValues:{}});return themedProps.cssConfig.popupMaxHeight=props.popupMaxHeight,themedProps})(rawProps);return react.createElement(DropdownView,props)},DropdownViewComponent=({onVisibleChange,overlayClassName,rootHashClass,...rest})=>{const props=(({overlay,loading,testId,klId,overlayClassName,...rest})=>({overlay:(0,react.useMemo)((()=>Array.isArray(overlay)?react.createElement(DropdownMenu,{"data-testid":testId,"kl-id":klId,className:classnames_default()({"kl6-dropdown-loading":loading}),triggerSubMenuAction:"click"},loading?react.createElement(Loader.a,{size:"medium"}):mapOverlay(overlay,overlayClassName)):overlay),[overlay,loading,klId,testId,overlayClassName]),overlayClassName,...rest}))({...rest,overlayClassName:classnames_default()(overlayClassName,rootHashClass,"kl6-dropdown-popup")}),focusOnFirstItem=(0,react.useCallback)((()=>{setTimeout((()=>{var _document$querySelect,_elementFoFocus$focus;const elementFoFocus=null===(_document$querySelect=document.querySelector(".ant-dropdown:not(.ant-dropdown-hidden) li"))||void 0===_document$querySelect?void 0:_document$querySelect.firstChild;null==elementFoFocus||null===(_elementFoFocus$focus=elementFoFocus.focus)||void 0===_elementFoFocus$focus||_elementFoFocus$focus.call(elementFoFocus)}),0)}),[]),newOnVisibleChange=(0,react.useCallback)((opened=>{focusOnFirstItem(),null==onVisibleChange||onVisibleChange(opened)}),[onVisibleChange,focusOnFirstItem]);return react.createElement(dropdown.A,Dropdown_extends({},props,{onVisibleChange:newOnVisibleChange}))};DropdownViewComponent.displayName="DropdownView";const DropdownView=(0,WithGlobalComponentStyles.N)((0,WithGlobalStyles.c)(DropdownViewComponent),((cssConfig,rootHashClass)=>getDropdownCss(cssConfig,rootHashClass).join(""))),DropdownMenu=props=>react.createElement(menu.A,props),DropdownSubmenu=({className,...rest})=>react.createElement(menu.A.SubMenu,Dropdown_extends({popupClassName:className},rest)),DropdownGroup=props=>react.createElement("li",Dropdown_extends({},props,{className:"kl6-dropdown-group-title"})),DropdownDivider=props=>react.createElement(StyledDivider,props);Dropdown.Menu=DropdownMenu,Dropdown.SubMenu=DropdownSubmenu,Dropdown.MenuItem=DropdownItem,Dropdown.MenuDivider=DropdownDivider,Dropdown.GroupTitle=DropdownGroup,Dropdown.displayName="Dropdown",Dropdown.Menu.displayName="Dropdown.Menu",Dropdown.SubMenu.displayName="Dropdown.SubMenu",Dropdown.MenuItem.displayName="Dropdown.MenuItem",Dropdown.MenuDivider.displayName="Dropdown.MenuDivider",Dropdown.GroupTitle.displayName="Dropdown.GroupTitle",Dropdown.__docgenInfo={description:"",methods:[{name:"Menu",docblock:null,modifiers:["static"],params:[{name:"props",optional:!1,type:{name:"MenuProps",alias:"MenuProps"}}],returns:null},{name:"SubMenu",docblock:null,modifiers:["static"],params:[{name:"{ className, ...rest }: SubMenuProps",optional:!1,type:{name:"SubMenuProps",alias:"SubMenuProps"}}],returns:null},{name:"MenuItem",docblock:null,modifiers:["static"],params:[{name:"{\n  children,\n  componentsBefore,\n  componentsAfter,\n  description,\n  tooltip,\n  type,\n  ...rest\n}: DropdownItemProps",optional:!1,type:{name:"intersection",raw:"Omit<MenuItemProps, 'onClick'> & DropdownItemInnerProps & {\n  // copy-paste from antd non-exported type\n  onClick?: (info: {\n    key: string,\n    keyPath: string[],\n    /** @deprecated This will not be supported in the future. You should avoid using this */\n    item: ReactInstance,\n    domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n  }) => void\n} & DropdownThemeProps",elements:[{name:"Omit",elements:[{name:"MenuItemProps"},{name:"literal",value:"'onClick'"}],raw:"Omit<MenuItemProps, 'onClick'>"},{name:"signature",type:"object",raw:"{\n  children: ReactNode | DropdownItemProps[],\n  type?: 'group' | 'submenu' | 'action' | 'divider',\n  description?: string,\n  tooltip?: string,\n  componentsBefore?: ReactNode[],\n  componentsAfter?: ReactNode[]\n}",signature:{properties:[{key:"children",value:{name:"union",raw:"ReactNode | DropdownItemProps[]",elements:[{name:"ReactNode"},{name:"Array",elements:[{name:"DropdownItemProps"}],raw:"DropdownItemProps[]"}],required:!0}},{key:"type",value:{name:"union",raw:"'group' | 'submenu' | 'action' | 'divider'",elements:[{name:"literal",value:"'group'"},{name:"literal",value:"'submenu'"},{name:"literal",value:"'action'"},{name:"literal",value:"'divider'"}],required:!1}},{key:"description",value:{name:"string",required:!1}},{key:"tooltip",value:{name:"string",required:!1}},{key:"componentsBefore",value:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]",required:!1}},{key:"componentsAfter",value:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  // copy-paste from antd non-exported type\n  onClick?: (info: {\n    key: string,\n    keyPath: string[],\n    /** @deprecated This will not be supported in the future. You should avoid using this */\n    item: ReactInstance,\n    domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n  }) => void\n}",signature:{properties:[{key:"onClick",value:{name:"signature",type:"function",raw:"(info: {\n  key: string,\n  keyPath: string[],\n  /** @deprecated This will not be supported in the future. You should avoid using this */\n  item: ReactInstance,\n  domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  key: string,\n  keyPath: string[],\n  /** @deprecated This will not be supported in the future. You should avoid using this */\n  item: ReactInstance,\n  domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n}",signature:{properties:[{key:"key",value:{name:"string",required:!0}},{key:"keyPath",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}},{key:"item",value:{name:"ReactInstance",required:!0},description:"@deprecated This will not be supported in the future. You should avoid using this"},{key:"domEvent",value:{name:"union",raw:"MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>",elements:[{name:"MouseEvent",elements:[{name:"HTMLElement"}],raw:"MouseEvent<HTMLElement>"},{name:"KeyboardEvent",elements:[{name:"HTMLElement"}],raw:"KeyboardEvent<HTMLElement>"}],required:!0}}]}},name:"info"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:"{\n  /** Custom theme */\n  theme?: Theme\n}",signature:{properties:[{key:"theme",value:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}],required:!1},description:"Custom theme"}]}}],alias:"DropdownItemProps"}}],returns:null},{name:"MenuDivider",docblock:null,modifiers:["static"],params:[{name:"props",optional:!1,type:null}],returns:null},{name:"GroupTitle",docblock:null,modifiers:["static"],params:[{name:"props",optional:!1,type:null}],returns:null}],displayName:"Dropdown",props:{overlay:{required:!0,tsType:{name:"union",raw:"DropdownItemProps[] | ReactElement | (() => ReactElement)",elements:[{name:"Array",elements:[{name:"intersection",raw:"Omit<MenuItemProps, 'onClick'> & DropdownItemInnerProps & {\n  // copy-paste from antd non-exported type\n  onClick?: (info: {\n    key: string,\n    keyPath: string[],\n    /** @deprecated This will not be supported in the future. You should avoid using this */\n    item: ReactInstance,\n    domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n  }) => void\n} & DropdownThemeProps",elements:[{name:"Omit",elements:[{name:"MenuItemProps"},{name:"literal",value:"'onClick'"}],raw:"Omit<MenuItemProps, 'onClick'>"},{name:"signature",type:"object",raw:"{\n  children: ReactNode | DropdownItemProps[],\n  type?: 'group' | 'submenu' | 'action' | 'divider',\n  description?: string,\n  tooltip?: string,\n  componentsBefore?: ReactNode[],\n  componentsAfter?: ReactNode[]\n}",signature:{properties:[{key:"children",value:{name:"union",raw:"ReactNode | DropdownItemProps[]",elements:[{name:"ReactNode"},{name:"Array",elements:[{name:"DropdownItemProps"}],raw:"DropdownItemProps[]"}],required:!0}},{key:"type",value:{name:"union",raw:"'group' | 'submenu' | 'action' | 'divider'",elements:[{name:"literal",value:"'group'"},{name:"literal",value:"'submenu'"},{name:"literal",value:"'action'"},{name:"literal",value:"'divider'"}],required:!1}},{key:"description",value:{name:"string",required:!1}},{key:"tooltip",value:{name:"string",required:!1}},{key:"componentsBefore",value:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]",required:!1}},{key:"componentsAfter",value:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  // copy-paste from antd non-exported type\n  onClick?: (info: {\n    key: string,\n    keyPath: string[],\n    /** @deprecated This will not be supported in the future. You should avoid using this */\n    item: ReactInstance,\n    domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n  }) => void\n}",signature:{properties:[{key:"onClick",value:{name:"signature",type:"function",raw:"(info: {\n  key: string,\n  keyPath: string[],\n  /** @deprecated This will not be supported in the future. You should avoid using this */\n  item: ReactInstance,\n  domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  key: string,\n  keyPath: string[],\n  /** @deprecated This will not be supported in the future. You should avoid using this */\n  item: ReactInstance,\n  domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n}",signature:{properties:[{key:"key",value:{name:"string",required:!0}},{key:"keyPath",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}},{key:"item",value:{name:"ReactInstance",required:!0},description:"@deprecated This will not be supported in the future. You should avoid using this"},{key:"domEvent",value:{name:"union",raw:"MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>",elements:[{name:"MouseEvent",elements:[{name:"HTMLElement"}],raw:"MouseEvent<HTMLElement>"},{name:"KeyboardEvent",elements:[{name:"HTMLElement"}],raw:"KeyboardEvent<HTMLElement>"}],required:!0}}]}},name:"info"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:"{\n  /** Custom theme */\n  theme?: Theme\n}",signature:{properties:[{key:"theme",value:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}],required:!1},description:"Custom theme"}]}}]}],raw:"DropdownItemProps[]"},{name:"ReactElement"},{name:"unknown"}]},description:"The dropdown menu"},trigger:{required:!1,tsType:{name:"Array",elements:[{name:"Exclude[number]",raw:"Exclude<AntdDropdownProps['trigger'], undefined>[number]"}],raw:"Trigger[]"},description:"The trigger mode which executes the dropdown action. Note that hover can't be used on touchscreens"},onVisibleChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(visible: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"visible"}],return:{name:"void"}}},description:"Called when the visible state is changed. Not trigger when hidden by click item"},onOverlayClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when overlay is clicked"},visible:{required:!1,tsType:{name:"boolean"},description:"Whether the dropdown menu is currently visible"},disabled:{required:!1,tsType:{name:"boolean"},description:"Whether the dropdown menu is disabled"},loading:{required:!1,tsType:{name:"boolean"},description:"Is loading"},placement:{required:!1,tsType:{name:"AntdDropdownProps['placement']",raw:"AntdDropdownProps['placement']"},description:"Placement of popup menu"},overlayClassName:{required:!1,tsType:{name:"string"},description:"The class name of the dropdown root element"},className:{required:!1,tsType:{name:"string"},description:"Css class"},popupMaxHeight:{required:!1,tsType:{name:"number"},description:"Set max height for dropdownMenu in pixels"},getPopupContainer:{required:!1,tsType:{name:"AntdDropdownProps['getPopupContainer']",raw:"AntdDropdownProps['getPopupContainer']"},description:"To set the container of the dropdown menu"},children:{required:!1,tsType:{name:"ReactNode"},description:"React children"},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Custom theme"},testId:{required:!1,tsType:{name:"string"},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},klId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},componentId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},dataTestId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},componentType:{required:!1,tsType:{name:"string"},description:""}}},DropdownMenu.__docgenInfo={description:"",methods:[],displayName:"DropdownMenu"},DropdownSubmenu.__docgenInfo={description:"",methods:[],displayName:"DropdownSubmenu"},DropdownGroup.__docgenInfo={description:"",methods:[],displayName:"DropdownGroup"},DropdownDivider.__docgenInfo={description:"",methods:[],displayName:"DropdownDivider",props:{theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Custom theme"},mode:{required:!1,tsType:{name:"union",raw:"'normal' | 'light' | 'bold' | 'onLight' | 'inverted'",elements:[{name:"literal",value:"'normal'"},{name:"literal",value:"'light'"},{name:"literal",value:"'bold'"},{name:"literal",value:"'onLight'"},{name:"literal",value:"'inverted'"}]},description:"Color mode"},className:{required:!1,tsType:{name:"string"},description:"Custom class name"},direction:{required:!1,tsType:{name:"union",raw:"'horizontal' | 'vertical'",elements:[{name:"literal",value:"'horizontal'"},{name:"literal",value:"'vertical'"}]},description:"Direction"},testId:{required:!1,tsType:{name:"string"},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},klId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},componentId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},dataTestId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},componentType:{required:!1,tsType:{name:"string"},description:""}}}},"./src/loader/Loader.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{a:()=>Loader});var useTestAttribute=__webpack_require__("./helpers/hooks/useTestAttribute.ts"),spin=__webpack_require__("./node_modules/antd/es/spin/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const fromProps=(0,__webpack_require__("./helpers/getFromProps.ts").P)(),loaderCss=(0,styled_components_browser_esm.AH)(["&.ant-spinner-centered{position:absolute;transform:translate(-50%,-50%);top:50%;left:50%;}line-height:0;& > svg{height:",";width:",";}.ant-spin-text{color:",";font-family:",";font-weight:",";font-size:",";font-style:",";line-height:",";letter-spacing:",";padding-top:",";}"],fromProps("height"),fromProps("width"),fromProps("textColor"),fromProps("fontFamily"),fromProps("fontWeight"),fromProps("fontSize"),fromProps("fontStyle"),fromProps("lineHeight"),fromProps("letterSpacing"),fromProps("gap")),iconCss=(0,styled_components_browser_esm.AH)(["& path{stroke:","}"],(({color})=>color)),LoaderIcon=({className})=>react.createElement("svg",{width:"48",height:"48",viewBox:"0 0 48 48",fill:"none",xmlns:"http://www.w3.org/2000/svg",className:classnames_default()(["anticon-spin",className])},react.createElement("path",{d:"M24 45.5C35.8741 45.5 45.5 35.8741 45.5 24C45.5 12.1259 35.8741 2.5 24 2.5C12.1259 2.5 2.5 12.1259 2.5 24",strokeWidth:"5",strokeLinecap:"round"}));LoaderIcon.__docgenInfo={description:"",methods:[],displayName:"LoaderIcon",props:{className:{required:!1,tsType:{name:"string"},description:""}}};var useThemedComponent=__webpack_require__("./helpers/useThemedComponent.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const StyledSpin=(0,styled_components_browser_esm.Ay)(spin.A).withConfig({shouldForwardProp:prop=>!["centered","cssConfig"].includes(prop)}).withConfig({displayName:"Loader__StyledSpin",componentId:"sc-cmtvzq-0"})(["",""],loaderCss),StyledIcon=(0,styled_components_browser_esm.Ay)(LoaderIcon).withConfig({displayName:"Loader__StyledIcon",componentId:"sc-cmtvzq-1"})(["",""],iconCss),Loader=rawProps=>{const themedProps=(props=>(0,useThemedComponent.K)(props,{componentName:"loader",defaultValues:{mode:"default",size:"small"}}))(rawProps),props=(0,useTestAttribute.a)(themedProps);return react.createElement(LoaderView,props)},LoaderView=({spinning=!0,cssConfig,className,centered,testAttributes,...rest})=>react.createElement(StyledSpin,_extends({className:classnames_default()(className,{"ant-spinner-centered":centered}),centered,indicator:react.createElement(StyledIcon,{color:cssConfig.color}),spinning,cssConfig},testAttributes,rest));Loader.__docgenInfo={description:"",methods:[],displayName:"Loader",props:{centered:{required:!1,tsType:{name:"boolean"},description:"Is centered"},delay:{required:!1,tsType:{name:"number"},description:"Specifies a delay in milliseconds for loading state (prevent flush)"},spinning:{required:!1,tsType:{name:"boolean"},description:"Whether Spin is visible"},className:{required:!1,tsType:{name:"string"},description:"Spinner className"},tip:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Customize description content when Spin has children"},theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Custom theme"},mode:{required:!1,tsType:{name:"union",raw:"'default' | 'inverted'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'inverted'"}]},description:"Color mode"},size:{required:!1,tsType:{name:"union",raw:"Size | `${Size}`",elements:[{name:"Size"},{name:"literal",value:"`${Size}`"}]},description:"Size"},testId:{required:!1,tsType:{name:"string"},description:"Actual identifier for autotesting, whill be passed to HTML attribute data-testid"},klId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead. Identifier for backward compatibility in autotesting, whill be passed to HTML attribute kl-id"},componentId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},dataTestId:{required:!1,tsType:{name:"string"},description:"@deprecated Use 'testId' prop instead"},componentType:{required:!1,tsType:{name:"string"},description:""}}}}}]);