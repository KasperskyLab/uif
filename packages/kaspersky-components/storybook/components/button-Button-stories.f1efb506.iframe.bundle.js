"use strict";(self.webpackChunk_kaspersky_components=self.webpackChunk_kaspersky_components||[]).push([[6057],{"./helpers/hocs/MetaComponent/MetaDod.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MetaDod=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_styledComponents=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js")),_blocks=__webpack_require__("./node_modules/@storybook/blocks/dist/index.js"),_types=__webpack_require__("./helpers/hocs/MetaComponent/types.ts"),_tag=__webpack_require__("./src/tag/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const StyledTableContainer=_styledComponents.default.div.withConfig({displayName:"MetaDod__StyledTableContainer",componentId:"sc-1gxe50k-0"})(["&&&&&{width:300px;td,th,tr{background:transparent;border:none;}}"]),MetaDod=_ref=>{let{list}=_ref;const metaDodKeys=(0,_react.useMemo)((()=>Object.keys(_types.metaDod)),[]);return(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_blocks.Subtitle,{children:`Definition of done ${(new Date).getDate()}.${(new Date).getMonth()}.${(new Date).getFullYear()}`}),(0,_jsxRuntime.jsx)(StyledTableContainer,{children:(0,_jsxRuntime.jsxs)("table",{children:[(0,_jsxRuntime.jsx)("thead",{children:(0,_jsxRuntime.jsxs)("tr",{children:[(0,_jsxRuntime.jsx)("td",{children:(0,_jsxRuntime.jsx)("b",{children:"Point"})}),(0,_jsxRuntime.jsx)("td",{children:(0,_jsxRuntime.jsx)("b",{children:"Status"})})]})}),(0,_jsxRuntime.jsx)("tbody",{children:metaDodKeys.map((key=>(0,_jsxRuntime.jsxs)("tr",{children:[(0,_jsxRuntime.jsx)("td",{children:_types.metaDod[key]}),(0,_jsxRuntime.jsx)("td",{children:(0,_jsxRuntime.jsx)(_tag.Tag,{mode:list[key]?"grass":"red",children:list[key]?"ready":"need"})})]},key)))})]})})]})};exports.MetaDod=MetaDod;try{MetaDod.displayName="MetaDod",MetaDod.__docgenInfo={description:"",displayName:"MetaDod",props:{list:{defaultValue:null,description:"",name:"list",required:!0,type:{name:'Partial<Record<"storybook" | "designTokens" | "useThemedHook" | "unitTests" | "screenshotTests" | "migration" | "apiTable" | "figmaView", boolean>>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["helpers/hocs/MetaComponent/MetaDod.tsx#MetaDod"]={docgenInfo:MetaDod.__docgenInfo,name:"MetaDod",path:"helpers/hocs/MetaComponent/MetaDod.tsx#MetaDod"})}catch(__react_docgen_typescript_loader_error){}},"./helpers/hocs/MetaComponent/types.ts":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.metaDod=void 0;exports.metaDod={designTokens:"Дизайн токены",useThemedHook:"Использование theme hook",unitTests:"Unit tests",screenshotTests:"Screenshot tests",migration:"Описание миграции",apiTable:"api table",storybook:"storybook",figmaView:"Отображение в Фигме"}},"./helpers/hocs/MetaComponent/withMeta.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.withMeta=function withMeta(list,Component){return props=>(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_blocks.Title,{children:list.component}),(0,_jsxRuntime.jsx)(_MetaDod.MetaDod,{list:list.dod}),(0,_jsxRuntime.jsx)(_blocks.Subtitle,{children:"Описание"}),list.description?(0,_jsxRuntime.jsx)(_blocks.Markdown,{children:list.description}):"-",(0,_jsxRuntime.jsx)(_blocks.Subtitle,{children:"Использование"}),(0,_jsxRuntime.jsx)(_blocks.Markdown,{children:list.usage}),(0,_jsxRuntime.jsx)(_blocks.Markdown,{children:`[Дизайн](${list.designLink})`}),Component&&(0,_jsxRuntime.jsx)(Component,{...props}),(0,_jsxRuntime.jsx)(_blocks.Primary,{}),(0,_jsxRuntime.jsx)(_blocks.ArgsTable,{story:_blocks.PRIMARY_STORY}),(0,_jsxRuntime.jsx)(_blocks.Stories,{title:"Variants of View"})]})};(function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}})(__webpack_require__("./node_modules/react/index.js"));var _MetaDod=__webpack_require__("./helpers/hocs/MetaComponent/MetaDod.tsx"),_blocks=__webpack_require__("./node_modules/@storybook/blocks/dist/index.js"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js")},"./src/button/Button.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.WithCustomIcon=exports.ButtonSizes=exports.ButtonModes=exports.ButtonLoading=exports.ButtonGroup=exports.Basic=void 0;_interopRequireDefault(__webpack_require__("./node_modules/react/index.js"));var _Basic$parameters,_Basic$parameters2,_Basic$parameters2$do,_WithCustomIcon$param,_WithCustomIcon$param2,_WithCustomIcon$param3,_ButtonLoading$parame,_ButtonLoading$parame2,_ButtonLoading$parame3,_ButtonSizes$paramete,_ButtonSizes$paramete2,_ButtonSizes$paramete3,_ButtonModes$paramete,_ButtonModes$paramete2,_ButtonModes$paramete3,_ButtonGroup$paramete,_ButtonGroup$paramete2,_ButtonGroup$paramete3,_styledComponents=_interopRequireDefault(__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js")),_badges=__webpack_require__("./.storybook/badges.ts"),_withMeta=__webpack_require__("./helpers/hocs/MetaComponent/withMeta.tsx"),_storybookHelpers=__webpack_require__("./helpers/storybookHelpers.ts"),_types=__webpack_require__("./design-system/types/index.ts"),_Button=__webpack_require__("./src/button/Button.tsx"),_=__webpack_require__("./node_modules/@kaspersky/icons/16/index.js"),_meta=_interopRequireDefault(__webpack_require__("./src/button/meta.json")),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const defaultIcon=(0,_jsxRuntime.jsx)(_.Placeholder,{klId:"button-icon"}),defaultSizes=[_types.Size.Small,_types.Size.Medium,_types.Size.Large,_types.Size.ExtraLarge],defaultModes=["primary","secondary","tertiary","dangerOutlined","dangerFilled"],ButtonContainer=_styledComponents.default.div.withConfig({displayName:"Buttonstories__ButtonContainer",componentId:"sc-1etdbnb-0"})(["display:flex;gap:12px;"]),meta={title:"Atoms/Button",component:_Button.Button,argTypes:{size:{options:defaultSizes,control:{type:"select"}},mode:{options:defaultModes},loading:{...(0,_storybookHelpers.sbSetDefaultValue)("false")},disabled:{...(0,_storybookHelpers.sbSetDefaultValue)("false")},klId:_storybookHelpers.sbHideControl,...(0,_storybookHelpers.sbHideControls)(["iconBefore","iconAfter","icon","onClick","theme"])},args:{text:"Button",size:_types.Size.Medium,mode:"primary",disabled:!1,loading:!1,type:"button",testId:"button-test-id",klId:"button-kl-id"},parameters:{storySource:{source:"import React from 'react';\nimport { Meta, StoryObj } from '@storybook/react';\nimport styled from 'styled-components';\nimport { badges } from '@sb/badges';\nimport { withMeta } from '@helpers/hocs/MetaComponent/withMeta';\nimport { sbSetDefaultValue, sbHideControl, sbHideControls } from '@helpers/storybookHelpers';\nimport { Size } from '@design-system/types';\nimport { Button } from './Button';\nimport { Placeholder } from '@kaspersky/icons/16';\nimport { ButtonModeActual, ButtonProps, ButtonSize } from './types';\nimport MetaData from './meta.json';\n\n// default values\nconst defaultIcon = <Placeholder klId='button-icon' />;\nconst defaultSizes: Size[] = [Size.Small, Size.Medium, Size.Large, Size.ExtraLarge];\nconst defaultModes: ButtonModeActual[] = ['primary', 'secondary', 'tertiary', 'dangerOutlined', 'dangerFilled'];\nconst ButtonContainer = styled.div`\n  display: flex;\n  gap: 12px;\n`;\n\n// meta\nconst meta: Meta<ButtonProps> = {\n  title: 'Atoms/Button',\n  component: Button,\n  argTypes: {\n    size: {\n      options: defaultSizes,\n      control: {\n        type: 'select'\n      }\n    },\n    mode: {\n      options: defaultModes\n    },\n    loading: {\n      // should be used when there is no possibility to set\n      // default value for specific prop in Component or ComponentView\n      ...sbSetDefaultValue('false')\n    },\n    disabled: {\n      ...sbSetDefaultValue('false')\n    },\n    // shortcut to hide a single control\n    klId: sbHideControl,\n    // shortcut to hide multiple controls\n    ...sbHideControls(['iconBefore', 'iconAfter', 'icon', 'onClick', 'theme'])\n  },\n  args: {\n    text: 'Button',\n    size: Size.Medium,\n    mode: 'primary',\n    disabled: false,\n    loading: false,\n    type: 'button',\n    testId: 'button-test-id',\n    klId: 'button-kl-id'\n  },\n  parameters: {\n    badges: [badges.stable, badges.reviewedByDesign],\n    docs: {\n      page: withMeta(MetaData)\n    },\n    design: MetaData.figmaView\n  }\n};\nexport default meta;\ntype Story = StoryObj<ButtonProps>;\n\n// Basic\nexport const Basic: Story = {};\n// equals to:\n// export const Basic: Story = (args: ButtonProps) => {\n//   return <Button {...args}/>\n// }\n\n// WithCustomIcon\nexport const WithCustomIcon = {\n  render: ({\n    text,\n    iconBefore,\n    iconAfter,\n    ...rest\n  }: ButtonProps) => <ButtonContainer>\n      <Button {...rest} text={text} iconBefore={iconBefore} iconAfter={iconAfter} />\n      <Button {...rest} text={text} iconBefore={iconBefore} />\n      <Button {...rest} text={text} iconAfter={iconAfter} />\n      <Button {...rest} text={text} />\n      <Button {...rest} iconBefore={iconBefore} />\n    </ButtonContainer>,\n  args: {\n    iconBefore: defaultIcon,\n    iconAfter: defaultIcon\n  }\n};\n\n// Button Loading\nexport const ButtonLoading: Story = {\n  render: ({\n    text,\n    iconBefore,\n    ...rest\n  }: ButtonProps) => <ButtonContainer>\n      <Button {...rest} text={text} />\n      <Button {...rest} iconBefore={iconBefore} />\n    </ButtonContainer>,\n  args: {\n    loading: true,\n    iconBefore: defaultIcon\n  }\n};\n\n// Button Sizes\nexport const ButtonSizes: Story = {\n  render: (args: ButtonProps) => <ButtonContainer>\n      {defaultSizes.map(size => <Button key={size} {...args} text={size} size={(size as ButtonSize)} />)}\n    </ButtonContainer>\n};\n\n// Button modes\nexport const ButtonModes: Story = {\n  render: (args: ButtonProps) => <ButtonContainer>\n      {defaultModes.map(mode => <Button key={mode} {...args} text={mode} mode={mode} />)}\n    </ButtonContainer>\n};\n\n// Button group\nexport const ButtonGroup: Story = {\n  render: (args: ButtonProps) => <Button.Group>\n      <Button {...args} text='First' />\n      <Button {...args} text='Second' />\n      <Button {...args} text='Third' />\n    </Button.Group>\n};\nBasic.parameters = {\n  ...Basic.parameters,\n  docs: {\n    ...Basic.parameters?.docs,\n    source: {\n      originalSource: \"{}\",\n      ...Basic.parameters?.docs?.source\n    }\n  }\n};\nWithCustomIcon.parameters = {\n  ...WithCustomIcon.parameters,\n  docs: {\n    ...WithCustomIcon.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: ({\\n    text,\\n    iconBefore,\\n    iconAfter,\\n    ...rest\\n  }: ButtonProps) => <ButtonContainer>\\n      <Button {...rest} text={text} iconBefore={iconBefore} iconAfter={iconAfter} />\\n      <Button {...rest} text={text} iconBefore={iconBefore} />\\n      <Button {...rest} text={text} iconAfter={iconAfter} />\\n      <Button {...rest} text={text} />\\n      <Button {...rest} iconBefore={iconBefore} />\\n    </ButtonContainer>,\\n  args: {\\n    iconBefore: defaultIcon,\\n    iconAfter: defaultIcon\\n  }\\n}\",\n      ...WithCustomIcon.parameters?.docs?.source\n    }\n  }\n};\nButtonLoading.parameters = {\n  ...ButtonLoading.parameters,\n  docs: {\n    ...ButtonLoading.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: ({\\n    text,\\n    iconBefore,\\n    ...rest\\n  }: ButtonProps) => <ButtonContainer>\\n      <Button {...rest} text={text} />\\n      <Button {...rest} iconBefore={iconBefore} />\\n    </ButtonContainer>,\\n  args: {\\n    loading: true,\\n    iconBefore: defaultIcon\\n  }\\n}\",\n      ...ButtonLoading.parameters?.docs?.source\n    }\n  }\n};\nButtonSizes.parameters = {\n  ...ButtonSizes.parameters,\n  docs: {\n    ...ButtonSizes.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: (args: ButtonProps) => <ButtonContainer>\\n      {defaultSizes.map(size => <Button key={size} {...args} text={size} size={(size as ButtonSize)} />)}\\n    </ButtonContainer>\\n}\",\n      ...ButtonSizes.parameters?.docs?.source\n    }\n  }\n};\nButtonModes.parameters = {\n  ...ButtonModes.parameters,\n  docs: {\n    ...ButtonModes.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: (args: ButtonProps) => <ButtonContainer>\\n      {defaultModes.map(mode => <Button key={mode} {...args} text={mode} mode={mode} />)}\\n    </ButtonContainer>\\n}\",\n      ...ButtonModes.parameters?.docs?.source\n    }\n  }\n};\nButtonGroup.parameters = {\n  ...ButtonGroup.parameters,\n  docs: {\n    ...ButtonGroup.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: (args: ButtonProps) => <Button.Group>\\n      <Button {...args} text='First' />\\n      <Button {...args} text='Second' />\\n      <Button {...args} text='Third' />\\n    </Button.Group>\\n}\",\n      ...ButtonGroup.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{basic:{startLoc:{col:28,line:71},endLoc:{col:30,line:71},startBody:{col:28,line:71},endBody:{col:30,line:71}},"with-custom-icon":{startLoc:{col:30,line:78},endLoc:{col:1,line:95},startBody:{col:30,line:78},endBody:{col:1,line:95}},"button-loading":{startLoc:{col:36,line:98},endLoc:{col:1,line:111},startBody:{col:36,line:98},endBody:{col:1,line:111}},"button-sizes":{startLoc:{col:34,line:114},endLoc:{col:1,line:118},startBody:{col:34,line:114},endBody:{col:1,line:118}},"button-modes":{startLoc:{col:34,line:121},endLoc:{col:1,line:125},startBody:{col:34,line:121},endBody:{col:1,line:125}},"button-group":{startLoc:{col:34,line:128},endLoc:{col:1,line:134},startBody:{col:34,line:128},endBody:{col:1,line:134}}}},badges:[_badges.badges.stable,_badges.badges.reviewedByDesign],docs:{page:(0,_withMeta.withMeta)(_meta.default)},design:_meta.default.figmaView}};exports.default=meta;const Basic=exports.Basic={},WithCustomIcon=exports.WithCustomIcon={render:_ref=>{let{text,iconBefore,iconAfter,...rest}=_ref;return(0,_jsxRuntime.jsxs)(ButtonContainer,{children:[(0,_jsxRuntime.jsx)(_Button.Button,{...rest,text,iconBefore,iconAfter}),(0,_jsxRuntime.jsx)(_Button.Button,{...rest,text,iconBefore}),(0,_jsxRuntime.jsx)(_Button.Button,{...rest,text,iconAfter}),(0,_jsxRuntime.jsx)(_Button.Button,{...rest,text}),(0,_jsxRuntime.jsx)(_Button.Button,{...rest,iconBefore})]})},args:{iconBefore:defaultIcon,iconAfter:defaultIcon}},ButtonLoading=exports.ButtonLoading={render:_ref2=>{let{text,iconBefore,...rest}=_ref2;return(0,_jsxRuntime.jsxs)(ButtonContainer,{children:[(0,_jsxRuntime.jsx)(_Button.Button,{...rest,text}),(0,_jsxRuntime.jsx)(_Button.Button,{...rest,iconBefore})]})},args:{loading:!0,iconBefore:defaultIcon}},ButtonSizes=exports.ButtonSizes={render:args=>(0,_jsxRuntime.jsx)(ButtonContainer,{children:defaultSizes.map((size=>(0,_jsxRuntime.jsx)(_Button.Button,{...args,text:size,size},size)))})},ButtonModes=exports.ButtonModes={render:args=>(0,_jsxRuntime.jsx)(ButtonContainer,{children:defaultModes.map((mode=>(0,_jsxRuntime.jsx)(_Button.Button,{...args,text:mode,mode},mode)))})},ButtonGroup=exports.ButtonGroup={render:args=>(0,_jsxRuntime.jsxs)(_Button.Button.Group,{children:[(0,_jsxRuntime.jsx)(_Button.Button,{...args,text:"First"}),(0,_jsxRuntime.jsx)(_Button.Button,{...args,text:"Second"}),(0,_jsxRuntime.jsx)(_Button.Button,{...args,text:"Third"})]})};Basic.parameters={...Basic.parameters,docs:{...null===(_Basic$parameters=Basic.parameters)||void 0===_Basic$parameters?void 0:_Basic$parameters.docs,source:{originalSource:"{}",...null===(_Basic$parameters2=Basic.parameters)||void 0===_Basic$parameters2||null===(_Basic$parameters2$do=_Basic$parameters2.docs)||void 0===_Basic$parameters2$do?void 0:_Basic$parameters2$do.source}}},WithCustomIcon.parameters={...WithCustomIcon.parameters,docs:{...null===(_WithCustomIcon$param=WithCustomIcon.parameters)||void 0===_WithCustomIcon$param?void 0:_WithCustomIcon$param.docs,source:{originalSource:"{\n  render: ({\n    text,\n    iconBefore,\n    iconAfter,\n    ...rest\n  }: ButtonProps) => <ButtonContainer>\n      <Button {...rest} text={text} iconBefore={iconBefore} iconAfter={iconAfter} />\n      <Button {...rest} text={text} iconBefore={iconBefore} />\n      <Button {...rest} text={text} iconAfter={iconAfter} />\n      <Button {...rest} text={text} />\n      <Button {...rest} iconBefore={iconBefore} />\n    </ButtonContainer>,\n  args: {\n    iconBefore: defaultIcon,\n    iconAfter: defaultIcon\n  }\n}",...null===(_WithCustomIcon$param2=WithCustomIcon.parameters)||void 0===_WithCustomIcon$param2||null===(_WithCustomIcon$param3=_WithCustomIcon$param2.docs)||void 0===_WithCustomIcon$param3?void 0:_WithCustomIcon$param3.source}}},ButtonLoading.parameters={...ButtonLoading.parameters,docs:{...null===(_ButtonLoading$parame=ButtonLoading.parameters)||void 0===_ButtonLoading$parame?void 0:_ButtonLoading$parame.docs,source:{originalSource:"{\n  render: ({\n    text,\n    iconBefore,\n    ...rest\n  }: ButtonProps) => <ButtonContainer>\n      <Button {...rest} text={text} />\n      <Button {...rest} iconBefore={iconBefore} />\n    </ButtonContainer>,\n  args: {\n    loading: true,\n    iconBefore: defaultIcon\n  }\n}",...null===(_ButtonLoading$parame2=ButtonLoading.parameters)||void 0===_ButtonLoading$parame2||null===(_ButtonLoading$parame3=_ButtonLoading$parame2.docs)||void 0===_ButtonLoading$parame3?void 0:_ButtonLoading$parame3.source}}},ButtonSizes.parameters={...ButtonSizes.parameters,docs:{...null===(_ButtonSizes$paramete=ButtonSizes.parameters)||void 0===_ButtonSizes$paramete?void 0:_ButtonSizes$paramete.docs,source:{originalSource:"{\n  render: (args: ButtonProps) => <ButtonContainer>\n      {defaultSizes.map(size => <Button key={size} {...args} text={size} size={(size as ButtonSize)} />)}\n    </ButtonContainer>\n}",...null===(_ButtonSizes$paramete2=ButtonSizes.parameters)||void 0===_ButtonSizes$paramete2||null===(_ButtonSizes$paramete3=_ButtonSizes$paramete2.docs)||void 0===_ButtonSizes$paramete3?void 0:_ButtonSizes$paramete3.source}}},ButtonModes.parameters={...ButtonModes.parameters,docs:{...null===(_ButtonModes$paramete=ButtonModes.parameters)||void 0===_ButtonModes$paramete?void 0:_ButtonModes$paramete.docs,source:{originalSource:"{\n  render: (args: ButtonProps) => <ButtonContainer>\n      {defaultModes.map(mode => <Button key={mode} {...args} text={mode} mode={mode} />)}\n    </ButtonContainer>\n}",...null===(_ButtonModes$paramete2=ButtonModes.parameters)||void 0===_ButtonModes$paramete2||null===(_ButtonModes$paramete3=_ButtonModes$paramete2.docs)||void 0===_ButtonModes$paramete3?void 0:_ButtonModes$paramete3.source}}},ButtonGroup.parameters={...ButtonGroup.parameters,docs:{...null===(_ButtonGroup$paramete=ButtonGroup.parameters)||void 0===_ButtonGroup$paramete?void 0:_ButtonGroup$paramete.docs,source:{originalSource:"{\n  render: (args: ButtonProps) => <Button.Group>\n      <Button {...args} text='First' />\n      <Button {...args} text='Second' />\n      <Button {...args} text='Third' />\n    </Button.Group>\n}",...null===(_ButtonGroup$paramete2=ButtonGroup.parameters)||void 0===_ButtonGroup$paramete2||null===(_ButtonGroup$paramete3=_ButtonGroup$paramete2.docs)||void 0===_ButtonGroup$paramete3?void 0:_ButtonGroup$paramete3.source}}};exports.__namedExportsOrder=["Basic","WithCustomIcon","ButtonLoading","ButtonSizes","ButtonModes","ButtonGroup"]},"./src/button/meta.json":module=>{module.exports=JSON.parse('{"dod":{"designTokens":true,"useThemedHook":true,"unitTests":true,"screenshotTests":false,"migration":true,"apiTable":true,"storybook":true,"figmaView":true},"component":"Button","description":"Компонент для отрисовки кнопок. В качестве основы используется AntdButton из библиотеки Antd. Моды primaryBlue, primaryBlack, invertedPrimary, invertedSecondary, invertedTertiary являются устаревшими","usage":"Элемент, при нажатии на который происходит какое-то действие","designLink":"https://www.figma.com/file/9hiN2DbkqbxbhR9EWRI1VK/B2B-Kit?node-id=1%3A747","figmaView":"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2F7TGvGlgGfTltMG1OBgLq8p%2F00-%255BB2B%255D-Hexa-UI-Kit%3Ftype%3Ddesign%26node-id%3D1063%253A4154%26mode%3Ddesign%26t%3DAq9sAgGeMSfebrzW-1"}')}}]);