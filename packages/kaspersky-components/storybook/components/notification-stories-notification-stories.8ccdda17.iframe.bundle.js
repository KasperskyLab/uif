"use strict";(self.webpackChunk_kaspersky_components=self.webpackChunk_kaspersky_components||[]).push([[5683],{"./helpers/hocs/MetaComponent/MetaDod.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MetaDod=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_styledComponents=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js")),_blocks=__webpack_require__("./node_modules/@storybook/blocks/dist/index.js"),_types=__webpack_require__("./helpers/hocs/MetaComponent/types.ts"),_tag=__webpack_require__("./src/tag/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const StyledTableContainer=_styledComponents.default.div.withConfig({displayName:"MetaDod__StyledTableContainer",componentId:"sc-1gxe50k-0"})(["&&&&&{width:300px;td,th,tr{background:transparent;border:none;}}"]),MetaDod=_ref=>{let{list}=_ref;const metaDodKeys=(0,_react.useMemo)((()=>Object.keys(_types.metaDod)),[]);return(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_blocks.Subtitle,{children:`Definition of done ${(new Date).getDate()}.${(new Date).getMonth()}.${(new Date).getFullYear()}`}),(0,_jsxRuntime.jsx)(StyledTableContainer,{children:(0,_jsxRuntime.jsxs)("table",{children:[(0,_jsxRuntime.jsx)("thead",{children:(0,_jsxRuntime.jsxs)("tr",{children:[(0,_jsxRuntime.jsx)("td",{children:(0,_jsxRuntime.jsx)("b",{children:"Point"})}),(0,_jsxRuntime.jsx)("td",{children:(0,_jsxRuntime.jsx)("b",{children:"Status"})})]})}),(0,_jsxRuntime.jsx)("tbody",{children:metaDodKeys.map((key=>(0,_jsxRuntime.jsxs)("tr",{children:[(0,_jsxRuntime.jsx)("td",{children:_types.metaDod[key]}),(0,_jsxRuntime.jsx)("td",{children:(0,_jsxRuntime.jsx)(_tag.Tag,{mode:list[key]?"grass":"red",children:list[key]?"ready":"need"})})]},key)))})]})})]})};exports.MetaDod=MetaDod;try{MetaDod.displayName="MetaDod",MetaDod.__docgenInfo={description:"",displayName:"MetaDod",props:{list:{defaultValue:null,description:"",name:"list",required:!0,type:{name:'Partial<Record<"storybook" | "designTokens" | "useThemedHook" | "unitTests" | "screenshotTests" | "migration" | "apiTable" | "figmaView", boolean>>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["helpers/hocs/MetaComponent/MetaDod.tsx#MetaDod"]={docgenInfo:MetaDod.__docgenInfo,name:"MetaDod",path:"helpers/hocs/MetaComponent/MetaDod.tsx#MetaDod"})}catch(__react_docgen_typescript_loader_error){}},"./helpers/hocs/MetaComponent/types.ts":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.metaDod=void 0;exports.metaDod={designTokens:"Дизайн токены",useThemedHook:"Использование theme hook",unitTests:"Unit tests",screenshotTests:"Screenshot tests",migration:"Описание миграции",apiTable:"api table",storybook:"storybook",figmaView:"Отображение в Фигме"}},"./helpers/hocs/MetaComponent/withMeta.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.withMeta=function withMeta(list,Component){return props=>(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_blocks.Title,{children:list.component}),(0,_jsxRuntime.jsx)(_MetaDod.MetaDod,{list:list.dod}),(0,_jsxRuntime.jsx)(_blocks.Subtitle,{children:"Описание"}),list.description?(0,_jsxRuntime.jsx)(_blocks.Markdown,{children:list.description}):"-",(0,_jsxRuntime.jsx)(_blocks.Subtitle,{children:"Использование"}),(0,_jsxRuntime.jsx)(_blocks.Markdown,{children:list.usage}),(0,_jsxRuntime.jsx)(_blocks.Markdown,{children:`[Дизайн](${list.designLink})`}),Component&&(0,_jsxRuntime.jsx)(Component,{...props}),(0,_jsxRuntime.jsx)(_blocks.Primary,{}),(0,_jsxRuntime.jsx)(_blocks.ArgsTable,{story:_blocks.PRIMARY_STORY}),(0,_jsxRuntime.jsx)(_blocks.Stories,{title:"Variants of View"})]})};(function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}})(__webpack_require__("./node_modules/react/index.js"));var _MetaDod=__webpack_require__("./helpers/hocs/MetaComponent/MetaDod.tsx"),_blocks=__webpack_require__("./node_modules/@storybook/blocks/dist/index.js"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js")},"./src/notification/stories/notification.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.WithActionButton=exports.Default=void 0;var _Default$parameters,_Default$parameters2,_Default$parameters2$,_WithActionButton$par,_WithActionButton$par2,_WithActionButton$par3,_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_badges=__webpack_require__("./.storybook/badges.ts"),_button=__webpack_require__("./src/button/index.ts"),_Notification=__webpack_require__("./src/notification/Notification.tsx"),_notification=__webpack_require__("./src/notification/index.ts"),_meta=_interopRequireDefault(__webpack_require__("./src/notification/__meta__/meta.json")),_storybookHelpers=__webpack_require__("./helpers/storybookHelpers.ts"),_withMeta=__webpack_require__("./helpers/hocs/MetaComponent/withMeta.tsx"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const meta={title:"Molecules/Notification",component:_Notification.Notification,argTypes:{...(0,_storybookHelpers.sbHideControls)(["theme","delay"])},args:{mode:"success",duration:1e3,description:"Body text",testId:"notification-test-id",klId:"notification-kl-id"},parameters:{storySource:{source:"import React from 'react';\nimport { badges } from '@sb/badges';\nimport { Button } from '@src/button';\nimport { NotificationContainerProps } from '../types';\nimport { Notification } from '../Notification';\nimport { openNotification, notificationDestroy } from '@src/notification';\nimport { Meta, StoryObj } from '@storybook/react';\nimport MetaData from '../__meta__/meta.json';\nimport { sbHideControls } from '@helpers/storybookHelpers';\nimport { withMeta } from '@helpers/hocs/MetaComponent/withMeta';\nconst meta: Meta<NotificationContainerProps> = {\n  title: 'Molecules/Notification',\n  component: Notification,\n  argTypes: {\n    ...sbHideControls(['theme', 'delay'])\n  },\n  args: {\n    mode: 'success',\n    duration: 1000,\n    description: 'Body text',\n    testId: 'notification-test-id',\n    klId: 'notification-kl-id'\n  },\n  parameters: {\n    badges: [badges.stable, badges.needsDesignReview],\n    docs: {\n      page: withMeta(MetaData)\n    }\n  }\n};\nexport default meta;\ntype Story = StoryObj<NotificationContainerProps>;\nexport const Default: Story = {\n  render: ({\n    id,\n    componentId,\n    noIcon,\n    testId,\n    theme,\n    ...args\n  }: NotificationContainerProps) => {\n    React.useEffect(() => {\n      return () => {\n        notificationDestroy();\n      };\n    }, []);\n    return <>\n        <Notification id={id} componentId={componentId} noIcon={noIcon} testId={testId} theme={theme} />\n        <Button onClick={() => openNotification({\n        id,\n        componentId,\n        ...args\n      })}>\n          Open the notification box\n        </Button>\n      </>;\n  },\n  args: {\n    id: 'notification1'\n  }\n};\nexport const WithActionButton: Story = {\n  render: ({\n    id,\n    componentId,\n    noIcon,\n    testId,\n    theme,\n    ...args\n  }: NotificationContainerProps) => {\n    React.useEffect(() => {\n      return () => {\n        notificationDestroy();\n      };\n    }, []);\n    return <>\n        <Notification id={id} componentId={componentId} noIcon={noIcon} testId={testId} theme={theme} />\n        <Button onClick={() => openNotification({\n        id,\n        componentId,\n        ...args\n      })}>\n          Open the notification box\n        </Button>\n        <Button onClick={() => openNotification.error('Some error')}>\n          Open the notification box by api with text\n        </Button>\n        <Button onClick={() => openNotification.error({\n        id,\n        componentId,\n        ...args\n      })}>\n          Open the notification box by api with args\n        </Button>\n      </>;\n  },\n  args: {\n    id: 'notification2',\n    actionButton: {\n      title: 'Go To',\n      onClick: console.log\n    }\n  }\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: ({\\n    id,\\n    componentId,\\n    noIcon,\\n    testId,\\n    theme,\\n    ...args\\n  }: NotificationContainerProps) => {\\n    React.useEffect(() => {\\n      return () => {\\n        notificationDestroy();\\n      };\\n    }, []);\\n    return <>\\n        <Notification id={id} componentId={componentId} noIcon={noIcon} testId={testId} theme={theme} />\\n        <Button onClick={() => openNotification({\\n        id,\\n        componentId,\\n        ...args\\n      })}>\\n          Open the notification box\\n        </Button>\\n      </>;\\n  },\\n  args: {\\n    id: 'notification1'\\n  }\\n}\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nWithActionButton.parameters = {\n  ...WithActionButton.parameters,\n  docs: {\n    ...WithActionButton.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: ({\\n    id,\\n    componentId,\\n    noIcon,\\n    testId,\\n    theme,\\n    ...args\\n  }: NotificationContainerProps) => {\\n    React.useEffect(() => {\\n      return () => {\\n        notificationDestroy();\\n      };\\n    }, []);\\n    return <>\\n        <Notification id={id} componentId={componentId} noIcon={noIcon} testId={testId} theme={theme} />\\n        <Button onClick={() => openNotification({\\n        id,\\n        componentId,\\n        ...args\\n      })}>\\n          Open the notification box\\n        </Button>\\n        <Button onClick={() => openNotification.error('Some error')}>\\n          Open the notification box by api with text\\n        </Button>\\n        <Button onClick={() => openNotification.error({\\n        id,\\n        componentId,\\n        ...args\\n      })}>\\n          Open the notification box by api with args\\n        </Button>\\n      </>;\\n  },\\n  args: {\\n    id: 'notification2',\\n    actionButton: {\\n      title: 'Go To',\\n      onClick: console.log\\n    }\\n  }\\n}\",\n      ...WithActionButton.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{default:{startLoc:{col:30,line:33},endLoc:{col:1,line:61},startBody:{col:30,line:33},endBody:{col:1,line:61}},"with-action-button":{startLoc:{col:39,line:62},endLoc:{col:1,line:104},startBody:{col:39,line:62},endBody:{col:1,line:104}}}},badges:[_badges.badges.stable,_badges.badges.needsDesignReview],docs:{page:(0,_withMeta.withMeta)(_meta.default)}}};exports.default=meta;const Default=exports.Default={render:_ref=>{let{id,componentId,noIcon,testId,theme,...args}=_ref;return _react.default.useEffect((()=>()=>{(0,_notification.notificationDestroy)()}),[]),(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_Notification.Notification,{id,componentId,noIcon,testId,theme}),(0,_jsxRuntime.jsx)(_button.Button,{onClick:()=>(0,_notification.openNotification)({id,componentId,...args}),children:"Open the notification box"})]})},args:{id:"notification1"}},WithActionButton=exports.WithActionButton={render:_ref2=>{let{id,componentId,noIcon,testId,theme,...args}=_ref2;return _react.default.useEffect((()=>()=>{(0,_notification.notificationDestroy)()}),[]),(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_Notification.Notification,{id,componentId,noIcon,testId,theme}),(0,_jsxRuntime.jsx)(_button.Button,{onClick:()=>(0,_notification.openNotification)({id,componentId,...args}),children:"Open the notification box"}),(0,_jsxRuntime.jsx)(_button.Button,{onClick:()=>_notification.openNotification.error("Some error"),children:"Open the notification box by api with text"}),(0,_jsxRuntime.jsx)(_button.Button,{onClick:()=>_notification.openNotification.error({id,componentId,...args}),children:"Open the notification box by api with args"})]})},args:{id:"notification2",actionButton:{title:"Go To",onClick:console.log}}};Default.parameters={...Default.parameters,docs:{...null===(_Default$parameters=Default.parameters)||void 0===_Default$parameters?void 0:_Default$parameters.docs,source:{originalSource:"{\n  render: ({\n    id,\n    componentId,\n    noIcon,\n    testId,\n    theme,\n    ...args\n  }: NotificationContainerProps) => {\n    React.useEffect(() => {\n      return () => {\n        notificationDestroy();\n      };\n    }, []);\n    return <>\n        <Notification id={id} componentId={componentId} noIcon={noIcon} testId={testId} theme={theme} />\n        <Button onClick={() => openNotification({\n        id,\n        componentId,\n        ...args\n      })}>\n          Open the notification box\n        </Button>\n      </>;\n  },\n  args: {\n    id: 'notification1'\n  }\n}",...null===(_Default$parameters2=Default.parameters)||void 0===_Default$parameters2||null===(_Default$parameters2$=_Default$parameters2.docs)||void 0===_Default$parameters2$?void 0:_Default$parameters2$.source}}},WithActionButton.parameters={...WithActionButton.parameters,docs:{...null===(_WithActionButton$par=WithActionButton.parameters)||void 0===_WithActionButton$par?void 0:_WithActionButton$par.docs,source:{originalSource:"{\n  render: ({\n    id,\n    componentId,\n    noIcon,\n    testId,\n    theme,\n    ...args\n  }: NotificationContainerProps) => {\n    React.useEffect(() => {\n      return () => {\n        notificationDestroy();\n      };\n    }, []);\n    return <>\n        <Notification id={id} componentId={componentId} noIcon={noIcon} testId={testId} theme={theme} />\n        <Button onClick={() => openNotification({\n        id,\n        componentId,\n        ...args\n      })}>\n          Open the notification box\n        </Button>\n        <Button onClick={() => openNotification.error('Some error')}>\n          Open the notification box by api with text\n        </Button>\n        <Button onClick={() => openNotification.error({\n        id,\n        componentId,\n        ...args\n      })}>\n          Open the notification box by api with args\n        </Button>\n      </>;\n  },\n  args: {\n    id: 'notification2',\n    actionButton: {\n      title: 'Go To',\n      onClick: console.log\n    }\n  }\n}",...null===(_WithActionButton$par2=WithActionButton.parameters)||void 0===_WithActionButton$par2||null===(_WithActionButton$par3=_WithActionButton$par2.docs)||void 0===_WithActionButton$par3?void 0:_WithActionButton$par3.source}}};exports.__namedExportsOrder=["Default","WithActionButton"]},"./src/notification/__meta__/meta.json":module=>{module.exports=JSON.parse('{"dod":{"designTokens":true,"useThemedHook":true,"unitTests":true,"screenshotTests":false,"migration":true,"apiTable":true,"storybook":true,"designLink":true,"figmaView":true},"component":"Notification","description":"Компонент Notification иѝпользуетѝѝ длѝ отображениѝ временных глобальных уведомлений. Накладываетѝѝ поверх вѝей ѝтраницы.","usage":"Чтобы показать уведомление необходимо вызвать функцию `openNotification`. Так же необходимо отрендерить компонент `Notification`. В dom ноду ѝтого компонента будут ѝкладыватьѝѝ вѝе уведомлениѝ.","designLink":"https://www.figma.com/file/9hiN2DbkqbxbhR9EWRI1VK/B2B-UI-KIT?node-id=1063%3A4593","figmaView":"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2F9hiN2DbkqbxbhR9EWRI1VK%2F01-%255BB2B%255D-Hexa-UI-Components%3Ftype%3Ddesign%26node-id%3D43876%253A184415%26mode%3Ddev"}')}}]);