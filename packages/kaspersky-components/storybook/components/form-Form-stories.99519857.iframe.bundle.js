"use strict";(self.webpackChunk_kaspersky_components=self.webpackChunk_kaspersky_components||[]).push([[7235],{"./src/form/Form.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.BasicForm=void 0;_interopRequireDefault(__webpack_require__("./node_modules/react/index.js"));var _BasicForm$parameters,_BasicForm$parameters2,_BasicForm$parameters3,_styledComponents=_interopRequireDefault(__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js")),_button=__webpack_require__("./src/button/index.ts"),_input=__webpack_require__("./src/input/index.ts"),_checkbox=__webpack_require__("./src/checkbox/index.ts"),_toggle=__webpack_require__("./src/toggle/index.ts"),_radio=__webpack_require__("./src/radio/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default={parameters:{storySource:{source:"import React from 'react';\nimport styled from 'styled-components';\nimport { Meta, StoryObj } from '@storybook/react';\nimport { Button } from '@src/button';\nimport { Textbox } from '@src/input';\nimport { Checkbox } from '@src/checkbox';\nimport { Toggle } from '@src/toggle';\nimport { Radio } from '@src/radio';\nconst meta: Meta = {\n  title: 'Organisms/Form'\n};\nexport default meta;\nexport const BasicForm: StoryObj = {\n  render: args => <form>\n      <FormRow>\n        <div>Login</div>\n        <Textbox />\n      </FormRow>\n      <FormRow>\n        <div>Password</div>\n        <Textbox type={'password'} />\n      </FormRow>\n      <FormRow>\n        <Checkbox>Check me</Checkbox>\n      </FormRow>\n      <FormRow>\n        <Toggle>Toggle me</Toggle>\n      </FormRow>\n      <FormRow>\n        <Radio {...args} options={[{\n        label: 'First',\n        value: '1'\n      }, {\n        label: 'Second',\n        value: '2'\n      }]} name=\"first\" data-component-id=\"test-id\" />\n      </FormRow>\n      <FormRow>\n        <ButtonSubmit text='Ok' mode='primaryBlue' {...args} />\n        <ButtonSubmit text='Cancel' mode='secondary' {...args} />\n      </FormRow>\n    </form>\n};\nconst FormRow = styled.div`\n  margin: 10px;\n  max-width: 400px;\n`;\nconst ButtonSubmit = styled(Button)`\n  &.ant-btn {\n    margin-right: 10px;\n    min-width: 50px;\n  }\n`;\nBasicForm.parameters = {\n  ...BasicForm.parameters,\n  docs: {\n    ...BasicForm.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: args => <form>\\n      <FormRow>\\n        <div>Login</div>\\n        <Textbox />\\n      </FormRow>\\n      <FormRow>\\n        <div>Password</div>\\n        <Textbox type={'password'} />\\n      </FormRow>\\n      <FormRow>\\n        <Checkbox>Check me</Checkbox>\\n      </FormRow>\\n      <FormRow>\\n        <Toggle>Toggle me</Toggle>\\n      </FormRow>\\n      <FormRow>\\n        <Radio {...args} options={[{\\n        label: 'First',\\n        value: '1'\\n      }, {\\n        label: 'Second',\\n        value: '2'\\n      }]} name=\\\"first\\\" data-component-id=\\\"test-id\\\" />\\n      </FormRow>\\n      <FormRow>\\n        <ButtonSubmit text='Ok' mode='primaryBlue' {...args} />\\n        <ButtonSubmit text='Cancel' mode='secondary' {...args} />\\n      </FormRow>\\n    </form>\\n}\",\n      ...BasicForm.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{"basic-form":{startLoc:{col:35,line:13},endLoc:{col:1,line:43},startBody:{col:35,line:13},endBody:{col:1,line:43}}}}},title:"Organisms/Form"};const BasicForm=exports.BasicForm={render:args=>(0,_jsxRuntime.jsxs)("form",{children:[(0,_jsxRuntime.jsxs)(FormRow,{children:[(0,_jsxRuntime.jsx)("div",{children:"Login"}),(0,_jsxRuntime.jsx)(_input.Textbox,{})]}),(0,_jsxRuntime.jsxs)(FormRow,{children:[(0,_jsxRuntime.jsx)("div",{children:"Password"}),(0,_jsxRuntime.jsx)(_input.Textbox,{type:"password"})]}),(0,_jsxRuntime.jsx)(FormRow,{children:(0,_jsxRuntime.jsx)(_checkbox.Checkbox,{children:"Check me"})}),(0,_jsxRuntime.jsx)(FormRow,{children:(0,_jsxRuntime.jsx)(_toggle.Toggle,{children:"Toggle me"})}),(0,_jsxRuntime.jsx)(FormRow,{children:(0,_jsxRuntime.jsx)(_radio.Radio,{...args,options:[{label:"First",value:"1"},{label:"Second",value:"2"}],name:"first","data-component-id":"test-id"})}),(0,_jsxRuntime.jsxs)(FormRow,{children:[(0,_jsxRuntime.jsx)(ButtonSubmit,{text:"Ok",mode:"primaryBlue",...args}),(0,_jsxRuntime.jsx)(ButtonSubmit,{text:"Cancel",mode:"secondary",...args})]})]})},FormRow=_styledComponents.default.div.withConfig({displayName:"Formstories__FormRow",componentId:"sc-ovxffx-0"})(["margin:10px;max-width:400px;"]),ButtonSubmit=(0,_styledComponents.default)(_button.Button).withConfig({displayName:"Formstories__ButtonSubmit",componentId:"sc-ovxffx-1"})(["&.ant-btn{margin-right:10px;min-width:50px;}"]);BasicForm.parameters={...BasicForm.parameters,docs:{...null===(_BasicForm$parameters=BasicForm.parameters)||void 0===_BasicForm$parameters?void 0:_BasicForm$parameters.docs,source:{originalSource:"{\n  render: args => <form>\n      <FormRow>\n        <div>Login</div>\n        <Textbox />\n      </FormRow>\n      <FormRow>\n        <div>Password</div>\n        <Textbox type={'password'} />\n      </FormRow>\n      <FormRow>\n        <Checkbox>Check me</Checkbox>\n      </FormRow>\n      <FormRow>\n        <Toggle>Toggle me</Toggle>\n      </FormRow>\n      <FormRow>\n        <Radio {...args} options={[{\n        label: 'First',\n        value: '1'\n      }, {\n        label: 'Second',\n        value: '2'\n      }]} name=\"first\" data-component-id=\"test-id\" />\n      </FormRow>\n      <FormRow>\n        <ButtonSubmit text='Ok' mode='primaryBlue' {...args} />\n        <ButtonSubmit text='Cancel' mode='secondary' {...args} />\n      </FormRow>\n    </form>\n}",...null===(_BasicForm$parameters2=BasicForm.parameters)||void 0===_BasicForm$parameters2||null===(_BasicForm$parameters3=_BasicForm$parameters2.docs)||void 0===_BasicForm$parameters3?void 0:_BasicForm$parameters3.source}}};exports.__namedExportsOrder=["BasicForm"]}}]);