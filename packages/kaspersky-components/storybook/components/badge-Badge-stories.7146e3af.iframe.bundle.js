"use strict";(self.webpackChunk_kaspersky_components=self.webpackChunk_kaspersky_components||[]).push([[3478],{"./helpers/hocs/MetaComponent/MetaDod.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MetaDod=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_styledComponents=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js")),_blocks=__webpack_require__("./node_modules/@storybook/blocks/dist/index.js"),_types=__webpack_require__("./helpers/hocs/MetaComponent/types.ts"),_tag=__webpack_require__("./src/tag/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const StyledTableContainer=_styledComponents.default.div.withConfig({displayName:"MetaDod__StyledTableContainer",componentId:"sc-1gxe50k-0"})(["&&&&&{width:300px;td,th,tr{background:transparent;border:none;}}"]),MetaDod=_ref=>{let{list}=_ref;const metaDodKeys=(0,_react.useMemo)((()=>Object.keys(_types.metaDod)),[]);return(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_blocks.Subtitle,{children:`Definition of done ${(new Date).getDate()}.${(new Date).getMonth()}.${(new Date).getFullYear()}`}),(0,_jsxRuntime.jsx)(StyledTableContainer,{children:(0,_jsxRuntime.jsxs)("table",{children:[(0,_jsxRuntime.jsx)("thead",{children:(0,_jsxRuntime.jsxs)("tr",{children:[(0,_jsxRuntime.jsx)("td",{children:(0,_jsxRuntime.jsx)("b",{children:"Point"})}),(0,_jsxRuntime.jsx)("td",{children:(0,_jsxRuntime.jsx)("b",{children:"Status"})})]})}),(0,_jsxRuntime.jsx)("tbody",{children:metaDodKeys.map((key=>(0,_jsxRuntime.jsxs)("tr",{children:[(0,_jsxRuntime.jsx)("td",{children:_types.metaDod[key]}),(0,_jsxRuntime.jsx)("td",{children:(0,_jsxRuntime.jsx)(_tag.Tag,{mode:list[key]?"grass":"red",children:list[key]?"ready":"need"})})]},key)))})]})})]})};exports.MetaDod=MetaDod;try{MetaDod.displayName="MetaDod",MetaDod.__docgenInfo={description:"",displayName:"MetaDod",props:{list:{defaultValue:null,description:"",name:"list",required:!0,type:{name:'Partial<Record<"storybook" | "designTokens" | "useThemedHook" | "unitTests" | "screenshotTests" | "migration" | "apiTable" | "figmaView", boolean>>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["helpers/hocs/MetaComponent/MetaDod.tsx#MetaDod"]={docgenInfo:MetaDod.__docgenInfo,name:"MetaDod",path:"helpers/hocs/MetaComponent/MetaDod.tsx#MetaDod"})}catch(__react_docgen_typescript_loader_error){}},"./helpers/hocs/MetaComponent/types.ts":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.metaDod=void 0;exports.metaDod={designTokens:"Дизайн токены",useThemedHook:"Использование theme hook",unitTests:"Unit tests",screenshotTests:"Screenshot tests",migration:"Описание миграции",apiTable:"api table",storybook:"storybook",figmaView:"Отображение в Фигме"}},"./helpers/hocs/MetaComponent/withMeta.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.withMeta=function withMeta(list,Component){return props=>(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_blocks.Title,{children:list.component}),(0,_jsxRuntime.jsx)(_MetaDod.MetaDod,{list:list.dod}),(0,_jsxRuntime.jsx)(_blocks.Subtitle,{children:"Описание"}),list.description?(0,_jsxRuntime.jsx)(_blocks.Markdown,{children:list.description}):"-",(0,_jsxRuntime.jsx)(_blocks.Subtitle,{children:"Использование"}),(0,_jsxRuntime.jsx)(_blocks.Markdown,{children:list.usage}),(0,_jsxRuntime.jsx)(_blocks.Markdown,{children:`[Дизайн](${list.designLink})`}),Component&&(0,_jsxRuntime.jsx)(Component,{...props}),(0,_jsxRuntime.jsx)(_blocks.Primary,{}),(0,_jsxRuntime.jsx)(_blocks.ArgsTable,{story:_blocks.PRIMARY_STORY}),(0,_jsxRuntime.jsx)(_blocks.Stories,{title:"Variants of View"})]})};(function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}})(__webpack_require__("./node_modules/react/index.js"));var _MetaDod=__webpack_require__("./helpers/hocs/MetaComponent/MetaDod.tsx"),_blocks=__webpack_require__("./node_modules/@storybook/blocks/dist/index.js"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js")},"./src/badge/Badge.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.WithText=exports.WithOverflow=exports.Basic=exports.BadgeModes=void 0;var _Basic$parameters,_Basic$parameters2,_Basic$parameters2$do,_WithText$parameters,_WithText$parameters2,_WithText$parameters3,_WithOverflow$paramet,_WithOverflow$paramet2,_WithOverflow$paramet3,_BadgeModes$parameter,_BadgeModes$parameter2,_BadgeModes$parameter3,_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_badges=__webpack_require__("./.storybook/badges.ts"),_storybookHelpers=__webpack_require__("./helpers/storybookHelpers.ts"),_withMeta=__webpack_require__("./helpers/hocs/MetaComponent/withMeta.tsx"),_meta=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/badge/__meta__/meta.json")),_Badge=__webpack_require__("./src/badge/Badge.tsx"),_space=__webpack_require__("./src/space/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const meta={title:"Atoms/Badge",component:_Badge.Badge,argTypes:{...(0,_storybookHelpers.sbHideControls)(["theme"])},args:{count:1,testId:"badge-test-id",klId:"badge-kl-id"},parameters:{storySource:{source:"import React from 'react';\nimport { StoryObj, Meta } from '@storybook/react';\nimport { badges } from '@sb/badges';\nimport { BadgeMode, BadgeProps } from './types';\nimport { sbHideControls } from '@helpers/storybookHelpers';\nimport { withMeta } from '@helpers/hocs/MetaComponent/withMeta';\nimport MetaData from './__meta__/meta.json';\nimport { Badge } from './Badge';\nimport { Space } from '@src/space';\nconst meta: Meta<BadgeProps> = {\n  title: 'Atoms/Badge',\n  component: Badge,\n  argTypes: {\n    ...sbHideControls(['theme'])\n  },\n  args: {\n    count: 1,\n    testId: 'badge-test-id',\n    klId: 'badge-kl-id'\n  },\n  parameters: {\n    badges: [badges.stable, badges.needsDesignReview],\n    docs: {\n      page: withMeta(MetaData)\n    },\n    design: MetaData.figmaView\n  }\n};\nexport default meta;\ntype Story = StoryObj<BadgeProps>;\nexport const Basic: Story = {};\nexport const WithText: Story = {\n  args: {\n    text: 'Badge'\n  }\n};\nexport const WithOverflow: Story = {\n  args: {\n    overflowCount: 9\n  }\n};\nexport const BadgeModes = {\n  render: (args: BadgeProps) => {\n    const modes: BadgeMode[] = ['neutral', 'accent', 'positive', 'medium', 'high', 'critical', 'new', 'update', 'in-progress', 'resolved', 'in-incident', 'low', 'info'];\n    return <Space size={12}>\n        {modes.map(mode => <Badge {...args} key={mode} text={mode.charAt(0).toUpperCase() + mode.slice(1)} mode={mode} />)}\n      </Space>;\n  }\n};\nBasic.parameters = {\n  ...Basic.parameters,\n  docs: {\n    ...Basic.parameters?.docs,\n    source: {\n      originalSource: \"{}\",\n      ...Basic.parameters?.docs?.source\n    }\n  }\n};\nWithText.parameters = {\n  ...WithText.parameters,\n  docs: {\n    ...WithText.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    text: 'Badge'\\n  }\\n}\",\n      ...WithText.parameters?.docs?.source\n    }\n  }\n};\nWithOverflow.parameters = {\n  ...WithOverflow.parameters,\n  docs: {\n    ...WithOverflow.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    overflowCount: 9\\n  }\\n}\",\n      ...WithOverflow.parameters?.docs?.source\n    }\n  }\n};\nBadgeModes.parameters = {\n  ...BadgeModes.parameters,\n  docs: {\n    ...BadgeModes.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: (args: BadgeProps) => {\\n    const modes: BadgeMode[] = ['neutral', 'accent', 'positive', 'medium', 'high', 'critical', 'new', 'update', 'in-progress', 'resolved', 'in-incident', 'low', 'info'];\\n    return <Space size={12}>\\n        {modes.map(mode => <Badge {...args} key={mode} text={mode.charAt(0).toUpperCase() + mode.slice(1)} mode={mode} />)}\\n      </Space>;\\n  }\\n}\",\n      ...BadgeModes.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{basic:{startLoc:{col:28,line:31},endLoc:{col:30,line:31},startBody:{col:28,line:31},endBody:{col:30,line:31}},"with-text":{startLoc:{col:31,line:32},endLoc:{col:1,line:36},startBody:{col:31,line:32},endBody:{col:1,line:36}},"with-overflow":{startLoc:{col:35,line:37},endLoc:{col:1,line:41},startBody:{col:35,line:37},endBody:{col:1,line:41}},"badge-modes":{startLoc:{col:26,line:42},endLoc:{col:1,line:49},startBody:{col:26,line:42},endBody:{col:1,line:49}}}},badges:[_badges.badges.stable,_badges.badges.needsDesignReview],docs:{page:(0,_withMeta.withMeta)(_meta.default)},design:_meta.default.figmaView}};exports.default=meta;const Basic=exports.Basic={},WithText=exports.WithText={args:{text:"Badge"}},WithOverflow=exports.WithOverflow={args:{overflowCount:9}},BadgeModes=exports.BadgeModes={render:args=>(0,_jsxRuntime.jsx)(_space.Space,{size:12,children:["neutral","accent","positive","medium","high","critical","new","update","in-progress","resolved","in-incident","low","info"].map((mode=>(0,_react.createElement)(_Badge.Badge,{...args,key:mode,text:mode.charAt(0).toUpperCase()+mode.slice(1),mode})))})};Basic.parameters={...Basic.parameters,docs:{...null===(_Basic$parameters=Basic.parameters)||void 0===_Basic$parameters?void 0:_Basic$parameters.docs,source:{originalSource:"{}",...null===(_Basic$parameters2=Basic.parameters)||void 0===_Basic$parameters2||null===(_Basic$parameters2$do=_Basic$parameters2.docs)||void 0===_Basic$parameters2$do?void 0:_Basic$parameters2$do.source}}},WithText.parameters={...WithText.parameters,docs:{...null===(_WithText$parameters=WithText.parameters)||void 0===_WithText$parameters?void 0:_WithText$parameters.docs,source:{originalSource:"{\n  args: {\n    text: 'Badge'\n  }\n}",...null===(_WithText$parameters2=WithText.parameters)||void 0===_WithText$parameters2||null===(_WithText$parameters3=_WithText$parameters2.docs)||void 0===_WithText$parameters3?void 0:_WithText$parameters3.source}}},WithOverflow.parameters={...WithOverflow.parameters,docs:{...null===(_WithOverflow$paramet=WithOverflow.parameters)||void 0===_WithOverflow$paramet?void 0:_WithOverflow$paramet.docs,source:{originalSource:"{\n  args: {\n    overflowCount: 9\n  }\n}",...null===(_WithOverflow$paramet2=WithOverflow.parameters)||void 0===_WithOverflow$paramet2||null===(_WithOverflow$paramet3=_WithOverflow$paramet2.docs)||void 0===_WithOverflow$paramet3?void 0:_WithOverflow$paramet3.source}}},BadgeModes.parameters={...BadgeModes.parameters,docs:{...null===(_BadgeModes$parameter=BadgeModes.parameters)||void 0===_BadgeModes$parameter?void 0:_BadgeModes$parameter.docs,source:{originalSource:"{\n  render: (args: BadgeProps) => {\n    const modes: BadgeMode[] = ['neutral', 'accent', 'positive', 'medium', 'high', 'critical', 'new', 'update', 'in-progress', 'resolved', 'in-incident', 'low', 'info'];\n    return <Space size={12}>\n        {modes.map(mode => <Badge {...args} key={mode} text={mode.charAt(0).toUpperCase() + mode.slice(1)} mode={mode} />)}\n      </Space>;\n  }\n}",...null===(_BadgeModes$parameter2=BadgeModes.parameters)||void 0===_BadgeModes$parameter2||null===(_BadgeModes$parameter3=_BadgeModes$parameter2.docs)||void 0===_BadgeModes$parameter3?void 0:_BadgeModes$parameter3.source}}};exports.__namedExportsOrder=["Basic","WithText","WithOverflow","BadgeModes"]},"./src/badge/__meta__/meta.json":module=>{module.exports=JSON.parse('{"dod":{"designTokens":true,"useThemedHook":true,"unitTests":true,"screenshotTests":false,"migration":true,"apiTable":true,"storybook":true,"figmaView":true},"component":"Badge","description":"Компонент для отрисовки числового значения или состояния UI-элементов. В качестве основы используется AntdBadge из библиотеки Antd.","usage":"Вывод числового значения или состояния UI-элементов","designLink":"https://www.figma.com/file/9hiN2DbkqbxbhR9EWRI1VK/B2B-Kit?node-id=1683%3A10717","figmaView":"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2F7TGvGlgGfTltMG1OBgLq8p%2F00-%255BB2B%255D-Hexa-UI-Kit%3Ftype%3Ddesign%26node-id%3D1133%253A10682%26mode%3Ddev"}')}}]);