"use strict";(self.webpackChunk_kaspersky_components=self.webpackChunk_kaspersky_components||[]).push([[9263],{"./helpers/hocs/MetaComponent/MetaDod.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MetaDod=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_styledComponents=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js")),_blocks=__webpack_require__("./node_modules/@storybook/blocks/dist/index.js"),_types=__webpack_require__("./helpers/hocs/MetaComponent/types.ts"),_tag=__webpack_require__("./src/tag/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const StyledTableContainer=_styledComponents.default.div.withConfig({displayName:"MetaDod__StyledTableContainer",componentId:"sc-1gxe50k-0"})(["&&&&&{width:300px;td,th,tr{background:transparent;border:none;}}"]),MetaDod=_ref=>{let{list}=_ref;const metaDodKeys=(0,_react.useMemo)((()=>Object.keys(_types.metaDod)),[]);return(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_blocks.Subtitle,{children:`Definition of done ${(new Date).getDate()}.${(new Date).getMonth()}.${(new Date).getFullYear()}`}),(0,_jsxRuntime.jsx)(StyledTableContainer,{children:(0,_jsxRuntime.jsxs)("table",{children:[(0,_jsxRuntime.jsx)("thead",{children:(0,_jsxRuntime.jsxs)("tr",{children:[(0,_jsxRuntime.jsx)("td",{children:(0,_jsxRuntime.jsx)("b",{children:"Point"})}),(0,_jsxRuntime.jsx)("td",{children:(0,_jsxRuntime.jsx)("b",{children:"Status"})})]})}),(0,_jsxRuntime.jsx)("tbody",{children:metaDodKeys.map((key=>(0,_jsxRuntime.jsxs)("tr",{children:[(0,_jsxRuntime.jsx)("td",{children:_types.metaDod[key]}),(0,_jsxRuntime.jsx)("td",{children:(0,_jsxRuntime.jsx)(_tag.Tag,{mode:list[key]?"grass":"red",children:list[key]?"ready":"need"})})]},key)))})]})})]})};exports.MetaDod=MetaDod;try{MetaDod.displayName="MetaDod",MetaDod.__docgenInfo={description:"",displayName:"MetaDod",props:{list:{defaultValue:null,description:"",name:"list",required:!0,type:{name:'Partial<Record<"storybook" | "designTokens" | "useThemedHook" | "unitTests" | "screenshotTests" | "migration" | "apiTable" | "figmaView", boolean>>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["helpers/hocs/MetaComponent/MetaDod.tsx#MetaDod"]={docgenInfo:MetaDod.__docgenInfo,name:"MetaDod",path:"helpers/hocs/MetaComponent/MetaDod.tsx#MetaDod"})}catch(__react_docgen_typescript_loader_error){}},"./helpers/hocs/MetaComponent/types.ts":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.metaDod=void 0;exports.metaDod={designTokens:"Дизайн токены",useThemedHook:"Использование theme hook",unitTests:"Unit tests",screenshotTests:"Screenshot tests",migration:"Описание миграции",apiTable:"api table",storybook:"storybook",figmaView:"Отображение в Фигме"}},"./helpers/hocs/MetaComponent/withMeta.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.withMeta=function withMeta(list,Component){return props=>(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_blocks.Title,{children:list.component}),(0,_jsxRuntime.jsx)(_MetaDod.MetaDod,{list:list.dod}),(0,_jsxRuntime.jsx)(_blocks.Subtitle,{children:"Описание"}),list.description?(0,_jsxRuntime.jsx)(_blocks.Markdown,{children:list.description}):"-",(0,_jsxRuntime.jsx)(_blocks.Subtitle,{children:"Использование"}),(0,_jsxRuntime.jsx)(_blocks.Markdown,{children:list.usage}),(0,_jsxRuntime.jsx)(_blocks.Markdown,{children:`[Дизайн](${list.designLink})`}),Component&&(0,_jsxRuntime.jsx)(Component,{...props}),(0,_jsxRuntime.jsx)(_blocks.Primary,{}),(0,_jsxRuntime.jsx)(_blocks.ArgsTable,{story:_blocks.PRIMARY_STORY}),(0,_jsxRuntime.jsx)(_blocks.Stories,{title:"Variants of View"})]})};(function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}})(__webpack_require__("./node_modules/react/index.js"));var _MetaDod=__webpack_require__("./helpers/hocs/MetaComponent/MetaDod.tsx"),_blocks=__webpack_require__("./node_modules/@storybook/blocks/dist/index.js"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js")},"./src/table/stories/TableLoading.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.PageLoading=exports.Loader=exports.LazyScrollLoadingError=exports.LazyScrollLoading=exports.CustomLoader=void 0;var _Loader$parameters,_Loader$parameters2,_Loader$parameters2$d,_CustomLoader$paramet,_CustomLoader$paramet2,_CustomLoader$paramet3,_PageLoading$paramete,_PageLoading$paramete2,_PageLoading$paramete3,_LazyScrollLoading$pa,_LazyScrollLoading$pa2,_LazyScrollLoading$pa3,_LazyScrollLoadingErr,_LazyScrollLoadingErr2,_LazyScrollLoadingErr3,_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_badges=__webpack_require__("./.storybook/badges.ts"),_withMeta=__webpack_require__("./helpers/hocs/MetaComponent/withMeta.tsx"),_meta=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/table/__meta__/meta.json")),_=__webpack_require__("./src/table/index.ts"),_loader=__webpack_require__("./src/loader/index.ts"),_commonConstants=__webpack_require__("./src/table/stories/_commonConstants.tsx"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const meta={title:"Organisms/Table/Loading",component:_.Table,args:{columns:_commonConstants.basicTwoColumns,dataSource:_commonConstants.basicDataSource.slice(0,60)},parameters:{storySource:{source:"import React, { useState } from 'react';\nimport { Meta } from '@storybook/react';\nimport { badges } from '@sb/badges';\nimport { withMeta } from '@helpers/hocs/MetaComponent/withMeta';\nimport MetaData from '../__meta__/meta.json';\nimport { Table } from '../';\nimport { ITableProps } from '../types';\nimport { Loader as LoaderComponent } from '@src/loader';\nimport { Wrapper, BasicTableStory, basicDataSource, basicTwoColumns, basicArgTypes, genArgType, Story } from './_commonConstants';\nconst meta: Meta<ITableProps> = {\n  title: 'Organisms/Table/Loading',\n  component: Table,\n  args: {\n    columns: basicTwoColumns,\n    dataSource: basicDataSource.slice(0, 60)\n  },\n  parameters: {\n    badges: [badges.dev],\n    docs: {\n      page: withMeta(MetaData)\n    },\n    controls: {\n      exclude: ['columns', 'dataSource']\n    }\n  }\n};\nexport default meta;\nexport const Loader: Story = {\n  render: BasicTableStory.bind({}),\n  args: {\n    loading: true\n  },\n  argTypes: {\n    loading: basicArgTypes.loading\n  }\n};\nexport const CustomLoader: Story = {\n  render: BasicTableStory.bind({}),\n  args: {\n    loading: true,\n    loaderProps: {\n      indicator: <LoaderComponent />,\n      delay: 1000\n    }\n  },\n  argTypes: {\n    loading: basicArgTypes.loading,\n    loaderProps: basicArgTypes.loaderProps\n  }\n};\nconst createRows = (page: number, pageSize: number) => basicDataSource.slice(pageSize * page, pageSize * (page + 1));\nexport const PageLoading: Story = {\n  render: (args: ITableProps) => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [loading, setLoading] = useState(false);\n    const [dataSource, setDataSource] = useState(createRows(0, 10));\n    return <Wrapper>\n        <Table {...args} loading={loading} pagination={{\n        current: currentPage,\n        total: 180,\n        pageSize,\n        onChange: async (page, pageSize) => {\n          setLoading(true);\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          setDataSource(createRows(page - 1, pageSize));\n          setCurrentPage(page);\n          setLoading(false);\n        },\n        onShowSizeChange: async (page, pageSize) => {\n          setLoading(true);\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          setDataSource(createRows(page - 1, pageSize));\n          setCurrentPage(page);\n          setPageSize(pageSize);\n          setLoading(false);\n        }\n      }} dataSource={dataSource} />\n      </Wrapper>;\n  },\n  args: {\n    loading: true\n  },\n  argTypes: {\n    pagination: genArgType('pagination.current - controlled current page<br/>pageSize - conrolled page size<br/>' + 'onChange: (page, pageSize) => void, - handler when page is changed. you can put loader switcher there<br/>' + 'onShowSizeChange: (page, pageSize) => void, - handler then pageSize is changed. you can put loader switcher there')\n  }\n};\nconst paginationDescription = 'pagination.infiniteScrollPageGetter: (page, pageSize) => Promise ' + '- function that returns Promise where you can set new data on resolve() and throw error on reject()';\nexport const LazyScrollLoading: Story = {\n  render: (args: ITableProps) => {\n    const PAGE_SIZE = 20;\n    return <Wrapper>\n        <Table {...args} pagination={({\n        infiniteScrollPageGetter: page =>\n        \n        new Promise(async resolve => {\n          await new Promise(resolve => setTimeout(resolve, 500));\n          resolve(page > 2 ? null : basicDataSource.slice(PAGE_SIZE * page, PAGE_SIZE * (page + 1)));\n        })\n      } as ITableProps['pagination'])} dataSource={basicDataSource.slice(0, PAGE_SIZE)} />\n      </Wrapper>;\n  },\n  args: {\n    infiniteScrollEndTableText: 'End table text'\n  },\n  argTypes: {\n    infiniteScrollEndTableText: basicArgTypes.infiniteScrollEndTableText,\n    pagination: {\n      description: paginationDescription\n    }\n  }\n};\nexport const LazyScrollLoadingError: Story = {\n  render: (args: ITableProps) => <Wrapper>\n      <Table {...args} pagination={({\n      infiniteScrollPageGetter: () =>\n      \n      new Promise(async (resolve, reject) => {\n        await new Promise(resolve => setTimeout(resolve, 1500));\n        reject(new Error());\n      })\n    } as ITableProps['pagination'])} dataSource={basicDataSource.slice(0, 20)} />\n    </Wrapper>,\n  args: {\n    infiniteScrollErrorText: 'Error text',\n    infiniteScrollRetryText: 'Retry text'\n  },\n  argTypes: {\n    infiniteScrollErrorText: basicArgTypes.infiniteScrollErrorText,\n    infiniteScrollRetryText: basicArgTypes.infiniteScrollRetryText,\n    pagination: {\n      description: paginationDescription\n    }\n  }\n};\nLoader.parameters = {\n  ...Loader.parameters,\n  docs: {\n    ...Loader.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: BasicTableStory.bind({}),\\n  args: {\\n    loading: true\\n  },\\n  argTypes: {\\n    loading: basicArgTypes.loading\\n  }\\n}\",\n      ...Loader.parameters?.docs?.source\n    }\n  }\n};\nCustomLoader.parameters = {\n  ...CustomLoader.parameters,\n  docs: {\n    ...CustomLoader.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: BasicTableStory.bind({}),\\n  args: {\\n    loading: true,\\n    loaderProps: {\\n      indicator: <LoaderComponent />,\\n      delay: 1000\\n    }\\n  },\\n  argTypes: {\\n    loading: basicArgTypes.loading,\\n    loaderProps: basicArgTypes.loaderProps\\n  }\\n}\",\n      ...CustomLoader.parameters?.docs?.source\n    }\n  }\n};\nPageLoading.parameters = {\n  ...PageLoading.parameters,\n  docs: {\n    ...PageLoading.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: (args: ITableProps) => {\\n    const [currentPage, setCurrentPage] = useState(1);\\n    const [pageSize, setPageSize] = useState(10);\\n    const [loading, setLoading] = useState(false);\\n    const [dataSource, setDataSource] = useState(createRows(0, 10));\\n    return <Wrapper>\\n        <Table {...args} loading={loading} pagination={{\\n        current: currentPage,\\n        total: 180,\\n        pageSize,\\n        onChange: async (page, pageSize) => {\\n          setLoading(true);\\n          await new Promise(resolve => setTimeout(resolve, 1000));\\n          setDataSource(createRows(page - 1, pageSize));\\n          setCurrentPage(page);\\n          setLoading(false);\\n        },\\n        onShowSizeChange: async (page, pageSize) => {\\n          setLoading(true);\\n          await new Promise(resolve => setTimeout(resolve, 1000));\\n          setDataSource(createRows(page - 1, pageSize));\\n          setCurrentPage(page);\\n          setPageSize(pageSize);\\n          setLoading(false);\\n        }\\n      }} dataSource={dataSource} />\\n      </Wrapper>;\\n  },\\n  args: {\\n    loading: true\\n  },\\n  argTypes: {\\n    pagination: genArgType('pagination.current - controlled current page<br/>pageSize - conrolled page size<br/>' + 'onChange: (page, pageSize) => void, - handler when page is changed. you can put loader switcher there<br/>' + 'onShowSizeChange: (page, pageSize) => void, - handler then pageSize is changed. you can put loader switcher there')\\n  }\\n}\",\n      ...PageLoading.parameters?.docs?.source\n    }\n  }\n};\nLazyScrollLoading.parameters = {\n  ...LazyScrollLoading.parameters,\n  docs: {\n    ...LazyScrollLoading.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: (args: ITableProps) => {\\n    const PAGE_SIZE = 20;\\n    return <Wrapper>\\n        <Table {...args} pagination={({\\n        infiniteScrollPageGetter: page =>\\n        // eslint-disable-next-line no-async-promise-executor\\n        new Promise(async resolve => {\\n          await new Promise(resolve => setTimeout(resolve, 500));\\n          resolve(page > 2 ? null : basicDataSource.slice(PAGE_SIZE * page, PAGE_SIZE * (page + 1)));\\n        })\\n      } as ITableProps['pagination'])} dataSource={basicDataSource.slice(0, PAGE_SIZE)} />\\n      </Wrapper>;\\n  },\\n  args: {\\n    infiniteScrollEndTableText: 'End table text'\\n  },\\n  argTypes: {\\n    infiniteScrollEndTableText: basicArgTypes.infiniteScrollEndTableText,\\n    pagination: {\\n      description: paginationDescription\\n    }\\n  }\\n}\",\n      ...LazyScrollLoading.parameters?.docs?.source\n    }\n  }\n};\nLazyScrollLoadingError.parameters = {\n  ...LazyScrollLoadingError.parameters,\n  docs: {\n    ...LazyScrollLoadingError.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: (args: ITableProps) => <Wrapper>\\n      <Table {...args} pagination={({\\n      infiniteScrollPageGetter: () =>\\n      // eslint-disable-next-line no-async-promise-executor\\n      new Promise(async (resolve, reject) => {\\n        await new Promise(resolve => setTimeout(resolve, 1500));\\n        reject(new Error());\\n      })\\n    } as ITableProps['pagination'])} dataSource={basicDataSource.slice(0, 20)} />\\n    </Wrapper>,\\n  args: {\\n    infiniteScrollErrorText: 'Error text',\\n    infiniteScrollRetryText: 'Retry text'\\n  },\\n  argTypes: {\\n    infiniteScrollErrorText: basicArgTypes.infiniteScrollErrorText,\\n    infiniteScrollRetryText: basicArgTypes.infiniteScrollRetryText,\\n    pagination: {\\n      description: paginationDescription\\n    }\\n  }\\n}\",\n      ...LazyScrollLoadingError.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{loader:{startLoc:{col:29,line:28},endLoc:{col:1,line:36},startBody:{col:29,line:28},endBody:{col:1,line:36}},"custom-loader":{startLoc:{col:35,line:37},endLoc:{col:1,line:50},startBody:{col:35,line:37},endBody:{col:1,line:50}},"page-loading":{startLoc:{col:34,line:52},endLoc:{col:1,line:87},startBody:{col:34,line:52},endBody:{col:1,line:87}},"lazy-scroll-loading":{startLoc:{col:40,line:89},endLoc:{col:1,line:112},startBody:{col:40,line:89},endBody:{col:1,line:112}},"lazy-scroll-loading-error":{startLoc:{col:45,line:113},endLoc:{col:1,line:135},startBody:{col:45,line:113},endBody:{col:1,line:135}}}},badges:[_badges.badges.dev],docs:{page:(0,_withMeta.withMeta)(_meta.default)},controls:{exclude:["columns","dataSource"]}}};exports.default=meta;const Loader=exports.Loader={render:_commonConstants.BasicTableStory.bind({}),args:{loading:!0},argTypes:{loading:_commonConstants.basicArgTypes.loading}},CustomLoader=exports.CustomLoader={render:_commonConstants.BasicTableStory.bind({}),args:{loading:!0,loaderProps:{indicator:(0,_jsxRuntime.jsx)(_loader.Loader,{}),delay:1e3}},argTypes:{loading:_commonConstants.basicArgTypes.loading,loaderProps:_commonConstants.basicArgTypes.loaderProps}},createRows=(page,pageSize)=>_commonConstants.basicDataSource.slice(pageSize*page,pageSize*(page+1)),PageLoading=exports.PageLoading={render:args=>{const[currentPage,setCurrentPage]=(0,_react.useState)(1),[pageSize,setPageSize]=(0,_react.useState)(10),[loading,setLoading]=(0,_react.useState)(!1),[dataSource,setDataSource]=(0,_react.useState)(createRows(0,10));return(0,_jsxRuntime.jsx)(_commonConstants.Wrapper,{children:(0,_jsxRuntime.jsx)(_.Table,{...args,loading,pagination:{current:currentPage,total:180,pageSize,onChange:async(page,pageSize)=>{setLoading(!0),await new Promise((resolve=>setTimeout(resolve,1e3))),setDataSource(createRows(page-1,pageSize)),setCurrentPage(page),setLoading(!1)},onShowSizeChange:async(page,pageSize)=>{setLoading(!0),await new Promise((resolve=>setTimeout(resolve,1e3))),setDataSource(createRows(page-1,pageSize)),setCurrentPage(page),setPageSize(pageSize),setLoading(!1)}},dataSource})})},args:{loading:!0},argTypes:{pagination:(0,_commonConstants.genArgType)("pagination.current - controlled current page<br/>pageSize - conrolled page size<br/>onChange: (page, pageSize) => void, - handler when page is changed. you can put loader switcher there<br/>onShowSizeChange: (page, pageSize) => void, - handler then pageSize is changed. you can put loader switcher there")}},paginationDescription="pagination.infiniteScrollPageGetter: (page, pageSize) => Promise - function that returns Promise where you can set new data on resolve() and throw error on reject()",LazyScrollLoading=exports.LazyScrollLoading={render:args=>(0,_jsxRuntime.jsx)(_commonConstants.Wrapper,{children:(0,_jsxRuntime.jsx)(_.Table,{...args,pagination:{infiniteScrollPageGetter:page=>new Promise((async resolve=>{await new Promise((resolve=>setTimeout(resolve,500))),resolve(page>2?null:_commonConstants.basicDataSource.slice(20*page,20*(page+1)))}))},dataSource:_commonConstants.basicDataSource.slice(0,20)})}),args:{infiniteScrollEndTableText:"End table text"},argTypes:{infiniteScrollEndTableText:_commonConstants.basicArgTypes.infiniteScrollEndTableText,pagination:{description:paginationDescription}}},LazyScrollLoadingError=exports.LazyScrollLoadingError={render:args=>(0,_jsxRuntime.jsx)(_commonConstants.Wrapper,{children:(0,_jsxRuntime.jsx)(_.Table,{...args,pagination:{infiniteScrollPageGetter:()=>new Promise((async(resolve,reject)=>{await new Promise((resolve=>setTimeout(resolve,1500))),reject(new Error)}))},dataSource:_commonConstants.basicDataSource.slice(0,20)})}),args:{infiniteScrollErrorText:"Error text",infiniteScrollRetryText:"Retry text"},argTypes:{infiniteScrollErrorText:_commonConstants.basicArgTypes.infiniteScrollErrorText,infiniteScrollRetryText:_commonConstants.basicArgTypes.infiniteScrollRetryText,pagination:{description:paginationDescription}}};Loader.parameters={...Loader.parameters,docs:{...null===(_Loader$parameters=Loader.parameters)||void 0===_Loader$parameters?void 0:_Loader$parameters.docs,source:{originalSource:"{\n  render: BasicTableStory.bind({}),\n  args: {\n    loading: true\n  },\n  argTypes: {\n    loading: basicArgTypes.loading\n  }\n}",...null===(_Loader$parameters2=Loader.parameters)||void 0===_Loader$parameters2||null===(_Loader$parameters2$d=_Loader$parameters2.docs)||void 0===_Loader$parameters2$d?void 0:_Loader$parameters2$d.source}}},CustomLoader.parameters={...CustomLoader.parameters,docs:{...null===(_CustomLoader$paramet=CustomLoader.parameters)||void 0===_CustomLoader$paramet?void 0:_CustomLoader$paramet.docs,source:{originalSource:"{\n  render: BasicTableStory.bind({}),\n  args: {\n    loading: true,\n    loaderProps: {\n      indicator: <LoaderComponent />,\n      delay: 1000\n    }\n  },\n  argTypes: {\n    loading: basicArgTypes.loading,\n    loaderProps: basicArgTypes.loaderProps\n  }\n}",...null===(_CustomLoader$paramet2=CustomLoader.parameters)||void 0===_CustomLoader$paramet2||null===(_CustomLoader$paramet3=_CustomLoader$paramet2.docs)||void 0===_CustomLoader$paramet3?void 0:_CustomLoader$paramet3.source}}},PageLoading.parameters={...PageLoading.parameters,docs:{...null===(_PageLoading$paramete=PageLoading.parameters)||void 0===_PageLoading$paramete?void 0:_PageLoading$paramete.docs,source:{originalSource:"{\n  render: (args: ITableProps) => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [loading, setLoading] = useState(false);\n    const [dataSource, setDataSource] = useState(createRows(0, 10));\n    return <Wrapper>\n        <Table {...args} loading={loading} pagination={{\n        current: currentPage,\n        total: 180,\n        pageSize,\n        onChange: async (page, pageSize) => {\n          setLoading(true);\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          setDataSource(createRows(page - 1, pageSize));\n          setCurrentPage(page);\n          setLoading(false);\n        },\n        onShowSizeChange: async (page, pageSize) => {\n          setLoading(true);\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          setDataSource(createRows(page - 1, pageSize));\n          setCurrentPage(page);\n          setPageSize(pageSize);\n          setLoading(false);\n        }\n      }} dataSource={dataSource} />\n      </Wrapper>;\n  },\n  args: {\n    loading: true\n  },\n  argTypes: {\n    pagination: genArgType('pagination.current - controlled current page<br/>pageSize - conrolled page size<br/>' + 'onChange: (page, pageSize) => void, - handler when page is changed. you can put loader switcher there<br/>' + 'onShowSizeChange: (page, pageSize) => void, - handler then pageSize is changed. you can put loader switcher there')\n  }\n}",...null===(_PageLoading$paramete2=PageLoading.parameters)||void 0===_PageLoading$paramete2||null===(_PageLoading$paramete3=_PageLoading$paramete2.docs)||void 0===_PageLoading$paramete3?void 0:_PageLoading$paramete3.source}}},LazyScrollLoading.parameters={...LazyScrollLoading.parameters,docs:{...null===(_LazyScrollLoading$pa=LazyScrollLoading.parameters)||void 0===_LazyScrollLoading$pa?void 0:_LazyScrollLoading$pa.docs,source:{originalSource:"{\n  render: (args: ITableProps) => {\n    const PAGE_SIZE = 20;\n    return <Wrapper>\n        <Table {...args} pagination={({\n        infiniteScrollPageGetter: page =>\n        // eslint-disable-next-line no-async-promise-executor\n        new Promise(async resolve => {\n          await new Promise(resolve => setTimeout(resolve, 500));\n          resolve(page > 2 ? null : basicDataSource.slice(PAGE_SIZE * page, PAGE_SIZE * (page + 1)));\n        })\n      } as ITableProps['pagination'])} dataSource={basicDataSource.slice(0, PAGE_SIZE)} />\n      </Wrapper>;\n  },\n  args: {\n    infiniteScrollEndTableText: 'End table text'\n  },\n  argTypes: {\n    infiniteScrollEndTableText: basicArgTypes.infiniteScrollEndTableText,\n    pagination: {\n      description: paginationDescription\n    }\n  }\n}",...null===(_LazyScrollLoading$pa2=LazyScrollLoading.parameters)||void 0===_LazyScrollLoading$pa2||null===(_LazyScrollLoading$pa3=_LazyScrollLoading$pa2.docs)||void 0===_LazyScrollLoading$pa3?void 0:_LazyScrollLoading$pa3.source}}},LazyScrollLoadingError.parameters={...LazyScrollLoadingError.parameters,docs:{...null===(_LazyScrollLoadingErr=LazyScrollLoadingError.parameters)||void 0===_LazyScrollLoadingErr?void 0:_LazyScrollLoadingErr.docs,source:{originalSource:"{\n  render: (args: ITableProps) => <Wrapper>\n      <Table {...args} pagination={({\n      infiniteScrollPageGetter: () =>\n      // eslint-disable-next-line no-async-promise-executor\n      new Promise(async (resolve, reject) => {\n        await new Promise(resolve => setTimeout(resolve, 1500));\n        reject(new Error());\n      })\n    } as ITableProps['pagination'])} dataSource={basicDataSource.slice(0, 20)} />\n    </Wrapper>,\n  args: {\n    infiniteScrollErrorText: 'Error text',\n    infiniteScrollRetryText: 'Retry text'\n  },\n  argTypes: {\n    infiniteScrollErrorText: basicArgTypes.infiniteScrollErrorText,\n    infiniteScrollRetryText: basicArgTypes.infiniteScrollRetryText,\n    pagination: {\n      description: paginationDescription\n    }\n  }\n}",...null===(_LazyScrollLoadingErr2=LazyScrollLoadingError.parameters)||void 0===_LazyScrollLoadingErr2||null===(_LazyScrollLoadingErr3=_LazyScrollLoadingErr2.docs)||void 0===_LazyScrollLoadingErr3?void 0:_LazyScrollLoadingErr3.source}}};exports.__namedExportsOrder=["Loader","CustomLoader","PageLoading","LazyScrollLoading","LazyScrollLoadingError"]},"./src/table/stories/_commonConstants.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.patchKeys=exports.genArgType=exports.basicTwoColumns=exports.basicTreeDataSource=exports.basicDataSource=exports.basicArgTypes=exports.Wrapper=exports.BasicTableStory=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_styledComponents=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js")),_table=__webpack_require__("./src/table/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const Wrapper=exports.Wrapper=_styledComponents.default.div.withConfig({displayName:"_commonConstants__Wrapper",componentId:"sc-j6oko2-0"})(["background-color:#F6F6F6;padding:50px;width:100%;"]),BasicTableStory=args=>{var _args$rowSelection;const[selectedRowKeys,setSelectedRowKeys]=(0,_react.useState)(null===(_args$rowSelection=args.rowSelection)||void 0===_args$rowSelection?void 0:_args$rowSelection.selectedRowKeys);return(0,_jsxRuntime.jsx)(Wrapper,{children:(0,_jsxRuntime.jsx)(_table.Table,{rowSelection:{selectedRowKeys,onChange:newSelectedRowKeys=>{console.log(`selectedRowKeys changed: ${newSelectedRowKeys}`),setSelectedRowKeys(newSelectedRowKeys)}},...args})})};exports.BasicTableStory=BasicTableStory,BasicTableStory.displayName="BasicTableStory";const patchKeys=function(data){let prefix=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return data.map(((item,index)=>({...item,...item.children&&{children:patchKeys(item.children,[...prefix,index])},key:[...prefix,index].join(",")})))};exports.patchKeys=patchKeys;const genArgType=(description,control,defaultValue)=>({description,control:null!=control&&control,table:defaultValue&&{defaultValue:{summary:defaultValue}}});exports.genArgType=genArgType;exports.basicArgTypes={columns:genArgType("An array of column objects"),dataSource:genArgType('An array of data. Each object should contain all field used as a "dataIndex" in "columns"'),rowSelection:genArgType("rowSelection.selectedRowKeys - an array of selected rows<br/>rowSelection.onChange - controlled handler","object"),useAccordion:genArgType("Is needed to use accordion in dataSource","boolean","false"),onDragStart:genArgType("Handler for start of dragging"),onDragEnd:genArgType("Handler for end of dragging"),useDragDrop:genArgType("Is drag-n-drop enabled","boolean","false"),emptyText:genArgType("Custom ReactElement that will be shown instead of default empty text"),groupBy:genArgType("dataIndex of column to group"),groupTitleRender:genArgType("Render function for title of group"),rowClassName:genArgType("Classname for each row. It can be used to style content (hover, for example)"),onColumnResize:genArgType("Handler on column resize"),resizingMode:{...genArgType("Resizing mode","select"),options:["max","last","manual","scroll"]},stickyHeader:genArgType("Intend from top in px. Set undefined if sticky is not needed","number","undefined"),loading:genArgType("Is table loading","boolean","false"),loaderProps:genArgType("loaderProps.indicator - custom loader component<br/>loaderProps.delay - delay to show loader"),pagination:{...genArgType("Go to Molecules/Pagination. Allowed props: current, pageSize, total, simple, onChange, onShowSizeChange.External fields:<br/>pagination.infiniteScrollPageGetter: (page, pageSize) => Promise- function that returns Promise where you can set new data on resolve() and throw error on reject()")},infiniteScrollEndTableText:genArgType("End text when table is ended during infinite scrolling"),infiniteScrollRetryText:genArgType("Retry text when some error occurred during infinite scrolling"),infiniteScrollErrorText:genArgType("Error text when some error occurred during infinite scrolling"),toolbar:{...genArgType("Go to Molecules/Toolbar. External fields:<br/>toolbar.showSearch - is search enabled<br/>toolbar.showColumns - is columns selector shown<br/>toolbar.showGrouping - is grouping selector shown")},enableSearchHighlighting:genArgType("Should the found text be highlighted","boolean","false"),filterItems:genArgType("An array of filters to show"),initialFilters:genArgType("Filters to set by default"),initialSorting:genArgType("initialSorting.field - column to sort by default<br/>initialSorting.direction - direction of sorting"),saveFilters:genArgType("saveFilters.storageKey - key name of saved filters"),expandable:genArgType('expandable.expandColumnName = "col1" - expanding the tree will be at col1'),defaultColumnWidth:genArgType("Default width of columns","number","undefined"),columnVerticalAlign:{...genArgType("Column vertical align","radio","top"),options:["top","middle","bottom","inherit"]},rowMode:{...genArgType("Row mode","radio","standard"),options:["standard","compact"]},disabled:genArgType("If rowSelection is disabled","boolean","false")},exports.basicTwoColumns=[{title:"table.column.name",key:"name",dataIndex:"name",width:300},{title:"table.column2.name",key:"description",dataIndex:"description",width:200}],exports.basicDataSource=Array.from({length:180}).map(((_,index)=>({name:`Value ${index+1}`,description:`Description ${index+1}`,key:index+1}))),exports.basicTreeDataSource=[{name:"John Doe",description:"Nice guy",age:34},{name:"Jane Doe",description:"Cool girl",age:33},{name:"James Doe",description:"Noble man",age:65,children:[{name:"Mary Sue",description:"Dubious character",age:41,children:[{name:"Dirk Gently",description:"Best detective",age:15}]},{name:"John Snow",description:"Knows nothing",age:45}]},{name:"Judy Doe",description:"Great person",age:38}];try{Wrapper.displayName="Wrapper",Wrapper.__docgenInfo={description:"",displayName:"Wrapper",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/table/stories/_commonConstants.tsx#Wrapper"]={docgenInfo:Wrapper.__docgenInfo,name:"Wrapper",path:"src/table/stories/_commonConstants.tsx#Wrapper"})}catch(__react_docgen_typescript_loader_error){}try{BasicTableStory.displayName="BasicTableStory",BasicTableStory.__docgenInfo={description:"",displayName:"BasicTableStory",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"enum",value:[{value:'"light"'},{value:'"dark"'}]}},columns:{defaultValue:null,description:"",name:"columns",required:!1,type:{name:"TableCustomColumn[]"}},onSortChange:{defaultValue:null,description:"",name:"onSortChange",required:!1,type:{name:"((val: ActiveSorting) => void)"}},onFilterChange:{defaultValue:null,description:"",name:"onFilterChange",required:!1,type:{name:"((val: ActiveFilter) => void)"}},onFiltersChange:{defaultValue:null,description:"",name:"onFiltersChange",required:!1,type:{name:"((filters: unknown[]) => void)"}},onColumnResize:{defaultValue:null,description:"This prop should be memoized",name:"onColumnResize",required:!1,type:{name:"((column: any) => void)"}},onManualColumnResize:{defaultValue:null,description:"This prop should be memoized",name:"onManualColumnResize",required:!1,type:{name:"((column: Record<string, any>) => void)"}},onGroupByChange:{defaultValue:null,description:"",name:"onGroupByChange",required:!1,type:{name:"((dataIndex: string) => void)"}},search:{defaultValue:null,description:"",name:"search",required:!1,type:{name:"boolean"}},header:{defaultValue:null,description:"",name:"header",required:!1,type:{name:"string"}},initialSorting:{defaultValue:null,description:"",name:"initialSorting",required:!1,type:{name:"ActiveSorting"}},initialFilters:{defaultValue:null,description:"",name:"initialFilters",required:!1,type:{name:"ActiveFilter"}},showColumnsSelector:{defaultValue:null,description:"",name:"showColumnsSelector",required:!1,type:{name:"boolean"}},showFilterSidebar:{defaultValue:null,description:"",name:"showFilterSidebar",required:!1,type:{name:"boolean"}},onCloseColumnsSelector:{defaultValue:null,description:"",name:"onCloseColumnsSelector",required:!1,type:{name:"(() => void)"}},onCloseFilterSidebar:{defaultValue:null,description:"",name:"onCloseFilterSidebar",required:!1,type:{name:"(() => void)"}},onColumnsChange:{defaultValue:null,description:"",name:"onColumnsChange",required:!1,type:{name:"((columns: any[]) => void)"}},groupBy:{defaultValue:null,description:"",name:"groupBy",required:!1,type:{name:"string"}},useAccordion:{defaultValue:null,description:"",name:"useAccordion",required:!1,type:{name:"boolean"}},stickyHeader:{defaultValue:null,description:"",name:"stickyHeader",required:!1,type:{name:"number"}},toolbar:{defaultValue:null,description:"",name:"toolbar",required:!1,type:{name:"ToolbarProps"}},filterItems:{defaultValue:null,description:"",name:"filterItems",required:!1,type:{name:"{ items: FilterItemTagProps[]; clearLinkText?: string; onClear?: (() => void); } | undefined"}},onSearch:{defaultValue:null,description:"",name:"onSearch",required:!1,type:{name:"((searchString: string) => void)"}},groupTitleRender:{defaultValue:null,description:"",name:"groupTitleRender",required:!1,type:{name:"((data: string) => ReactNode)"}},saveFilters:{defaultValue:null,description:"",name:"saveFilters",required:!1,type:{name:"IFiltersSavingSettings"}},resizingMode:{defaultValue:null,description:"",name:"resizingMode",required:!1,type:{name:"enum",value:[{value:'"scroll"'},{value:'"max"'},{value:'"last"'},{value:'"manual"'}]}},enableSearchHighlighting:{defaultValue:null,description:"",name:"enableSearchHighlighting",required:!1,type:{name:"boolean"}},stickyScrollingContainer:{defaultValue:null,description:"",name:"stickyScrollingContainer",required:!1,type:{name:"Element"}},maxColumnsForAutoResizing:{defaultValue:null,description:"",name:"maxColumnsForAutoResizing",required:!1,type:{name:"number"}},defaultColumnWidth:{defaultValue:null,description:"",name:"defaultColumnWidth",required:!1,type:{name:"number"}},isDefaultSortDisabled:{defaultValue:null,description:"",name:"isDefaultSortDisabled",required:!1,type:{name:"boolean"}},infiniteScrollEndTableText:{defaultValue:null,description:"",name:"infiniteScrollEndTableText",required:!1,type:{name:"ReactNode"}},infiniteScrollErrorText:{defaultValue:null,description:"",name:"infiniteScrollErrorText",required:!1,type:{name:"ReactNode"}},infiniteScrollRetryText:{defaultValue:null,description:"",name:"infiniteScrollRetryText",required:!1,type:{name:"ReactNode"}},loaderProps:{defaultValue:null,description:"",name:"loaderProps",required:!1,type:{name:"SpinProps"}},useDragDrop:{defaultValue:null,description:"",name:"useDragDrop",required:!1,type:{name:"boolean"}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:"((rows: unknown[]) => void)"}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:"((rows: unknown[]) => void)"}},externalSorting:{defaultValue:null,description:"",name:"externalSorting",required:!1,type:{name:"ActiveSorting"}},setExternalSorting:{defaultValue:null,description:"",name:"setExternalSorting",required:!1,type:{name:"((arg0: ActiveSorting) => void)"}},appliedFilters:{defaultValue:null,description:"",name:"appliedFilters",required:!1,type:{name:"ActiveFilter"}},emptyText:{defaultValue:null,description:"",name:"emptyText",required:!1,type:{name:"ReactNode"}},columnVerticalAlign:{defaultValue:null,description:"",name:"columnVerticalAlign",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"middle"'},{value:'"inherit"'}]}},rowMode:{defaultValue:null,description:"",name:"rowMode",required:!1,type:{name:"enum",value:[{value:'"standard"'},{value:'"compact"'}]}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},isValid:{defaultValue:null,description:"",name:"isValid",required:!1,type:{name:"boolean"}},testId:{defaultValue:null,description:"",name:"testId",required:!1,type:{name:"string"}},klId:{defaultValue:null,description:"@deprecated Use 'testId' prop instead",name:"klId",required:!1,type:{name:"string"}},componentId:{defaultValue:null,description:"@deprecated Use 'testId' prop instead",name:"componentId",required:!1,type:{name:"string"}},dataTestId:{defaultValue:null,description:"@deprecated Use 'testId' prop instead",name:"dataTestId",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/table/stories/_commonConstants.tsx#BasicTableStory"]={docgenInfo:BasicTableStory.__docgenInfo,name:"BasicTableStory",path:"src/table/stories/_commonConstants.tsx#BasicTableStory"})}catch(__react_docgen_typescript_loader_error){}},"./src/table/__meta__/meta.json":module=>{module.exports=JSON.parse('{"dod":{"designTokens":false,"useThemedHook":false,"unitTests":false,"screenshotTests":false,"migration":false,"apiTable":false,"storybook":true},"component":"Table","description":"Компонент-контейнер для группы команд или элементов управления. ","usage":"","designLink":"https://www.figma.com/file/9hiN2DbkqbxbhR9EWRI1VK/B2B-UI-KIT?node-id=4055%3A17685"}')}}]);