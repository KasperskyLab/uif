import{g as k}from"./_commonjsHelpers-de833af9.js";function v(s,o){for(var t=0;t<o.length;t++){const a=o[t];if(typeof a!="string"&&!Array.isArray(a)){for(const n in a)if(n!=="default"&&!(n in s)){const e=Object.getOwnPropertyDescriptor(a,n);e&&Object.defineProperty(s,n,e.get?e:{enumerable:!0,get:()=>a[n]})}}}return Object.freeze(Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}))}var g,m;function x(){if(m)return g;m=1,g=s,s.displayName="lisp",s.aliases=[];function s(o){(function(t){function a(d){return RegExp("(\\()"+d+"(?=[\\s\\)])")}function n(d){return RegExp("([\\s([])"+d+"(?=[\\s)])")}var e="[-+*/_~!@$%^=<>{}\\w]+",y="&"+e,i="(\\()",c="(?=\\))",b="(?=\\s)",r={heading:{pattern:/;;;.*/,alias:["comment","title"]},comment:/;.*/,string:{pattern:/"(?:[^"\\]|\\.)*"/,greedy:!0,inside:{argument:/[-A-Z]+(?=[.,\s])/,symbol:RegExp("`"+e+"'")}},"quoted-symbol":{pattern:RegExp("#?'"+e),alias:["variable","symbol"]},"lisp-property":{pattern:RegExp(":"+e),alias:"property"},splice:{pattern:RegExp(",@?"+e),alias:["symbol","variable"]},keyword:[{pattern:RegExp(i+"(?:(?:lexical-)?let\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)"+b),lookbehind:!0},{pattern:RegExp(i+"(?:for|do|collect|return|finally|append|concat|in|by)"+b),lookbehind:!0}],declare:{pattern:a("declare"),lookbehind:!0,alias:"keyword"},interactive:{pattern:a("interactive"),lookbehind:!0,alias:"keyword"},boolean:{pattern:n("(?:t|nil)"),lookbehind:!0},number:{pattern:n("[-+]?\\d+(?:\\.\\d*)?"),lookbehind:!0},defvar:{pattern:RegExp(i+"def(?:var|const|custom|group)\\s+"+e),lookbehind:!0,inside:{keyword:/^def[a-z]+/,variable:RegExp(e)}},defun:{pattern:RegExp(i+"(?:cl-)?(?:defun\\*?|defmacro)\\s+"+e+"\\s+\\([\\s\\S]*?\\)"),lookbehind:!0,inside:{keyword:/^(?:cl-)?def\S+/,arguments:null,function:{pattern:RegExp("(^\\s)"+e),lookbehind:!0},punctuation:/[()]/}},lambda:{pattern:RegExp(i+"lambda\\s+\\((?:&?"+e+"\\s*)*\\)"),lookbehind:!0,inside:{keyword:/^lambda/,arguments:null,punctuation:/[()]/}},car:{pattern:RegExp(i+e),lookbehind:!0},punctuation:[/(['`,]?\(|[)\[\]])/,{pattern:/(\s)\.(?=\s)/,lookbehind:!0}]},l={"lisp-marker":RegExp(y),rest:{argument:{pattern:RegExp(e),alias:"variable"},varform:{pattern:RegExp(i+e+"\\s+\\S[\\s\\S]*"+c),lookbehind:!0,inside:{string:r.string,boolean:r.boolean,number:r.number,symbol:r.symbol,punctuation:/[()]/}}}},p="\\S+(?:\\s+\\S+)*",u={pattern:RegExp(i+"[\\s\\S]*"+c),lookbehind:!0,inside:{"rest-vars":{pattern:RegExp("&(?:rest|body)\\s+"+p),inside:l},"other-marker-vars":{pattern:RegExp("&(?:optional|aux)\\s+"+p),inside:l},keys:{pattern:RegExp("&key\\s+"+p+"(?:\\s+&allow-other-keys)?"),inside:l},argument:{pattern:RegExp(e),alias:"variable"},punctuation:/[()]/}};r.lambda.inside.arguments=u,r.defun.inside.arguments=t.util.clone(u),r.defun.inside.arguments.inside.sublist=u,t.languages.lisp=r,t.languages.elisp=r,t.languages.emacs=r,t.languages["emacs-lisp"]=r})(o)}return g}var f=x();const E=k(f),h=v({__proto__:null,default:E},[f]);export{h as l};
//# sourceMappingURL=lisp-46df7b85.js.map
