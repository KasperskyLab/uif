{"version":3,"file":"php-258ea722.js","sources":["../../../node_modules/refractor/lang/php.js"],"sourcesContent":["'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = php\nphp.displayName = 'php'\nphp.aliases = []\nfunction php(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  /**\n   * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n   * Modified by Miles Johnson: http://milesj.me\n   *\n   * Supports the following:\n   *      - Extends clike syntax\n   *      - Support for PHP 5.3+ (namespaces, traits, generators, etc)\n   *      - Smarter constant and function matching\n   *\n   * Adds the following new token classes:\n   *      constant, delimiter, variable, function, package\n   */\n  ;(function(Prism) {\n    Prism.languages.php = Prism.languages.extend('clike', {\n      keyword: /\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n      boolean: {\n        pattern: /\\b(?:false|true)\\b/i,\n        alias: 'constant'\n      },\n      constant: [/\\b[A-Z_][A-Z0-9_]*\\b/, /\\b(?:null)\\b/i],\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('php', 'string', {\n      'shell-comment': {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true,\n        alias: 'comment'\n      }\n    })\n    Prism.languages.insertBefore('php', 'comment', {\n      delimiter: {\n        pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n        alias: 'important'\n      }\n    })\n    Prism.languages.insertBefore('php', 'keyword', {\n      variable: /\\$+(?:\\w+\\b|(?={))/i,\n      package: {\n        pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      }\n    }) // Must be defined after the function pattern\n    Prism.languages.insertBefore('php', 'operator', {\n      property: {\n        pattern: /(->)[\\w]+/,\n        lookbehind: true\n      }\n    })\n    var string_interpolation = {\n      pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.php\n      }\n    }\n    Prism.languages.insertBefore('php', 'string', {\n      'nowdoc-string': {\n        pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          delimiter: {\n            pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<'?|[';]$/\n            }\n          }\n        }\n      },\n      'heredoc-string': {\n        pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          delimiter: {\n            pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<\"?|[\";]$/\n            }\n          },\n          interpolation: string_interpolation // See below\n        }\n      },\n      'single-quoted-string': {\n        pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          interpolation: string_interpolation // See below\n        }\n      }\n    }) // The different types of PHP strings \"replace\" the C-like standard string\n    delete Prism.languages.php['string']\n    Prism.hooks.add('before-tokenize', function(env) {\n      if (!/<\\?/.test(env.code)) {\n        return\n      }\n      var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#)(?:[^?\\n\\r]|\\?(?!>))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))*?(?:\\?>|$)/gi\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'php',\n        phpPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function(env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php')\n    })\n  })(Prism)\n}\n"],"names":["refractorMarkupTemplating","require$$0","php_1","php","Prism","string_interpolation","env","phpPattern"],"mappings":"2FACA,IAAIA,EAA4BC,EAAiC,EACjEC,EAAiBC,EACjBA,EAAI,YAAc,MAClBA,EAAI,QAAU,CAAE,EAChB,SAASA,EAAIC,EAAO,CAClBA,EAAM,SAASJ,CAAyB,EAatC,SAASI,EAAO,CAChBA,EAAM,UAAU,IAAMA,EAAM,UAAU,OAAO,QAAS,CACpD,QAAS,ueACT,QAAS,CACP,QAAS,sBACT,MAAO,UACR,EACD,SAAU,CAAC,uBAAwB,eAAe,EAClD,QAAS,CACP,QAAS,uCACT,WAAY,EACb,CACP,CAAK,EACDA,EAAM,UAAU,aAAa,MAAO,SAAU,CAC5C,gBAAiB,CACf,QAAS,eACT,WAAY,GACZ,MAAO,SACR,CACP,CAAK,EACDA,EAAM,UAAU,aAAa,MAAO,UAAW,CAC7C,UAAW,CACT,QAAS,6BACT,MAAO,WACR,CACP,CAAK,EACDA,EAAM,UAAU,aAAa,MAAO,UAAW,CAC7C,SAAU,sBACV,QAAS,CACP,QAAS,kCACT,WAAY,GACZ,OAAQ,CACN,YAAa,IACd,CACF,CACP,CAAK,EACDA,EAAM,UAAU,aAAa,MAAO,WAAY,CAC9C,SAAU,CACR,QAAS,YACT,WAAY,EACb,CACP,CAAK,EACD,IAAIC,EAAuB,CACzB,QAAS,6EACT,WAAY,GACZ,OAAQ,CACN,KAAMD,EAAM,UAAU,GACvB,CACF,EACDA,EAAM,UAAU,aAAa,MAAO,SAAU,CAC5C,gBAAiB,CACf,QAAS,kDACT,OAAQ,GACR,MAAO,SACP,OAAQ,CACN,UAAW,CACT,QAAS,2BACT,MAAO,SACP,OAAQ,CACN,YAAa,cACd,CACF,CACF,CACF,EACD,iBAAkB,CAChB,QAAS,sGACT,OAAQ,GACR,MAAO,SACP,OAAQ,CACN,UAAW,CACT,QAAS,yCACT,MAAO,SACP,OAAQ,CACN,YAAa,cACd,CACF,EACD,cAAeC,CAChB,CACF,EACD,uBAAwB,CACtB,QAAS,yBACT,OAAQ,GACR,MAAO,QACR,EACD,uBAAwB,CACtB,QAAS,yBACT,OAAQ,GACR,MAAO,SACP,OAAQ,CACN,cAAeA,CAChB,CACF,CACP,CAAK,EACD,OAAOD,EAAM,UAAU,IAAI,OAC3BA,EAAM,MAAM,IAAI,kBAAmB,SAASE,EAAK,CAC/C,GAAK,MAAM,KAAKA,EAAI,IAAI,EAGxB,KAAIC,EAAa,iIACjBH,EAAM,UAAU,mBAAmB,EAAE,kBACnCE,EACA,MACAC,CACD,EACP,CAAK,EACDH,EAAM,MAAM,IAAI,iBAAkB,SAASE,EAAK,CAC9CF,EAAM,UAAU,mBAAmB,EAAE,qBAAqBE,EAAK,KAAK,CAC1E,CAAK,CACF,EAAEF,CAAK,CACV","x_google_ignoreList":[0]}