{"version":3,"file":"stylus-7191ceac.js","sources":["../../../node_modules/refractor/lang/stylus.js"],"sourcesContent":["'use strict'\n\nmodule.exports = stylus\nstylus.displayName = 'stylus'\nstylus.aliases = []\nfunction stylus(Prism) {\n  ;(function(Prism) {\n    var inside = {\n      url: /url\\(([\"']?).*?\\1\\)/i,\n      string: {\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      interpolation: null,\n      // See below\n      func: null,\n      // See below\n      important: /\\B!(?:important|optional)\\b/i,\n      keyword: {\n        pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n        lookbehind: true\n      },\n      hexcode: /#[\\da-f]{3,6}/i,\n      number: /\\b\\d+(?:\\.\\d+)?%?/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: [\n        // We want non-word chars around \"-\" because it is\n        // accepted in property names.\n        /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n      ],\n      punctuation: /[{}()\\[\\];:,]/\n    }\n    inside['interpolation'] = {\n      pattern: /\\{[^\\r\\n}:]+\\}/,\n      alias: 'variable',\n      inside: {\n        delimiter: {\n          pattern: /^{|}$/,\n          alias: 'punctuation'\n        },\n        rest: inside\n      }\n    }\n    inside['func'] = {\n      pattern: /[\\w-]+\\([^)]*\\).*/,\n      inside: {\n        function: /^[^(]+/,\n        rest: inside\n      }\n    }\n    Prism.languages.stylus = {\n      comment: {\n        pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      'atrule-declaration': {\n        pattern: /(^\\s*)@.+/m,\n        lookbehind: true,\n        inside: {\n          atrule: /^@[\\w-]+/,\n          rest: inside\n        }\n      },\n      'variable-declaration': {\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n        lookbehind: true,\n        inside: {\n          variable: /^\\S+/,\n          rest: inside\n        }\n      },\n      statement: {\n        pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\S+/,\n          rest: inside\n        }\n      },\n      // A property/value pair cannot end with a comma or a brace\n      // It cannot have indented content unless it ended with a semicolon\n      'property-declaration': {\n        pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n        lookbehind: true,\n        inside: {\n          property: {\n            pattern: /^[^\\s:]+/,\n            inside: {\n              interpolation: inside.interpolation\n            }\n          },\n          rest: inside\n        }\n      },\n      // A selector can contain parentheses only as part of a pseudo-element\n      // It can span multiple lines.\n      // It must end with a comma or an accolade or have indented content.\n      selector: {\n        pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n        lookbehind: true,\n        inside: {\n          interpolation: inside.interpolation,\n          punctuation: /[{},]/\n        }\n      },\n      func: inside.func,\n      string: inside.string,\n      interpolation: inside.interpolation,\n      punctuation: /[{}()\\[\\];:.]/\n    }\n  })(Prism)\n}\n"],"names":["stylus_1","stylus","Prism","inside"],"mappings":"gbAEAA,EAAiBC,EACjBA,EAAO,YAAc,SACrBA,EAAO,QAAU,CAAE,EACnB,SAASA,EAAOC,EAAO,EACnB,SAASA,EAAO,CAChB,IAAIC,EAAS,CACX,IAAK,uBACL,OAAQ,CACN,QAAS,gDACT,OAAQ,EACT,EACD,cAAe,KAEf,KAAM,KAEN,UAAW,+BACX,QAAS,CACP,QAAS,4DACT,WAAY,EACb,EACD,QAAS,iBACT,OAAQ,oBACR,QAAS,qBACT,SAAU,CAGR,kGACD,EACD,YAAa,eACd,EACDA,EAAO,cAAmB,CACxB,QAAS,iBACT,MAAO,WACP,OAAQ,CACN,UAAW,CACT,QAAS,QACT,MAAO,aACR,EACD,KAAMA,CACP,CACF,EACDA,EAAO,KAAU,CACf,QAAS,oBACT,OAAQ,CACN,SAAU,SACV,KAAMA,CACP,CACF,EACDD,EAAM,UAAU,OAAS,CACvB,QAAS,CACP,QAAS,qCACT,WAAY,EACb,EACD,qBAAsB,CACpB,QAAS,aACT,WAAY,GACZ,OAAQ,CACN,OAAQ,WACR,KAAMC,CACP,CACF,EACD,uBAAwB,CACtB,QAAS,sDACT,WAAY,GACZ,OAAQ,CACN,SAAU,OACV,KAAMA,CACP,CACF,EACD,UAAW,CACT,QAAS,kDACT,WAAY,GACZ,OAAQ,CACN,QAAS,OACT,KAAMA,CACP,CACF,EAGD,uBAAwB,CACtB,QAAS,0HACT,WAAY,GACZ,OAAQ,CACN,SAAU,CACR,QAAS,WACT,OAAQ,CACN,cAAeA,EAAO,aACvB,CACF,EACD,KAAMA,CACP,CACF,EAID,SAAU,CACR,QAAS,uNACT,WAAY,GACZ,OAAQ,CACN,cAAeA,EAAO,cACtB,YAAa,OACd,CACF,EACD,KAAMA,EAAO,KACb,OAAQA,EAAO,OACf,cAAeA,EAAO,cACtB,YAAa,eACd,CACF,GAAED,CAAK,CACV","x_google_ignoreList":[0]}