{"version":3,"file":"groovy-92e85b16.js","sources":["../../../node_modules/refractor/lang/groovy.js"],"sourcesContent":["'use strict'\n\nmodule.exports = groovy\ngroovy.displayName = 'groovy'\ngroovy.aliases = []\nfunction groovy(Prism) {\n  Prism.languages.groovy = Prism.languages.extend('clike', {\n    keyword: /\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n    string: [\n      {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1|(?:\\$\\/)(?:\\$\\/\\$|[\\s\\S])*?\\/\\$/,\n        greedy: true\n      },\n      {\n        pattern: /([\"'\\/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }\n    ],\n    number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?[\\d]+)?)[glidf]?\\b/i,\n    operator: {\n      pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.{1,2}(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n      lookbehind: true\n    },\n    punctuation: /\\.+|[{}[\\];(),:$]/\n  })\n  Prism.languages.insertBefore('groovy', 'string', {\n    shebang: {\n      pattern: /#!.+/,\n      alias: 'comment'\n    }\n  })\n  Prism.languages.insertBefore('groovy', 'punctuation', {\n    'spock-block': /\\b(?:setup|given|when|then|and|cleanup|expect|where):/\n  })\n  Prism.languages.insertBefore('groovy', 'function', {\n    annotation: {\n      alias: 'punctuation',\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true\n    }\n  }) // Handle string interpolation\n  Prism.hooks.add('wrap', function(env) {\n    if (env.language === 'groovy' && env.type === 'string') {\n      var delimiter = env.content.value[0]\n      if (delimiter != \"'\") {\n        var pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/\n        if (delimiter === '$') {\n          pattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/\n        } // To prevent double HTML-encoding we have to decode env.content first\n        env.content.value = env.content.value\n          .replace(/&lt;/g, '<')\n          .replace(/&amp;/g, '&')\n        env.content = Prism.highlight(env.content.value, {\n          expression: {\n            pattern: pattern,\n            lookbehind: true,\n            inside: Prism.languages.groovy\n          }\n        })\n        env.classes.push(delimiter === '/' ? 'regex' : 'gstring')\n      }\n    }\n  })\n}\n"],"names":["groovy_1","groovy","Prism","env","delimiter","pattern"],"mappings":"gbAEAA,EAAiBC,EACjBA,EAAO,YAAc,SACrBA,EAAO,QAAU,CAAE,EACnB,SAASA,EAAOC,EAAO,CACrBA,EAAM,UAAU,OAASA,EAAM,UAAU,OAAO,QAAS,CACvD,QAAS,6WACT,OAAQ,CACN,CACE,QAAS,sDACT,OAAQ,EACT,EACD,CACE,QAAS,qCACT,OAAQ,EACT,CACF,EACD,OAAQ,+FACR,SAAU,CACR,QAAS,uJACT,WAAY,EACb,EACD,YAAa,mBACjB,CAAG,EACDA,EAAM,UAAU,aAAa,SAAU,SAAU,CAC/C,QAAS,CACP,QAAS,OACT,MAAO,SACR,CACL,CAAG,EACDA,EAAM,UAAU,aAAa,SAAU,cAAe,CACpD,cAAe,uDACnB,CAAG,EACDA,EAAM,UAAU,aAAa,SAAU,WAAY,CACjD,WAAY,CACV,MAAO,cACP,QAAS,eACT,WAAY,EACb,CACL,CAAG,EACDA,EAAM,MAAM,IAAI,OAAQ,SAASC,EAAK,CACpC,GAAIA,EAAI,WAAa,UAAYA,EAAI,OAAS,SAAU,CACtD,IAAIC,EAAYD,EAAI,QAAQ,MAAM,CAAC,EACnC,GAAIC,GAAa,IAAK,CACpB,IAAIC,EAAU,kCACVD,IAAc,MAChBC,EAAU,mCAEZF,EAAI,QAAQ,MAAQA,EAAI,QAAQ,MAC7B,QAAQ,QAAS,GAAG,EACpB,QAAQ,SAAU,GAAG,EACxBA,EAAI,QAAUD,EAAM,UAAUC,EAAI,QAAQ,MAAO,CAC/C,WAAY,CACV,QAASE,EACT,WAAY,GACZ,OAAQH,EAAM,UAAU,MACzB,CACX,CAAS,EACDC,EAAI,QAAQ,KAAKC,IAAc,IAAM,QAAU,SAAS,CACzD,CACF,CACL,CAAG,CACH","x_google_ignoreList":[0]}