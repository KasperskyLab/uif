{"version":3,"file":"prolog-f132116e.js","sources":["../../../node_modules/refractor/lang/prolog.js"],"sourcesContent":["'use strict'\n\nmodule.exports = prolog\nprolog.displayName = 'prolog'\nprolog.aliases = []\nfunction prolog(Prism) {\n  Prism.languages.prolog = {\n    // Syntax depends on the implementation\n    comment: [/%.+/, /\\/\\*[\\s\\S]*?\\*\\//],\n    // Depending on the implementation, strings may allow escaped newlines and quote-escape\n    string: {\n      pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n    variable: /\\b[A-Z_]\\w*/,\n    // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n    function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n    number: /\\b\\d+\\.?\\d*/,\n    // Custom operators are allowed\n    operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n    punctuation: /[(){}\\[\\],]/\n  }\n}\n"],"names":["prolog_1","prolog","Prism"],"mappings":"gbAEAA,EAAiBC,EACjBA,EAAO,YAAc,SACrBA,EAAO,QAAU,CAAE,EACnB,SAASA,EAAOC,EAAO,CACrBA,EAAM,UAAU,OAAS,CAEvB,QAAS,CAAC,MAAO,kBAAkB,EAEnC,OAAQ,CACN,QAAS,sDACT,OAAQ,EACT,EACD,QAAS,6BACT,SAAU,cAEV,SAAU,6BACV,OAAQ,cAER,SAAU,iDACV,YAAa,aACd,CACH","x_google_ignoreList":[0]}