{"version":3,"file":"soy-01c36653.js","sources":["../../../node_modules/refractor/lang/soy.js"],"sourcesContent":["'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = soy\nsoy.displayName = 'soy'\nsoy.aliases = []\nfunction soy(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function(Prism) {\n    var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/\n    Prism.languages.soy = {\n      comment: [\n        /\\/\\*[\\s\\S]*?\\*\\//,\n        {\n          pattern: /(\\s)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'command-arg': {\n        pattern: /({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      parameter: {\n        pattern: /({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      keyword: [\n        {\n          pattern: /({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n          lookbehind: true\n        },\n        /\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/\n      ],\n      delimiter: {\n        pattern: /^{+\\/?|\\/?}+$/,\n        alias: 'punctuation'\n      },\n      property: /\\w+(?==)/,\n      variable: {\n        pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,\n        inside: {\n          string: {\n            pattern: stringPattern,\n            greedy: true\n          },\n          number: numberPattern,\n          punctuation: /[\\[\\].?]/\n        }\n      },\n      string: {\n        pattern: stringPattern,\n        greedy: true\n      },\n      function: [\n        /\\w+(?=\\()/,\n        {\n          pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n          lookbehind: true\n        }\n      ],\n      boolean: /\\b(?:true|false)\\b/,\n      number: numberPattern,\n      operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n      punctuation: /[{}()\\[\\]|.,:]/\n    } // Tokenize all inline Soy expressions\n    Prism.hooks.add('before-tokenize', function(env) {\n      var soyPattern = /{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g\n      var soyLitteralStart = '{literal}'\n      var soyLitteralEnd = '{/literal}'\n      var soyLitteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'soy',\n        soyPattern,\n        function(match) {\n          // Soy tags inside {literal} block are ignored\n          if (match === soyLitteralEnd) {\n            soyLitteralMode = false\n          }\n          if (!soyLitteralMode) {\n            if (match === soyLitteralStart) {\n              soyLitteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    }) // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function(env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy')\n    })\n  })(Prism)\n}\n"],"names":["refractorMarkupTemplating","require$$0","soy_1","soy","Prism","stringPattern","numberPattern","env","soyPattern","soyLitteralStart","soyLitteralEnd","soyLitteralMode","match"],"mappings":"+dACA,IAAIA,EAA4BC,EAAiC,EACjEC,EAAiBC,EACjBA,EAAI,YAAc,MAClBA,EAAI,QAAU,CAAE,EAChB,SAASA,EAAIC,EAAO,CAClBA,EAAM,SAASJ,CAAyB,EACtC,SAASI,EAAO,CAChB,IAAIC,EAAgB,iDAChBC,EAAgB,oDACpBF,EAAM,UAAU,IAAM,CACpB,QAAS,CACP,mBACA,CACE,QAAS,aACT,WAAY,GACZ,OAAQ,EACT,CACF,EACD,cAAe,CACb,QAAS,yFACT,WAAY,GACZ,MAAO,SACP,OAAQ,CACN,YAAa,IACd,CACF,EACD,UAAW,CACT,QAAS,mCACT,WAAY,GACZ,MAAO,UACR,EACD,QAAS,CACP,CACE,QAAS,kNACT,WAAY,EACb,EACD,yFACD,EACD,UAAW,CACT,QAAS,gBACT,MAAO,aACR,EACD,SAAU,WACV,SAAU,CACR,QAAS,0CACT,OAAQ,CACN,OAAQ,CACN,QAASC,EACT,OAAQ,EACT,EACD,OAAQC,EACR,YAAa,UACd,CACF,EACD,OAAQ,CACN,QAASD,EACT,OAAQ,EACT,EACD,SAAU,CACR,YACA,CACE,QAAS,oBACT,WAAY,EACb,CACF,EACD,QAAS,qBACT,OAAQC,EACR,SAAU,iDACV,YAAa,gBACd,EACDF,EAAM,MAAM,IAAI,kBAAmB,SAASG,EAAK,CAC/C,IAAIC,EAAa,2CACbC,EAAmB,YACnBC,EAAiB,aACjBC,EAAkB,GACtBP,EAAM,UAAU,mBAAmB,EAAE,kBACnCG,EACA,MACAC,EACA,SAASI,EAAO,CAKd,OAHIA,IAAUF,IACZC,EAAkB,IAEfA,EAME,IALDC,IAAUH,IACZE,EAAkB,IAEb,GAGV,CACF,CACP,CAAK,EACDP,EAAM,MAAM,IAAI,iBAAkB,SAASG,EAAK,CAC9CH,EAAM,UAAU,mBAAmB,EAAE,qBAAqBG,EAAK,KAAK,CAC1E,CAAK,CACF,EAAEH,CAAK,CACV","x_google_ignoreList":[0]}